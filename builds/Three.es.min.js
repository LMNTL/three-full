function Vector4(e,t,r,n){this.x=e||0,this.y=t||0,this.z=r||0,this.w=void 0!==n?n:1}function Matrix4(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("Matrix4: the constructor no longer reads arguments. use .set() instead.")}function Quaternion(e,t,r,n){this._x=e||0,this._y=t||0,this._z=r||0,this._w=void 0!==n?n:1}function Vector3(e,t,r){this.x=e||0,this.y=t||0,this.z=r||0}function Vector2(e,t){this.x=e||0,this.y=t||0}function Color(e,t,r){return void 0===t&&void 0===r?this.set(e):this.setRGB(e,t,r)}function BufferAttribute(e,t,r){if(Array.isArray(e))throw new TypeError("BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===r,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}function Int8BufferAttribute(e,t,r){BufferAttribute.call(this,new Int8Array(e),t,r)}function Uint8BufferAttribute(e,t,r){BufferAttribute.call(this,new Uint8Array(e),t,r)}function Uint8ClampedBufferAttribute(e,t,r){BufferAttribute.call(this,new Uint8ClampedArray(e),t,r)}function Int16BufferAttribute(e,t,r){BufferAttribute.call(this,new Int16Array(e),t,r)}function Uint16BufferAttribute(e,t,r){BufferAttribute.call(this,new Uint16Array(e),t,r)}function Int32BufferAttribute(e,t,r){BufferAttribute.call(this,new Int32Array(e),t,r)}function Uint32BufferAttribute(e,t,r){BufferAttribute.call(this,new Uint32Array(e),t,r)}function Float32BufferAttribute(e,t,r){BufferAttribute.call(this,new Float32Array(e),t,r)}function Float64BufferAttribute(e,t,r){BufferAttribute.call(this,new Float64Array(e),t,r)}function Sphere(e,t){this.center=void 0!==e?e:new Vector3,this.radius=void 0!==t?t:0}function Box3(e,t){this.min=void 0!==e?e:new Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new Vector3(-1/0,-1/0,-1/0)}function EventDispatcher(){}function DirectGeometry(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}function Euler(e,t,r,n){this._x=e||0,this._y=t||0,this._z=r||0,this._order=n||Euler.DefaultOrder}function Layers(){this.mask=1}function Matrix3(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("Matrix3: the constructor no longer reads arguments. use .set() instead.")}function Object3D(){function e(){i.setFromEuler(n,!1)}function t(){n.setFromQuaternion(i,void 0,!1)}Object.defineProperty(this,"id",{value:object3DId++}),this.uuid=_Math.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Object3D.DefaultUp.clone();var r=new Vector3,n=new Euler,i=new Quaternion,a=new Vector3(1,1,1);n.onChange(e),i.onChange(t),Object.defineProperties(this,{position:{enumerable:!0,value:r},rotation:{enumerable:!0,value:n},quaternion:{enumerable:!0,value:i},scale:{enumerable:!0,value:a},modelViewMatrix:{value:new Matrix4},normalMatrix:{value:new Matrix3}}),this.matrix=new Matrix4,this.matrixWorld=new Matrix4,this.matrixAutoUpdate=Object3D.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Layers,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}function arrayMax(e){if(0===e.length)return-1/0;for(var t=e[0],r=1,n=e.length;r<n;++r)e[r]>t&&(t=e[r]);return t}function BufferGeometry(){Object.defineProperty(this,"id",{value:bufferGeometryId+=2}),this.uuid=_Math.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0}}function Camera(){Object3D.call(this),this.type="Camera",this.matrixWorldInverse=new Matrix4,this.projectionMatrix=new Matrix4}function PerspectiveCamera(e,t,r,n){Camera.call(this),this.type="PerspectiveCamera",this.fov=void 0!==e?e:50,this.zoom=1,this.near=void 0!==r?r:.1,this.far=void 0!==n?n:2e3,this.focus=10,this.aspect=void 0!==t?t:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}function Material(){Object.defineProperty(this,"id",{value:materialId++}),this.uuid=_Math.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.lights=!0,this.blending=NormalBlending,this.side=FrontSide,this.flatShading=!1,this.vertexColors=NoColors,this.opacity=1,this.transparent=!1,this.blendSrc=SrcAlphaFactor,this.blendDst=OneMinusSrcAlphaFactor,this.blendEquation=AddEquation,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=LessEqualDepth,this.depthTest=!0,this.depthWrite=!0,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.overdraw=0,this.visible=!0,this.userData={},this.needsUpdate=!0}function MeshDepthMaterial(e){Material.call(this),this.type="MeshDepthMaterial",this.depthPacking=BasicDepthPacking,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.setValues(e)}function Scene(){Object3D.call(this),this.type="Scene",this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0}function OrthographicCamera(e,t,r,n,i,a){Camera.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=r,this.bottom=n,this.near=void 0!==i?i:.1,this.far=void 0!==a?a:2e3,this.updateProjectionMatrix()}function Texture(e,t,r,n,i,a,o,s,c,l){Object.defineProperty(this,"id",{value:textureId++}),this.uuid=_Math.generateUUID(),this.name="",this.image=void 0!==e?e:Texture.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==t?t:Texture.DEFAULT_MAPPING,this.wrapS=void 0!==r?r:ClampToEdgeWrapping,this.wrapT=void 0!==n?n:ClampToEdgeWrapping,this.magFilter=void 0!==i?i:LinearFilter,this.minFilter=void 0!==a?a:LinearMipMapLinearFilter,this.anisotropy=void 0!==c?c:1,this.format=void 0!==o?o:RGBAFormat,this.type=void 0!==s?s:UnsignedByteType,this.offset=new Vector2(0,0),this.repeat=new Vector2(1,1),this.center=new Vector2(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Matrix3,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==l?l:LinearEncoding,this.version=0,this.onUpdate=null}function WebGLRenderTarget(e,t,r){this.width=e,this.height=t,this.scissor=new Vector4(0,0,e,t),this.scissorTest=!1,this.viewport=new Vector4(0,0,e,t),void 0===(r=r||{}).minFilter&&(r.minFilter=LinearFilter),this.texture=new Texture(void 0,void 0,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.encoding),this.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,this.stencilBuffer=void 0===r.stencilBuffer||r.stencilBuffer,this.depthTexture=void 0!==r.depthTexture?r.depthTexture:null}function ShaderMaterial(e){Material.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,void 0!==e&&(void 0!==e.attributes&&console.error("ShaderMaterial: attributes should now be defined in BufferGeometry instead."),this.setValues(e))}function Ray(e,t){this.origin=void 0!==e?e:new Vector3,this.direction=void 0!==t?t:new Vector3}function Line3(e,t){this.start=void 0!==e?e:new Vector3,this.end=void 0!==t?t:new Vector3}function Plane(e,t){this.normal=void 0!==e?e:new Vector3(1,0,0),this.constant=void 0!==t?t:0}function Triangle(e,t,r){this.a=void 0!==e?e:new Vector3,this.b=void 0!==t?t:new Vector3,this.c=void 0!==r?r:new Vector3}function Face3(e,t,r,n,i,a){this.a=e,this.b=t,this.c=r,this.normal=n&&n.isVector3?n:new Vector3,this.vertexNormals=Array.isArray(n)?n:[],this.color=i&&i.isColor?i:new Color,this.vertexColors=Array.isArray(i)?i:[],this.materialIndex=void 0!==a?a:0}function MeshBasicMaterial(e){Material.call(this),this.type="MeshBasicMaterial",this.color=new Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.lights=!1,this.setValues(e)}function Mesh(e,t){Object3D.call(this),this.type="Mesh",this.geometry=void 0!==e?e:new BufferGeometry,this.material=void 0!==t?t:new MeshBasicMaterial({color:16777215*Math.random()}),this.drawMode=TrianglesDrawMode,this.updateMorphTargets()}function Geometry(){Object.defineProperty(this,"id",{value:geometryId+=2}),this.uuid=_Math.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}function PlaneGeometry(e,t,r,n){Geometry.call(this),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:n},this.fromBufferGeometry(new PlaneBufferGeometry(e,t,r,n)),this.mergeVertices()}function PlaneBufferGeometry(e,t,r,n){BufferGeometry.call(this),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:n};var i,a,o=(e=e||1)/2,s=(t=t||1)/2,c=Math.floor(r)||1,l=Math.floor(n)||1,u=c+1,h=l+1,p=e/c,d=t/l,f=[],m=[],v=[],g=[];for(a=0;a<h;a++){var y=a*d-s;for(i=0;i<u;i++){var x=i*p-o;m.push(x,-y,0),v.push(0,0,1),g.push(i/c),g.push(1-a/l)}}for(a=0;a<l;a++)for(i=0;i<c;i++){var b=i+u*a,_=i+u*(a+1),M=i+1+u*(a+1),w=i+1+u*a;f.push(b,_,w),f.push(_,M,w)}this.setIndex(f),this.addAttribute("position",new Float32BufferAttribute(m,3)),this.addAttribute("normal",new Float32BufferAttribute(v,3)),this.addAttribute("uv",new Float32BufferAttribute(g,2))}function Spherical(e,t,r){return this.radius=void 0!==e?e:1,this.phi=void 0!==t?t:0,this.theta=void 0!==r?r:0,this}function InstancedBufferGeometry(){BufferGeometry.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0}function InterleavedBuffer(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}function InstancedInterleavedBuffer(e,t,r){InterleavedBuffer.call(this,e,t),this.meshPerAttribute=r||1}function InterleavedBufferAttribute(e,t,r,n){this.data=e,this.itemSize=t,this.offset=r,this.normalized=!0===n}function WireframeGeometry(e){BufferGeometry.call(this),this.type="WireframeGeometry";var t,r,n,i,a,o,s,c,l,u,h=[],p=[0,0],d={},f=["a","b","c"];if(e&&e.isGeometry){var m=e.faces;for(t=0,n=m.length;t<n;t++){var v=m[t];for(r=0;r<3;r++)s=v[f[r]],c=v[f[(r+1)%3]],p[0]=Math.min(s,c),p[1]=Math.max(s,c),void 0===d[l=p[0]+","+p[1]]&&(d[l]={index1:p[0],index2:p[1]})}for(l in d)o=d[l],u=e.vertices[o.index1],h.push(u.x,u.y,u.z),u=e.vertices[o.index2],h.push(u.x,u.y,u.z)}else if(e&&e.isBufferGeometry){var g,y,x,b,_,M,w;if(u=new Vector3,null!==e.index){for(g=e.attributes.position,y=e.index,0===(x=e.groups).length&&(x=[{start:0,count:y.count,materialIndex:0}]),i=0,a=x.length;i<a;++i)for(t=_=(b=x[i]).start,n=_+b.count;t<n;t+=3)for(r=0;r<3;r++)s=y.getX(t+r),c=y.getX(t+(r+1)%3),p[0]=Math.min(s,c),p[1]=Math.max(s,c),void 0===d[l=p[0]+","+p[1]]&&(d[l]={index1:p[0],index2:p[1]});for(l in d)o=d[l],u.fromBufferAttribute(g,o.index1),h.push(u.x,u.y,u.z),u.fromBufferAttribute(g,o.index2),h.push(u.x,u.y,u.z)}else for(t=0,n=(g=e.attributes.position).count/3;t<n;t++)for(r=0;r<3;r++)M=3*t+r,u.fromBufferAttribute(g,M),h.push(u.x,u.y,u.z),w=3*t+(r+1)%3,u.fromBufferAttribute(g,w),h.push(u.x,u.y,u.z)}this.addAttribute("position",new Float32BufferAttribute(h,3))}function LoadingManager(e,t,r){var n=this,i=!1,a=0,o=0,s=void 0;this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=r,this.itemStart=function(e){o++,!1===i&&void 0!==n.onStart&&n.onStart(e,a,o),i=!0},this.itemEnd=function(e){a++,void 0!==n.onProgress&&n.onProgress(e,a,o),a===o&&(i=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(e){void 0!==n.onError&&n.onError(e)},this.resolveURL=function(e){return s?s(e):e},this.setURLModifier=function(e){return s=e,this}}function FileLoader(e){this.manager=void 0!==e?e:DefaultLoadingManager}function Frustum(e,t,r,n,i,a){this.planes=[void 0!==e?e:new Plane,void 0!==t?t:new Plane,void 0!==r?r:new Plane,void 0!==n?n:new Plane,void 0!==i?i:new Plane,void 0!==a?a:new Plane]}function Light(e,t){Object3D.call(this),this.type="Light",this.color=new Color(e),this.intensity=void 0!==t?t:1,this.receiveShadow=void 0}function LineBasicMaterial(e){Material.call(this),this.type="LineBasicMaterial",this.color=new Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.lights=!1,this.setValues(e)}function Line(e,t,r){1===r&&console.error("Line: parameter LinePieces no longer supported. Created LineSegments instead."),Object3D.call(this),this.type="Line",this.geometry=void 0!==e?e:new BufferGeometry,this.material=void 0!==t?t:new LineBasicMaterial({color:16777215*Math.random()})}function PointsMaterial(e){Material.call(this),this.type="PointsMaterial",this.color=new Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.lights=!1,this.setValues(e)}function Points(e,t){Object3D.call(this),this.type="Points",this.geometry=void 0!==e?e:new BufferGeometry,this.material=void 0!==t?t:new PointsMaterial({color:16777215*Math.random()})}function SpriteMaterial(e){Material.call(this),this.type="SpriteMaterial",this.color=new Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.lights=!1,this.setValues(e)}function Sprite(e){Object3D.call(this),this.type="Sprite",this.material=void 0!==e?e:new SpriteMaterial,this.center=new Vector2(.5,.5)}function LineSegments(e,t){Line.call(this,e,t),this.type="LineSegments"}function Box2(e,t){this.min=void 0!==e?e:new Vector2(1/0,1/0),this.max=void 0!==t?t:new Vector2(-1/0,-1/0)}function CompressedTexture(e,t,r,n,i,a,o,s,c,l,u,h){Texture.call(this,null,a,o,s,c,l,n,i,u,h),this.image={width:t,height:r},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}function DataTexture(e,t,r,n,i,a,o,s,c,l,u,h){Texture.call(this,null,a,o,s,c,l,n,i,u,h),this.image={data:e,width:t,height:r},this.magFilter=void 0!==c?c:NearestFilter,this.minFilter=void 0!==l?l:NearestFilter,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}function MeshLambertMaterial(e){Material.call(this),this.type="MeshLambertMaterial",this.color=new Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function MeshPhongMaterial(e){Material.call(this),this.type="MeshPhongMaterial",this.color=new Color(16777215),this.specular=new Color(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Clock(e){this.autoStart=void 0===e||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}function InstancedBufferAttribute(e,t,r){BufferAttribute.call(this,e,t),this.meshPerAttribute=r||1}function linkedList(e,t,r,n,i){var a,o;if(i===signedArea(e,t,r,n)>0)for(a=t;a<r;a+=n)o=insertNode(a,e[a],e[a+1],o);else for(a=r-n;a>=t;a-=n)o=insertNode(a,e[a],e[a+1],o);return o&&equals(o,o.next)&&(removeNode(o),o=o.next),o}function filterPoints(e,t){if(!e)return e;t||(t=e);var r,n=e;do{if(r=!1,n.steiner||!equals(n,n.next)&&0!==area(n.prev,n,n.next))n=n.next;else{if(removeNode(n),(n=t=n.prev)===n.next)break;r=!0}}while(r||n!==t);return t}function earcutLinked(e,t,r,n,i,a,o){if(e){!o&&a&&indexCurve(e,n,i,a);for(var s,c,l=e;e.prev!==e.next;)if(s=e.prev,c=e.next,a?isEarHashed(e,n,i,a):isEar(e))t.push(s.i/r),t.push(e.i/r),t.push(c.i/r),removeNode(e),e=c.next,l=c.next;else if((e=c)===l){o?1===o?earcutLinked(e=cureLocalIntersections(e,t,r),t,r,n,i,a,2):2===o&&splitEarcut(e,t,r,n,i,a):earcutLinked(filterPoints(e),t,r,n,i,a,1);break}}}function isEar(e){var t=e.prev,r=e,n=e.next;if(area(t,r,n)>=0)return!1;for(var i=e.next.next;i!==e.prev;){if(pointInTriangle(t.x,t.y,r.x,r.y,n.x,n.y,i.x,i.y)&&area(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function isEarHashed(e,t,r,n){var i=e.prev,a=e,o=e.next;if(area(i,a,o)>=0)return!1;for(var s=i.x<a.x?i.x<o.x?i.x:o.x:a.x<o.x?a.x:o.x,c=i.y<a.y?i.y<o.y?i.y:o.y:a.y<o.y?a.y:o.y,l=i.x>a.x?i.x>o.x?i.x:o.x:a.x>o.x?a.x:o.x,u=i.y>a.y?i.y>o.y?i.y:o.y:a.y>o.y?a.y:o.y,h=zOrder(s,c,t,r,n),p=zOrder(l,u,t,r,n),d=e.nextZ;d&&d.z<=p;){if(d!==e.prev&&d!==e.next&&pointInTriangle(i.x,i.y,a.x,a.y,o.x,o.y,d.x,d.y)&&area(d.prev,d,d.next)>=0)return!1;d=d.nextZ}for(d=e.prevZ;d&&d.z>=h;){if(d!==e.prev&&d!==e.next&&pointInTriangle(i.x,i.y,a.x,a.y,o.x,o.y,d.x,d.y)&&area(d.prev,d,d.next)>=0)return!1;d=d.prevZ}return!0}function cureLocalIntersections(e,t,r){var n=e;do{var i=n.prev,a=n.next.next;!equals(i,a)&&intersects(i,n,n.next,a)&&locallyInside(i,a)&&locallyInside(a,i)&&(t.push(i.i/r),t.push(n.i/r),t.push(a.i/r),removeNode(n),removeNode(n.next),n=e=a),n=n.next}while(n!==e);return n}function splitEarcut(e,t,r,n,i,a){var o=e;do{for(var s=o.next.next;s!==o.prev;){if(o.i!==s.i&&isValidDiagonal(o,s)){var c=splitPolygon(o,s);return o=filterPoints(o,o.next),c=filterPoints(c,c.next),earcutLinked(o,t,r,n,i,a),void earcutLinked(c,t,r,n,i,a)}s=s.next}o=o.next}while(o!==e)}function eliminateHoles(e,t,r,n){var i,a,o,s=[];for(i=0,a=t.length;i<a;i++)(o=linkedList(e,t[i]*n,i<a-1?t[i+1]*n:e.length,n,!1))===o.next&&(o.steiner=!0),s.push(getLeftmost(o));for(s.sort(compareX),i=0;i<s.length;i++)eliminateHole(s[i],r),r=filterPoints(r,r.next);return r}function compareX(e,t){return e.x-t.x}function eliminateHole(e,t){if(t=findHoleBridge(e,t)){var r=splitPolygon(t,e);filterPoints(r,r.next)}}function findHoleBridge(e,t){var r,n=t,i=e.x,a=e.y,o=-1/0;do{if(a<=n.y&&a>=n.next.y&&n.next.y!==n.y){var s=n.x+(a-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(s<=i&&s>o){if(o=s,s===i){if(a===n.y)return n;if(a===n.next.y)return n.next}r=n.x<n.next.x?n:n.next}}n=n.next}while(n!==t);if(!r)return null;if(i===o)return r.prev;var c,l=r,u=r.x,h=r.y,p=1/0;for(n=r.next;n!==l;)i>=n.x&&n.x>=u&&i!==n.x&&pointInTriangle(a<h?i:o,a,u,h,a<h?o:i,a,n.x,n.y)&&((c=Math.abs(a-n.y)/(i-n.x))<p||c===p&&n.x>r.x)&&locallyInside(n,e)&&(r=n,p=c),n=n.next;return r}function indexCurve(e,t,r,n){var i=e;do{null===i.z&&(i.z=zOrder(i.x,i.y,t,r,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==e);i.prevZ.nextZ=null,i.prevZ=null,sortLinked(i)}function sortLinked(e){var t,r,n,i,a,o,s,c,l=1;do{for(r=e,e=null,a=null,o=0;r;){for(o++,n=r,s=0,t=0;t<l&&(s++,n=n.nextZ);t++);for(c=l;s>0||c>0&&n;)0!==s&&(0===c||!n||r.z<=n.z)?(i=r,r=r.nextZ,s--):(i=n,n=n.nextZ,c--),a?a.nextZ=i:e=i,i.prevZ=a,a=i;r=n}a.nextZ=null,l*=2}while(o>1);return e}function zOrder(e,t,r,n,i){return e=32767*(e-r)*i,t=32767*(t-n)*i,e=16711935&(e|e<<8),e=252645135&(e|e<<4),e=858993459&(e|e<<2),e=1431655765&(e|e<<1),t=16711935&(t|t<<8),t=252645135&(t|t<<4),t=858993459&(t|t<<2),t=1431655765&(t|t<<1),e|t<<1}function getLeftmost(e){var t=e,r=e;do{t.x<r.x&&(r=t),t=t.next}while(t!==e);return r}function pointInTriangle(e,t,r,n,i,a,o,s){return(i-o)*(t-s)-(e-o)*(a-s)>=0&&(e-o)*(n-s)-(r-o)*(t-s)>=0&&(r-o)*(a-s)-(i-o)*(n-s)>=0}function isValidDiagonal(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!intersectsPolygon(e,t)&&locallyInside(e,t)&&locallyInside(t,e)&&middleInside(e,t)}function area(e,t,r){return(t.y-e.y)*(r.x-t.x)-(t.x-e.x)*(r.y-t.y)}function equals(e,t){return e.x===t.x&&e.y===t.y}function intersects(e,t,r,n){return!!(equals(e,t)&&equals(r,n)||equals(e,n)&&equals(r,t))||area(e,t,r)>0!=area(e,t,n)>0&&area(r,n,e)>0!=area(r,n,t)>0}function intersectsPolygon(e,t){var r=e;do{if(r.i!==e.i&&r.next.i!==e.i&&r.i!==t.i&&r.next.i!==t.i&&intersects(r,r.next,e,t))return!0;r=r.next}while(r!==e);return!1}function locallyInside(e,t){return area(e.prev,e,e.next)<0?area(e,t,e.next)>=0&&area(e,e.prev,t)>=0:area(e,t,e.prev)<0||area(e,e.next,t)<0}function middleInside(e,t){var r=e,n=!1,i=(e.x+t.x)/2,a=(e.y+t.y)/2;do{r.y>a!=r.next.y>a&&r.next.y!==r.y&&i<(r.next.x-r.x)*(a-r.y)/(r.next.y-r.y)+r.x&&(n=!n),r=r.next}while(r!==e);return n}function splitPolygon(e,t){var r=new Node(e.i,e.x,e.y),n=new Node(t.i,t.x,t.y),i=e.next,a=t.prev;return e.next=t,t.prev=e,r.next=i,i.prev=r,n.next=r,r.prev=n,a.next=n,n.prev=a,n}function insertNode(e,t,r,n){var i=new Node(e,t,r);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function removeNode(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function Node(e,t,r){this.i=e,this.x=t,this.y=r,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function signedArea(e,t,r,n){for(var i=0,a=t,o=r-n;a<r;a+=n)i+=(e[o]-e[a])*(e[a+1]+e[o+1]),o=a;return i}function removeDupEndPts(e){var t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function addContour(e,t){for(var r=0;r<t.length;r++)e.push(t[r].x),e.push(t[r].y)}function BoxGeometry(e,t,r,n,i,a){Geometry.call(this),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:n,heightSegments:i,depthSegments:a},this.fromBufferGeometry(new BoxBufferGeometry(e,t,r,n,i,a)),this.mergeVertices()}function BoxBufferGeometry(e,t,r,n,i,a){function o(e,t,r,n,i,a,o,f,m,v,g){var y,x,b=a/m,_=o/v,M=a/2,w=o/2,S=f/2,L=m+1,T=v+1,C=0,A=0,E=new Vector3;for(x=0;x<T;x++){var P=x*_-w;for(y=0;y<L;y++){var B=y*b-M;E[e]=B*n,E[t]=P*i,E[r]=S,l.push(E.x,E.y,E.z),E[e]=0,E[t]=0,E[r]=f>0?1:-1,u.push(E.x,E.y,E.z),h.push(y/m),h.push(1-x/v),C+=1}}for(x=0;x<v;x++)for(y=0;y<m;y++){var D=p+y+L*x,R=p+y+L*(x+1),U=p+(y+1)+L*(x+1),N=p+(y+1)+L*x;c.push(D,R,N),c.push(R,U,N),A+=6}s.addGroup(d,A,g),d+=A,p+=C}BufferGeometry.call(this),this.type="BoxBufferGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:n,heightSegments:i,depthSegments:a};var s=this;e=e||1,t=t||1,r=r||1,n=Math.floor(n)||1,i=Math.floor(i)||1;var c=[],l=[],u=[],h=[],p=0,d=0;o("z","y","x",-1,-1,r,t,e,a=Math.floor(a)||1,i,0),o("z","y","x",1,-1,r,t,-e,a,i,1),o("x","z","y",1,1,e,r,t,n,a,2),o("x","z","y",1,-1,e,r,-t,n,a,3),o("x","y","z",1,-1,e,t,r,n,i,4),o("x","y","z",-1,-1,e,t,-r,n,i,5),this.setIndex(c),this.addAttribute("position",new Float32BufferAttribute(l,3)),this.addAttribute("normal",new Float32BufferAttribute(u,3)),this.addAttribute("uv",new Float32BufferAttribute(h,2))}function SphereGeometry(e,t,r,n,i,a,o){Geometry.call(this),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:n,phiLength:i,thetaStart:a,thetaLength:o},this.fromBufferGeometry(new SphereBufferGeometry(e,t,r,n,i,a,o)),this.mergeVertices()}function SphereBufferGeometry(e,t,r,n,i,a,o){BufferGeometry.call(this),this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:n,phiLength:i,thetaStart:a,thetaLength:o},e=e||1,t=Math.max(3,Math.floor(t)||8),r=Math.max(2,Math.floor(r)||6),n=void 0!==n?n:0,i=void 0!==i?i:2*Math.PI;var s,c,l=(a=void 0!==a?a:0)+(o=void 0!==o?o:Math.PI),u=0,h=[],p=new Vector3,d=new Vector3,f=[],m=[],v=[],g=[];for(c=0;c<=r;c++){var y=[],x=c/r;for(s=0;s<=t;s++){var b=s/t;p.x=-e*Math.cos(n+b*i)*Math.sin(a+x*o),p.y=e*Math.cos(a+x*o),p.z=e*Math.sin(n+b*i)*Math.sin(a+x*o),m.push(p.x,p.y,p.z),d.set(p.x,p.y,p.z).normalize(),v.push(d.x,d.y,d.z),g.push(b,1-x),y.push(u++)}h.push(y)}for(c=0;c<r;c++)for(s=0;s<t;s++){var _=h[c][s+1],M=h[c][s],w=h[c+1][s],S=h[c+1][s+1];(0!==c||a>0)&&f.push(_,M,S),(c!==r-1||l<Math.PI)&&f.push(M,w,S)}this.setIndex(f),this.addAttribute("position",new Float32BufferAttribute(m,3)),this.addAttribute("normal",new Float32BufferAttribute(v,3)),this.addAttribute("uv",new Float32BufferAttribute(g,2))}function AmbientLight(e,t){Light.call(this,e,t),this.type="AmbientLight",this.castShadow=void 0}function LightShadow(e){this.camera=e,this.bias=0,this.radius=1,this.mapSize=new Vector2(512,512),this.map=null,this.matrix=new Matrix4}function PointLight(e,t,r,n){Light.call(this,e,t),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(e){this.intensity=e/(4*Math.PI)}}),this.distance=void 0!==r?r:0,this.decay=void 0!==n?n:1,this.shadow=new LightShadow(new PerspectiveCamera(90,1,.5,500))}function SpotLightShadow(){LightShadow.call(this,new PerspectiveCamera(50,1,.5,500))}function SpotLight(e,t,r,n,i,a){Light.call(this,e,t),this.type="SpotLight",this.position.copy(Object3D.DefaultUp),this.updateMatrix(),this.target=new Object3D,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(e){this.intensity=e/Math.PI}}),this.distance=void 0!==r?r:0,this.angle=void 0!==n?n:Math.PI/3,this.penumbra=void 0!==i?i:0,this.decay=void 0!==a?a:1,this.shadow=new SpotLightShadow}function BufferGeometryLoader(e){this.manager=void 0!==e?e:DefaultLoadingManager}function ImageLoader(e){this.manager=void 0!==e?e:DefaultLoadingManager}function LineDashedMaterial(e){LineBasicMaterial.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}function MeshDistanceMaterial(e){Material.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new Vector3,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.lights=!1,this.setValues(e)}function MeshNormalMaterial(e){Material.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function MeshStandardMaterial(e){Material.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Color(16777215),this.roughness=.5,this.metalness=.5,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function MeshPhysicalMaterial(e){MeshStandardMaterial.call(this),this.defines={PHYSICAL:""},this.type="MeshPhysicalMaterial",this.reflectivity=.5,this.clearCoat=0,this.clearCoatRoughness=0,this.setValues(e)}function MeshToonMaterial(e){MeshPhongMaterial.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.gradientMap=null,this.setValues(e)}function RawShaderMaterial(e){ShaderMaterial.call(this,e),this.type="RawShaderMaterial"}function ShadowMaterial(e){Material.call(this),this.type="ShadowMaterial",this.color=new Color(0),this.transparent=!0,this.setValues(e)}function MaterialLoader(e){this.manager=void 0!==e?e:DefaultLoadingManager,this.textures={}}function TextureLoader(e){this.manager=void 0!==e?e:DefaultLoadingManager}function Loader(){}function StringKeyframeTrack(e,t,r,n){KeyframeTrack.call(this,e,t,r,n)}function BooleanKeyframeTrack(e,t,r){KeyframeTrack.call(this,e,t,r)}function Interpolant(e,t,r,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new t.constructor(r),this.sampleValues=t,this.valueSize=r}function QuaternionLinearInterpolant(e,t,r,n){Interpolant.call(this,e,t,r,n)}function QuaternionKeyframeTrack(e,t,r,n){KeyframeTrack.call(this,e,t,r,n)}function ColorKeyframeTrack(e,t,r,n){KeyframeTrack.call(this,e,t,r,n)}function NumberKeyframeTrack(e,t,r,n){KeyframeTrack.call(this,e,t,r,n)}function CubicInterpolant(e,t,r,n){Interpolant.call(this,e,t,r,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function LinearInterpolant(e,t,r,n){Interpolant.call(this,e,t,r,n)}function DiscreteInterpolant(e,t,r,n){Interpolant.call(this,e,t,r,n)}function KeyframeTrack(e,t,r,n){if(void 0===e)throw new Error("KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=AnimationUtils.convertArray(t,this.TimeBufferType),this.values=AnimationUtils.convertArray(r,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation),this.validate(),this.optimize()}function VectorKeyframeTrack(e,t,r,n){KeyframeTrack.call(this,e,t,r,n)}function AnimationClip(e,t,r){this.name=e,this.tracks=r,this.duration=void 0!==t?t:-1,this.uuid=_Math.generateUUID(),this.duration<0&&this.resetDuration(),this.optimize()}function JSONLoader(e){"boolean"==typeof e&&(console.warn("JSONLoader: showStatus parameter has been removed from constructor."),e=void 0),this.manager=void 0!==e?e:DefaultLoadingManager,this.withCredentials=!1}function Group(){Object3D.call(this),this.type="Group"}function LineLoop(e,t){Line.call(this,e,t),this.type="LineLoop"}function LOD(){Object3D.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})}function Skeleton(e,t){var r=this;if(e=e||[],this.bones=e.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),void 0===t)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn("Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(var n=0,i=this.bones.length;n<i;n++)r.boneInverses.push(new Matrix4)}}function Bone(){Object3D.call(this),this.type="Bone"}function SkinnedMesh(e,t){Mesh.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Matrix4,this.bindMatrixInverse=new Matrix4;var r=new Skeleton(this.initBones());this.bind(r,this.matrixWorld),this.normalizeSkinWeights()}function Curve(){this.type="Curve",this.arcLengthDivisions=200}function EllipseCurve(e,t,r,n,i,a,o,s){Curve.call(this),this.type="EllipseCurve",this.aX=e||0,this.aY=t||0,this.xRadius=r||1,this.yRadius=n||1,this.aStartAngle=i||0,this.aEndAngle=a||2*Math.PI,this.aClockwise=o||!1,this.aRotation=s||0}function ArcCurve(e,t,r,n,i,a){EllipseCurve.call(this,e,t,r,r,n,i,a),this.type="ArcCurve"}function CubicPoly(){function e(e,a,o,s){t=e,r=o,n=-3*e+3*a-2*o-s,i=2*e-2*a+o+s}var t=0,r=0,n=0,i=0;return{initCatmullRom:function(t,r,n,i,a){e(r,n,a*(n-t),a*(i-r))},initNonuniformCatmullRom:function(t,r,n,i,a,o,s){var c=(r-t)/a-(n-t)/(a+o)+(n-r)/o,l=(n-r)/o-(i-r)/(o+s)+(i-n)/s;e(r,n,c*=o,l*=o)},calc:function(e){var a=e*e;return t+r*e+n*a+i*(a*e)}}}function CatmullRomCurve3(e,t,r,n){Curve.call(this),this.type="CatmullRomCurve3",this.points=e||[],this.closed=t||!1,this.curveType=r||"centripetal",this.tension=n||.5}function CatmullRom(e,t,r,n,i){var a=.5*(n-t),o=.5*(i-r),s=e*e;return(2*r-2*n+a+o)*(e*s)+(-3*r+3*n-2*a-o)*s+a*e+r}function QuadraticBezierP0(e,t){var r=1-e;return r*r*t}function QuadraticBezierP1(e,t){return 2*(1-e)*e*t}function QuadraticBezierP2(e,t){return e*e*t}function QuadraticBezier(e,t,r,n){return QuadraticBezierP0(e,t)+QuadraticBezierP1(e,r)+QuadraticBezierP2(e,n)}function CubicBezierP0(e,t){var r=1-e;return r*r*r*t}function CubicBezierP1(e,t){var r=1-e;return 3*r*r*e*t}function CubicBezierP2(e,t){return 3*(1-e)*e*e*t}function CubicBezierP3(e,t){return e*e*e*t}function CubicBezier(e,t,r,n,i){return CubicBezierP0(e,t)+CubicBezierP1(e,r)+CubicBezierP2(e,n)+CubicBezierP3(e,i)}function CubicBezierCurve(e,t,r,n){Curve.call(this),this.type="CubicBezierCurve",this.v0=e||new Vector2,this.v1=t||new Vector2,this.v2=r||new Vector2,this.v3=n||new Vector2}function CubicBezierCurve3(e,t,r,n){Curve.call(this),this.type="CubicBezierCurve3",this.v0=e||new Vector3,this.v1=t||new Vector3,this.v2=r||new Vector3,this.v3=n||new Vector3}function LineCurve(e,t){Curve.call(this),this.type="LineCurve",this.v1=e||new Vector2,this.v2=t||new Vector2}function LineCurve3(e,t){Curve.call(this),this.type="LineCurve3",this.v1=e||new Vector3,this.v2=t||new Vector3}function QuadraticBezierCurve(e,t,r){Curve.call(this),this.type="QuadraticBezierCurve",this.v0=e||new Vector2,this.v1=t||new Vector2,this.v2=r||new Vector2}function QuadraticBezierCurve3(e,t,r){Curve.call(this),this.type="QuadraticBezierCurve3",this.v0=e||new Vector3,this.v1=t||new Vector3,this.v2=r||new Vector3}function SplineCurve(e){Curve.call(this),this.type="SplineCurve",this.points=e||[]}function CurvePath(){Curve.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function Path(e){CurvePath.call(this),this.type="Path",this.currentPoint=new Vector2,e&&this.setFromPoints(e)}function Shape(e){Path.call(this,e),this.uuid=_Math.generateUUID(),this.type="Shape",this.holes=[]}function Fog(e,t,r){this.name="",this.color=new Color(e),this.near=void 0!==t?t:1,this.far=void 0!==r?r:1e3}function FogExp2(e,t){this.name="",this.color=new Color(e),this.density=void 0!==t?t:25e-5}function HemisphereLight(e,t,r){Light.call(this,e,r),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(Object3D.DefaultUp),this.updateMatrix(),this.groundColor=new Color(t)}function DirectionalLightShadow(){LightShadow.call(this,new OrthographicCamera(-5,5,5,-5,.5,500))}function DirectionalLight(e,t){Light.call(this,e,t),this.type="DirectionalLight",this.position.copy(Object3D.DefaultUp),this.updateMatrix(),this.target=new Object3D,this.shadow=new DirectionalLightShadow}function RectAreaLight(e,t,r,n){Light.call(this,e,t),this.type="RectAreaLight",this.width=void 0!==r?r:10,this.height=void 0!==n?n:10}function PolyhedronGeometry(e,t,r,n){Geometry.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:r,detail:n},this.fromBufferGeometry(new PolyhedronBufferGeometry(e,t,r,n)),this.mergeVertices()}function PolyhedronBufferGeometry(e,t,r,n){function i(e,t,r,n){var i,a,s=Math.pow(2,n),c=[];for(i=0;i<=s;i++){c[i]=[];var l=e.clone().lerp(r,i/s),u=t.clone().lerp(r,i/s),h=s-i;for(a=0;a<=h;a++)c[i][a]=0===a&&i===s?l:l.clone().lerp(u,a/h)}for(i=0;i<s;i++)for(a=0;a<2*(s-i)-1;a++){var p=Math.floor(a/2);a%2==0?(o(c[i][p+1]),o(c[i+1][p]),o(c[i][p])):(o(c[i][p+1]),o(c[i+1][p+1]),o(c[i+1][p]))}}function a(){for(var e=0;e<d.length;e+=6){var t=d[e+0],r=d[e+2],n=d[e+4],i=Math.max(t,r,n),a=Math.min(t,r,n);i>.9&&a<.1&&(t<.2&&(d[e+0]+=1),r<.2&&(d[e+2]+=1),n<.2&&(d[e+4]+=1))}}function o(e){p.push(e.x,e.y,e.z)}function s(t,r){var n=3*t;r.x=e[n+0],r.y=e[n+1],r.z=e[n+2]}function c(){for(var e=new Vector3,t=new Vector3,r=new Vector3,n=new Vector3,i=new Vector2,a=new Vector2,o=new Vector2,s=0,c=0;s<p.length;s+=9,c+=6){e.set(p[s+0],p[s+1],p[s+2]),t.set(p[s+3],p[s+4],p[s+5]),r.set(p[s+6],p[s+7],p[s+8]),i.set(d[c+0],d[c+1]),a.set(d[c+2],d[c+3]),o.set(d[c+4],d[c+5]),n.copy(e).add(t).add(r).divideScalar(3);var h=u(n);l(i,c+0,e,h),l(a,c+2,t,h),l(o,c+4,r,h)}}function l(e,t,r,n){n<0&&1===e.x&&(d[t]=e.x-1),0===r.x&&0===r.z&&(d[t]=n/2/Math.PI+.5)}function u(e){return Math.atan2(e.z,-e.x)}function h(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}BufferGeometry.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:e,indices:t,radius:r,detail:n},r=r||1;var p=[],d=[];!function(e){for(var r=new Vector3,n=new Vector3,a=new Vector3,o=0;o<t.length;o+=3)s(t[o+0],r),s(t[o+1],n),s(t[o+2],a),i(r,n,a,e)}(n=n||0),function(e){for(var t=new Vector3,r=0;r<p.length;r+=3)t.x=p[r+0],t.y=p[r+1],t.z=p[r+2],t.normalize().multiplyScalar(e),p[r+0]=t.x,p[r+1]=t.y,p[r+2]=t.z}(r),function(){for(var e=new Vector3,t=0;t<p.length;t+=3){e.x=p[t+0],e.y=p[t+1],e.z=p[t+2];var r=u(e)/2/Math.PI+.5,n=h(e)/Math.PI+.5;d.push(r,1-n)}c(),a()}(),this.addAttribute("position",new Float32BufferAttribute(p,3)),this.addAttribute("normal",new Float32BufferAttribute(p.slice(),3)),this.addAttribute("uv",new Float32BufferAttribute(d,2)),0===n?this.computeVertexNormals():this.normalizeNormals()}function TetrahedronGeometry(e,t){Geometry.call(this),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new TetrahedronBufferGeometry(e,t)),this.mergeVertices()}function TetrahedronBufferGeometry(e,t){var r=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],n=[2,1,0,0,3,2,1,3,0,2,3,1];PolyhedronBufferGeometry.call(this,r,n,e,t),this.type="TetrahedronBufferGeometry",this.parameters={radius:e,detail:t}}function OctahedronGeometry(e,t){Geometry.call(this),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new OctahedronBufferGeometry(e,t)),this.mergeVertices()}function OctahedronBufferGeometry(e,t){var r=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],n=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];PolyhedronBufferGeometry.call(this,r,n,e,t),this.type="OctahedronBufferGeometry",this.parameters={radius:e,detail:t}}function IcosahedronGeometry(e,t){Geometry.call(this),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new IcosahedronBufferGeometry(e,t)),this.mergeVertices()}function IcosahedronBufferGeometry(e,t){var r=(1+Math.sqrt(5))/2,n=[-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1],i=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];PolyhedronBufferGeometry.call(this,n,i,e,t),this.type="IcosahedronBufferGeometry",this.parameters={radius:e,detail:t}}function DodecahedronGeometry(e,t){Geometry.call(this),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new DodecahedronBufferGeometry(e,t)),this.mergeVertices()}function DodecahedronBufferGeometry(e,t){var r=(1+Math.sqrt(5))/2,n=1/r,i=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-r,0,-n,r,0,n,-r,0,n,r,-n,-r,0,-n,r,0,n,-r,0,n,r,0,-r,0,-n,r,0,-n,-r,0,n,r,0,n],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];PolyhedronBufferGeometry.call(this,i,a,e,t),this.type="DodecahedronBufferGeometry",this.parameters={radius:e,detail:t}}function TubeGeometry(e,t,r,n,i,a){Geometry.call(this),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:r,radialSegments:n,closed:i},void 0!==a&&console.warn("TubeGeometry: taper has been removed.");var o=new TubeBufferGeometry(e,t,r,n,i);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,this.fromBufferGeometry(o),this.mergeVertices()}function TubeBufferGeometry(e,t,r,n,i){function a(i){f=e.getPointAt(i/t,f);var a=c.normals[i],o=c.binormals[i];for(u=0;u<=n;u++){var s=u/n*Math.PI*2,l=Math.sin(s),d=-Math.cos(s);p.x=d*a.x+l*o.x,p.y=d*a.y+l*o.y,p.z=d*a.z+l*o.z,p.normalize(),v.push(p.x,p.y,p.z),h.x=f.x+r*p.x,h.y=f.y+r*p.y,h.z=f.z+r*p.z,m.push(h.x,h.y,h.z)}}function o(){for(u=1;u<=t;u++)for(l=1;l<=n;l++){var e=(n+1)*(u-1)+(l-1),r=(n+1)*u+(l-1),i=(n+1)*u+l,a=(n+1)*(u-1)+l;y.push(e,r,a),y.push(r,i,a)}}function s(){for(l=0;l<=t;l++)for(u=0;u<=n;u++)d.x=l/t,d.y=u/n,g.push(d.x,d.y)}BufferGeometry.call(this),this.type="TubeBufferGeometry",this.parameters={path:e,tubularSegments:t,radius:r,radialSegments:n,closed:i},t=t||64,r=r||1,n=n||8,i=i||!1;var c=e.computeFrenetFrames(t,i);this.tangents=c.tangents,this.normals=c.normals,this.binormals=c.binormals;var l,u,h=new Vector3,p=new Vector3,d=new Vector2,f=new Vector3,m=[],v=[],g=[],y=[];!function(){for(l=0;l<t;l++)a(l);a(!1===i?t:0),s(),o()}(),this.setIndex(y),this.addAttribute("position",new Float32BufferAttribute(m,3)),this.addAttribute("normal",new Float32BufferAttribute(v,3)),this.addAttribute("uv",new Float32BufferAttribute(g,2))}function TorusKnotGeometry(e,t,r,n,i,a,o){Geometry.call(this),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:r,radialSegments:n,p:i,q:a},void 0!==o&&console.warn("TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new TorusKnotBufferGeometry(e,t,r,n,i,a)),this.mergeVertices()}function TorusKnotBufferGeometry(e,t,r,n,i,a){function o(e,t,r,n,i){var a=Math.cos(e),o=Math.sin(e),s=r/t*e,c=Math.cos(s);i.x=n*(2+c)*.5*a,i.y=n*(2+c)*o*.5,i.z=n*Math.sin(s)*.5}BufferGeometry.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:e,tube:t,tubularSegments:r,radialSegments:n,p:i,q:a},e=e||1,t=t||.4,r=Math.floor(r)||64,n=Math.floor(n)||8,i=i||2,a=a||3;var s,c,l=[],u=[],h=[],p=[],d=new Vector3,f=new Vector3,m=new Vector3,v=new Vector3,g=new Vector3,y=new Vector3,x=new Vector3;for(s=0;s<=r;++s){var b=s/r*i*Math.PI*2;for(o(b,i,a,e,m),o(b+.01,i,a,e,v),y.subVectors(v,m),x.addVectors(v,m),g.crossVectors(y,x),x.crossVectors(g,y),g.normalize(),x.normalize(),c=0;c<=n;++c){var _=c/n*Math.PI*2,M=-t*Math.cos(_),w=t*Math.sin(_);d.x=m.x+(M*x.x+w*g.x),d.y=m.y+(M*x.y+w*g.y),d.z=m.z+(M*x.z+w*g.z),u.push(d.x,d.y,d.z),f.subVectors(d,m).normalize(),h.push(f.x,f.y,f.z),p.push(s/r),p.push(c/n)}}for(c=1;c<=r;c++)for(s=1;s<=n;s++){var S=(n+1)*(c-1)+(s-1),L=(n+1)*c+(s-1),T=(n+1)*c+s,C=(n+1)*(c-1)+s;l.push(S,L,C),l.push(L,T,C)}this.setIndex(l),this.addAttribute("position",new Float32BufferAttribute(u,3)),this.addAttribute("normal",new Float32BufferAttribute(h,3)),this.addAttribute("uv",new Float32BufferAttribute(p,2))}function TorusGeometry(e,t,r,n,i){Geometry.call(this),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:n,arc:i},this.fromBufferGeometry(new TorusBufferGeometry(e,t,r,n,i)),this.mergeVertices()}function TorusBufferGeometry(e,t,r,n,i){BufferGeometry.call(this),this.type="TorusBufferGeometry",this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:n,arc:i},e=e||1,t=t||.4,r=Math.floor(r)||8,n=Math.floor(n)||6,i=i||2*Math.PI;var a,o,s=[],c=[],l=[],u=[],h=new Vector3,p=new Vector3,d=new Vector3;for(a=0;a<=r;a++)for(o=0;o<=n;o++){var f=o/n*i,m=a/r*Math.PI*2;p.x=(e+t*Math.cos(m))*Math.cos(f),p.y=(e+t*Math.cos(m))*Math.sin(f),p.z=t*Math.sin(m),c.push(p.x,p.y,p.z),h.x=e*Math.cos(f),h.y=e*Math.sin(f),d.subVectors(p,h).normalize(),l.push(d.x,d.y,d.z),u.push(o/n),u.push(a/r)}for(a=1;a<=r;a++)for(o=1;o<=n;o++){var v=(n+1)*a+o-1,g=(n+1)*(a-1)+o-1,y=(n+1)*(a-1)+o,x=(n+1)*a+o;s.push(v,g,x),s.push(g,y,x)}this.setIndex(s),this.addAttribute("position",new Float32BufferAttribute(c,3)),this.addAttribute("normal",new Float32BufferAttribute(l,3)),this.addAttribute("uv",new Float32BufferAttribute(u,2))}function ExtrudeGeometry(e,t){Geometry.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},this.fromBufferGeometry(new ExtrudeBufferGeometry(e,t)),this.mergeVertices()}function ExtrudeBufferGeometry(e,t){void 0!==e&&(BufferGeometry.call(this),this.type="ExtrudeBufferGeometry",e=Array.isArray(e)?e:[e],this.addShapeList(e,t),this.computeVertexNormals())}function TextGeometry(e,t){Geometry.call(this),this.type="TextGeometry",this.parameters={text:e,parameters:t},this.fromBufferGeometry(new TextBufferGeometry(e,t)),this.mergeVertices()}function TextBufferGeometry(e,t){var r=(t=t||{}).font;if(!r||!r.isFont)return console.error("TextGeometry: font parameter is not an instance of Font."),new Geometry;var n=r.generateShapes(e,t.size,t.curveSegments);t.amount=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),ExtrudeBufferGeometry.call(this,n,t),this.type="TextBufferGeometry"}function RingGeometry(e,t,r,n,i,a){Geometry.call(this),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:n,thetaStart:i,thetaLength:a},this.fromBufferGeometry(new RingBufferGeometry(e,t,r,n,i,a)),this.mergeVertices()}function RingBufferGeometry(e,t,r,n,i,a){BufferGeometry.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:n,thetaStart:i,thetaLength:a},e=e||.5,t=t||1,i=void 0!==i?i:0,a=void 0!==a?a:2*Math.PI,r=void 0!==r?Math.max(3,r):8;var o,s,c,l=[],u=[],h=[],p=[],d=e,f=(t-e)/(n=void 0!==n?Math.max(1,n):1),m=new Vector3,v=new Vector2;for(s=0;s<=n;s++){for(c=0;c<=r;c++)o=i+c/r*a,m.x=d*Math.cos(o),m.y=d*Math.sin(o),u.push(m.x,m.y,m.z),h.push(0,0,1),v.x=(m.x/t+1)/2,v.y=(m.y/t+1)/2,p.push(v.x,v.y);d+=f}for(s=0;s<n;s++){var g=s*(r+1);for(c=0;c<r;c++){var y=o=c+g,x=o+r+1,b=o+r+2,_=o+1;l.push(y,x,_),l.push(x,b,_)}}this.setIndex(l),this.addAttribute("position",new Float32BufferAttribute(u,3)),this.addAttribute("normal",new Float32BufferAttribute(h,3)),this.addAttribute("uv",new Float32BufferAttribute(p,2))}function LatheGeometry(e,t,r,n){Geometry.call(this),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:r,phiLength:n},this.fromBufferGeometry(new LatheBufferGeometry(e,t,r,n)),this.mergeVertices()}function LatheBufferGeometry(e,t,r,n){BufferGeometry.call(this),this.type="LatheBufferGeometry",this.parameters={points:e,segments:t,phiStart:r,phiLength:n},t=Math.floor(t)||12,r=r||0,n=n||2*Math.PI,n=_Math.clamp(n,0,2*Math.PI);var i,a,o,s=[],c=[],l=[],u=1/t,h=new Vector3,p=new Vector2;for(a=0;a<=t;a++){var d=r+a*u*n,f=Math.sin(d),m=Math.cos(d);for(o=0;o<=e.length-1;o++)h.x=e[o].x*f,h.y=e[o].y,h.z=e[o].x*m,c.push(h.x,h.y,h.z),p.x=a/t,p.y=o/(e.length-1),l.push(p.x,p.y)}for(a=0;a<t;a++)for(o=0;o<e.length-1;o++){var v=i=o+a*e.length,g=i+e.length,y=i+e.length+1,x=i+1;s.push(v,g,x),s.push(g,y,x)}if(this.setIndex(s),this.addAttribute("position",new Float32BufferAttribute(c,3)),this.addAttribute("uv",new Float32BufferAttribute(l,2)),this.computeVertexNormals(),n===2*Math.PI){var b=this.attributes.normal.array,_=new Vector3,M=new Vector3,w=new Vector3;for(i=t*e.length*3,a=0,o=0;a<e.length;a++,o+=3)_.x=b[o+0],_.y=b[o+1],_.z=b[o+2],M.x=b[i+o+0],M.y=b[i+o+1],M.z=b[i+o+2],w.addVectors(_,M).normalize(),b[o+0]=b[i+o+0]=w.x,b[o+1]=b[i+o+1]=w.y,b[o+2]=b[i+o+2]=w.z}}function ShapeGeometry(e,t){Geometry.call(this),this.type="ShapeGeometry","object"==typeof t&&(console.warn("ShapeGeometry: Options parameter has been removed."),t=t.curveSegments),this.parameters={shapes:e,curveSegments:t},this.fromBufferGeometry(new ShapeBufferGeometry(e,t)),this.mergeVertices()}function ShapeBufferGeometry(e,t){function r(e){var r,n,c,u=a.length/3,h=e.extractPoints(t),p=h.shape,d=h.holes;if(!1===ShapeUtils.isClockWise(p))for(p=p.reverse(),r=0,n=d.length;r<n;r++)c=d[r],!0===ShapeUtils.isClockWise(c)&&(d[r]=c.reverse());var f=ShapeUtils.triangulateShape(p,d);for(r=0,n=d.length;r<n;r++)c=d[r],p=p.concat(c);for(r=0,n=p.length;r<n;r++){var m=p[r];a.push(m.x,m.y,0),o.push(0,0,1),s.push(m.x,m.y)}for(r=0,n=f.length;r<n;r++){var v=f[r],g=v[0]+u,y=v[1]+u,x=v[2]+u;i.push(g,y,x),l+=3}}var n=this;BufferGeometry.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:e,curveSegments:t},t=t||12;var i=[],a=[],o=[],s=[],c=0,l=0;if(!1===Array.isArray(e))r(e);else for(var u=0;u<e.length;u++)r(e[u]),n.addGroup(c,l,u),c+=l,l=0;this.setIndex(i),this.addAttribute("position",new Float32BufferAttribute(a,3)),this.addAttribute("normal",new Float32BufferAttribute(o,3)),this.addAttribute("uv",new Float32BufferAttribute(s,2))}function toJSON(e,t){if(t.shapes=[],Array.isArray(e))for(var r=0,n=e.length;r<n;r++){var i=e[r];t.shapes.push(i.uuid)}else t.shapes.push(e.uuid);return t}function EdgesGeometry(e,t){BufferGeometry.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=void 0!==t?t:1;var r,n,i,a,o=[],s=Math.cos(_Math.DEG2RAD*t),c=[0,0],l={},u=["a","b","c"];e.isBufferGeometry?(a=new Geometry).fromBufferGeometry(e):a=e.clone(),a.mergeVertices(),a.computeFaceNormals();for(var h=a.vertices,p=a.faces,d=0,f=p.length;d<f;d++)for(var m=p[d],v=0;v<3;v++)r=m[u[v]],n=m[u[(v+1)%3]],c[0]=Math.min(r,n),c[1]=Math.max(r,n),void 0===l[i=c[0]+","+c[1]]?l[i]={index1:c[0],index2:c[1],face1:d,face2:void 0}:l[i].face2=d;for(i in l){var g=l[i];if(void 0===g.face2||p[g.face1].normal.dot(p[g.face2].normal)<=s){var y=h[g.index1];o.push(y.x,y.y,y.z),y=h[g.index2],o.push(y.x,y.y,y.z)}}this.addAttribute("position",new Float32BufferAttribute(o,3))}function CylinderGeometry(e,t,r,n,i,a,o,s){Geometry.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:n,heightSegments:i,openEnded:a,thetaStart:o,thetaLength:s},this.fromBufferGeometry(new CylinderBufferGeometry(e,t,r,n,i,a,o,s)),this.mergeVertices()}function CylinderBufferGeometry(e,t,r,n,i,a,o,s){function c(r){var i,a,c,m=new Vector2,y=new Vector3,x=0,b=!0===r?e:t,_=!0===r?1:-1;for(a=f,i=1;i<=n;i++)h.push(0,v*_,0),p.push(0,_,0),d.push(.5,.5),f++;for(c=f,i=0;i<=n;i++){var M=i/n*s+o,w=Math.cos(M),S=Math.sin(M);y.x=b*S,y.y=v*_,y.z=b*w,h.push(y.x,y.y,y.z),p.push(0,_,0),m.x=.5*w+.5,m.y=.5*S*_+.5,d.push(m.x,m.y),f++}for(i=0;i<n;i++){var L=a+i,T=c+i;!0===r?u.push(T,T+1,L):u.push(T+1,T,L),x+=3}l.addGroup(g,x,!0===r?1:2),g+=x}BufferGeometry.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:n,heightSegments:i,openEnded:a,thetaStart:o,thetaLength:s};var l=this;e=void 0!==e?e:1,t=void 0!==t?t:1,r=r||1,n=Math.floor(n)||8,i=Math.floor(i)||1,a=void 0!==a&&a,o=void 0!==o?o:0,s=void 0!==s?s:2*Math.PI;var u=[],h=[],p=[],d=[],f=0,m=[],v=r/2,g=0;!function(){var a,c,y=new Vector3,x=new Vector3,b=0,_=(t-e)/r;for(c=0;c<=i;c++){var M=[],w=c/i,S=w*(t-e)+e;for(a=0;a<=n;a++){var L=a/n,T=L*s+o,C=Math.sin(T),A=Math.cos(T);x.x=S*C,x.y=-w*r+v,x.z=S*A,h.push(x.x,x.y,x.z),y.set(C,_,A).normalize(),p.push(y.x,y.y,y.z),d.push(L,1-w),M.push(f++)}m.push(M)}for(a=0;a<n;a++)for(c=0;c<i;c++){var E=m[c][a],P=m[c+1][a],B=m[c+1][a+1],D=m[c][a+1];u.push(E,P,D),u.push(P,B,D),b+=6}l.addGroup(g,b,0),g+=b}(),!1===a&&(e>0&&c(!0),t>0&&c(!1)),this.setIndex(u),this.addAttribute("position",new Float32BufferAttribute(h,3)),this.addAttribute("normal",new Float32BufferAttribute(p,3)),this.addAttribute("uv",new Float32BufferAttribute(d,2))}function ConeGeometry(e,t,r,n,i,a,o){CylinderGeometry.call(this,0,e,t,r,n,i,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:r,heightSegments:n,openEnded:i,thetaStart:a,thetaLength:o}}function ConeBufferGeometry(e,t,r,n,i,a,o){CylinderBufferGeometry.call(this,0,e,t,r,n,i,a,o),this.type="ConeBufferGeometry",this.parameters={radius:e,height:t,radialSegments:r,heightSegments:n,openEnded:i,thetaStart:a,thetaLength:o}}function CircleGeometry(e,t,r,n){Geometry.call(this),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:n},this.fromBufferGeometry(new CircleBufferGeometry(e,t,r,n)),this.mergeVertices()}function CircleBufferGeometry(e,t,r,n){BufferGeometry.call(this),this.type="CircleBufferGeometry",this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:n},e=e||1,t=void 0!==t?Math.max(3,t):8,r=void 0!==r?r:0,n=void 0!==n?n:2*Math.PI;var i,a,o=[],s=[],c=[],l=[],u=new Vector3,h=new Vector2;for(s.push(0,0,0),c.push(0,0,1),l.push(.5,.5),a=0,i=3;a<=t;a++,i+=3){var p=r+a/t*n;u.x=e*Math.cos(p),u.y=e*Math.sin(p),s.push(u.x,u.y,u.z),c.push(0,0,1),h.x=(s[i]/e+1)/2,h.y=(s[i+1]/e+1)/2,l.push(h.x,h.y)}for(i=1;i<=t;i++)o.push(i,i+1,0);this.setIndex(o),this.addAttribute("position",new Float32BufferAttribute(s,3)),this.addAttribute("normal",new Float32BufferAttribute(c,3)),this.addAttribute("uv",new Float32BufferAttribute(l,2))}function ObjectLoader(e){this.manager=void 0!==e?e:DefaultLoadingManager,this.texturePath=""}function WebGLAttributes(e){function t(t,r){var n=t.array,i=t.dynamic?e.DYNAMIC_DRAW:e.STATIC_DRAW,a=e.createBuffer();e.bindBuffer(r,a),e.bufferData(r,n,i),t.onUploadCallback();var o=e.FLOAT;return n instanceof Float32Array?o=e.FLOAT:n instanceof Float64Array?console.warn("WebGLAttributes: Unsupported data buffer format: Float64Array."):n instanceof Uint16Array?o=e.UNSIGNED_SHORT:n instanceof Int16Array?o=e.SHORT:n instanceof Uint32Array?o=e.UNSIGNED_INT:n instanceof Int32Array?o=e.INT:n instanceof Int8Array?o=e.BYTE:n instanceof Uint8Array&&(o=e.UNSIGNED_BYTE),{buffer:a,type:o,bytesPerElement:n.BYTES_PER_ELEMENT,version:t.version}}function r(t,r,n){var i=r.array,a=r.updateRange;e.bindBuffer(n,t),!1===r.dynamic?e.bufferData(n,i,e.STATIC_DRAW):-1===a.count?e.bufferSubData(n,0,i):0===a.count?console.error("WebGLObjects.updateBuffer: dynamic BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(e.bufferSubData(n,a.offset*i.BYTES_PER_ELEMENT,i.subarray(a.offset,a.offset+a.count)),a.count=-1)}function n(e){return e.isInterleavedBufferAttribute&&(e=e.data),o.get(e)}function i(t){t.isInterleavedBufferAttribute&&(t=t.data);var r=o.get(t);r&&(e.deleteBuffer(r.buffer),o.delete(t))}function a(e,n){e.isInterleavedBufferAttribute&&(e=e.data);var i=o.get(e);void 0===i?o.set(e,t(e,n)):i.version<e.version&&(r(i.buffer,e,n),i.version=e.version)}var o=new WeakMap;return{get:n,remove:i,update:a}}function WebGLBackground(e,t,r,n){function i(t,n,i,h){var p=n.background;null===p?a(l,u):p&&p.isColor&&(a(p,1),h=!0),(e.autoClear||h)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),p&&p.isCubeTexture?(void 0===c&&((c=new Mesh(new BoxBufferGeometry(1,1,1),new ShaderMaterial({uniforms:ShaderLib.cube.uniforms,vertexShader:ShaderLib.cube.vertexShader,fragmentShader:ShaderLib.cube.fragmentShader,side:BackSide,depthTest:!0,depthWrite:!1,fog:!1}))).geometry.removeAttribute("normal"),c.geometry.removeAttribute("uv"),c.onBeforeRender=function(e,t,r){this.matrixWorld.copyPosition(r.matrixWorld)},r.update(c.geometry)),c.material.uniforms.tCube.value=p,t.push(c,c.geometry,c.material,0,null)):p&&p.isTexture&&(void 0===o&&(o=new OrthographicCamera(-1,1,1,-1,0,1),s=new Mesh(new PlaneBufferGeometry(2,2),new MeshBasicMaterial({depthTest:!1,depthWrite:!1,fog:!1})),r.update(s.geometry)),s.material.map=p,e.renderBufferDirect(o,null,s.geometry,s.material,s,null))}function a(e,r){t.buffers.color.setClear(e.r,e.g,e.b,r,n)}var o,s,c,l=new Color(0),u=0;return{getClearColor:function(){return l},setClearColor:function(e,t){l.set(e),a(l,u=void 0!==t?t:1)},getClearAlpha:function(){return u},setClearAlpha:function(e){a(l,u=e)},render:i}}function WebGLBufferRenderer(e,t,r){function n(e){o=e}function i(t,n){e.drawArrays(o,t,n),r.update(n,o)}function a(e,n,i){var a=t.get("ANGLE_instanced_arrays");if(null===a)return void console.error("WebGLBufferRenderer: using InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");var s=e.attributes.position;s.isInterleavedBufferAttribute?(i=s.data.count,a.drawArraysInstancedANGLE(o,0,i,e.maxInstancedCount)):a.drawArraysInstancedANGLE(o,n,i,e.maxInstancedCount),r.update(i,o,e.maxInstancedCount)}var o;this.setMode=n,this.render=i,this.renderInstances=a}function WebGLCapabilities(e,t,r){function n(){if(void 0!==a)return a;var r=t.get("EXT_texture_filter_anisotropic");return a=null!==r?e.getParameter(r.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}function i(t){if("highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}var a,o=void 0!==r.precision?r.precision:"highp",s=i(o);s!==o&&(console.warn("WebGLRenderer:",o,"not supported, using",s,"instead."),o=s);var c=!0===r.logarithmicDepthBuffer,l=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),u=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),h=e.getParameter(e.MAX_TEXTURE_SIZE),p=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),d=e.getParameter(e.MAX_VERTEX_ATTRIBS),f=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),m=e.getParameter(e.MAX_VARYING_VECTORS),v=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),g=u>0,y=!!t.get("OES_texture_float");return{getMaxAnisotropy:n,getMaxPrecision:i,precision:o,logarithmicDepthBuffer:c,maxTextures:l,maxVertexTextures:u,maxTextureSize:h,maxCubemapSize:p,maxAttributes:d,maxVertexUniforms:f,maxVaryings:m,maxFragmentUniforms:v,vertexTextures:g,floatFragmentTextures:y,floatVertexTextures:g&&y}}function WebGLClipping(){function e(){l.value!==n&&(l.value=n,l.needsUpdate=i>0),r.numPlanes=i,r.numIntersection=0}function t(e,t,n,i){var a=null!==e?e.length:0,o=null;if(0!==a){if(o=l.value,!0!==i||null===o){var u=n+4*a,h=t.matrixWorldInverse;c.getNormalMatrix(h),(null===o||o.length<u)&&(o=new Float32Array(u));for(var p=0,d=n;p!==a;++p,d+=4)s.copy(e[p]).applyMatrix4(h,c),s.normal.toArray(o,d),o[d+3]=s.constant}l.value=o,l.needsUpdate=!0}return r.numPlanes=a,o}var r=this,n=null,i=0,a=!1,o=!1,s=new Plane,c=new Matrix3,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,r,o){var s=0!==e.length||r||0!==i||a;return a=r,n=t(e,o,0),i=e.length,s},this.beginShadows=function(){o=!0,t(null)},this.endShadows=function(){o=!1,e()},this.setState=function(r,s,c,u,h,p){if(!a||null===r||0===r.length||o&&!c)o?t(null):e();else{var d=o?0:i,f=4*d,m=h.clippingState||null;l.value=m,m=t(r,u,f,p);for(var v=0;v!==f;++v)m[v]=n[v];h.clippingState=m,this.numIntersection=s?this.numPlanes:0,this.numPlanes+=d}}}function WebGLExtensions(e){var t={};return{get:function(r){if(void 0!==t[r])return t[r];var n;switch(r){case"WEBGL_depth_texture":n=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;case"WEBGL_compressed_texture_etc1":n=e.getExtension("WEBGL_compressed_texture_etc1");break;default:n=e.getExtension(r)}return null===n&&console.warn("WebGLRenderer: "+r+" extension not supported."),t[r]=n,n}}}function WebGLGeometries(e,t,r){function n(e){var i=e.target,a=s[i.id];null!==a.index&&t.remove(a.index);for(var o in a.attributes)t.remove(a.attributes[o]);i.removeEventListener("dispose",n),delete s[i.id];var l=c[i.id];l&&(t.remove(l),delete c[i.id]),(l=c[a.id])&&(t.remove(l),delete c[a.id]),r.memory.geometries--}function i(e,t){var i=s[t.id];return i||(t.addEventListener("dispose",n),t.isBufferGeometry?i=t:t.isGeometry&&(void 0===t._bufferGeometry&&(t._bufferGeometry=(new BufferGeometry).setFromObject(e)),i=t._bufferGeometry),s[t.id]=i,r.memory.geometries++,i)}function a(r){var n=r.index,i=r.attributes;null!==n&&t.update(n,e.ELEMENT_ARRAY_BUFFER);for(var a in i)t.update(i[a],e.ARRAY_BUFFER);var o=r.morphAttributes;for(var a in o)for(var s=o[a],c=0,l=s.length;c<l;c++)t.update(s[c],e.ARRAY_BUFFER)}function o(r){var n=c[r.id];if(n)return n;var i=[],a=r.index,o=r.attributes;if(null!==a)for(var s=0,l=(d=a.array).length;s<l;s+=3){var u=d[s+0],h=d[s+1],p=d[s+2];i.push(u,h,h,p,p,u)}else for(var d=o.position.array,s=0,l=d.length/3-1;s<l;s+=3){var u=s+0,h=s+1,p=s+2;i.push(u,h,h,p,p,u)}return n=new(arrayMax(i)>65535?Uint32BufferAttribute:Uint16BufferAttribute)(i,1),t.update(n,e.ELEMENT_ARRAY_BUFFER),c[r.id]=n,n}var s={},c={};return{get:i,update:a,getWireframeAttribute:o}}function WebGLIndexedBufferRenderer(e,t,r){function n(e){s=e}function i(e){c=e.type,l=e.bytesPerElement}function a(t,n){e.drawElements(s,n,c,t*l),r.update(n,s)}function o(e,n,i){var a=t.get("ANGLE_instanced_arrays");if(null===a)return void console.error("WebGLIndexedBufferRenderer: using InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");a.drawElementsInstancedANGLE(s,i,c,n*l,e.maxInstancedCount),r.update(i,s,e.maxInstancedCount)}var s,c,l;this.setMode=n,this.setIndex=i,this.render=a,this.renderInstances=o}function WebGLInfo(e){function t(t,r,i){switch(i=i||1,n.calls++,r){case e.TRIANGLES:n.triangles+=i*(t/3);break;case e.TRIANGLE_STRIP:case e.TRIANGLE_FAN:n.triangles+=i*(t-2);break;case e.LINES:n.lines+=i*(t/2);break;case e.LINE_STRIP:n.lines+=i*(t-1);break;case e.LINE_LOOP:n.lines+=i*t;break;case e.POINTS:n.points+=i*t;break;default:console.error("WebGLInfo: Unknown draw mode:",r)}}function r(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0}var n={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:n,programs:null,autoReset:!0,reset:r,update:t}}function absNumericalSort(e,t){return Math.abs(t[1])-Math.abs(e[1])}function WebGLMorphtargets(e){function t(t,i,a,o){var s=t.morphTargetInfluences,c=s.length,l=r[i.id];if(void 0===l){l=[];for(p=0;p<c;p++)l[p]=[p,0];r[i.id]=l}for(var u=a.morphTargets&&i.morphAttributes.position,h=a.morphNormals&&i.morphAttributes.normal,p=0;p<c;p++)0!==(d=l[p])[1]&&(u&&i.removeAttribute("morphTarget"+p),h&&i.removeAttribute("morphNormal"+p));for(p=0;p<c;p++)(d=l[p])[0]=p,d[1]=s[p];l.sort(absNumericalSort);for(p=0;p<8;p++){var d=l[p];if(d){var f=d[0],m=d[1];if(m){u&&i.addAttribute("morphTarget"+p,u[f]),h&&i.addAttribute("morphNormal"+p,h[f]),n[p]=m;continue}}n[p]=0}o.getUniforms().setValue(e,"morphTargetInfluences",n)}var r={},n=new Float32Array(8);return{update:t}}function WebGLObjects(e,t){function r(r){var n=t.render.frame,a=r.geometry,o=e.get(r,a);return i[o.id]!==n&&(a.isGeometry&&o.updateFromObject(r),e.update(o),i[o.id]=n),o}function n(){i={}}var i={};return{update:r,dispose:n}}function CubeTexture(e,t,r,n,i,a,o,s,c,l){e=void 0!==e?e:[],t=void 0!==t?t:CubeReflectionMapping,Texture.call(this,e,t,r,n,i,a,o,s,c,l),this.flipY=!1}function UniformContainer(){this.seq=[],this.map={}}function flatten(e,t,r){var n=e[0];if(n<=0||n>0)return e;var i=t*r,a=arrayCacheF32[i];if(void 0===a&&(a=new Float32Array(i),arrayCacheF32[i]=a),0!==t){n.toArray(a,0);for(var o=1,s=0;o!==t;++o)s+=r,e[o].toArray(a,s)}return a}function allocTexUnits(e,t){var r=arrayCacheI32[t];void 0===r&&(r=new Int32Array(t),arrayCacheI32[t]=r);for(var n=0;n!==t;++n)r[n]=e.allocTextureUnit();return r}function setValue1f(e,t){e.uniform1f(this.addr,t)}function setValue1i(e,t){e.uniform1i(this.addr,t)}function setValue2fv(e,t){void 0===t.x?e.uniform2fv(this.addr,t):e.uniform2f(this.addr,t.x,t.y)}function setValue3fv(e,t){void 0!==t.x?e.uniform3f(this.addr,t.x,t.y,t.z):void 0!==t.r?e.uniform3f(this.addr,t.r,t.g,t.b):e.uniform3fv(this.addr,t)}function setValue4fv(e,t){void 0===t.x?e.uniform4fv(this.addr,t):e.uniform4f(this.addr,t.x,t.y,t.z,t.w)}function setValue2fm(e,t){e.uniformMatrix2fv(this.addr,!1,t.elements||t)}function setValue3fm(e,t){void 0===t.elements?e.uniformMatrix3fv(this.addr,!1,t):(mat3array.set(t.elements),e.uniformMatrix3fv(this.addr,!1,mat3array))}function setValue4fm(e,t){void 0===t.elements?e.uniformMatrix4fv(this.addr,!1,t):(mat4array.set(t.elements),e.uniformMatrix4fv(this.addr,!1,mat4array))}function setValueT1(e,t,r){var n=r.allocTextureUnit();e.uniform1i(this.addr,n),r.setTexture2D(t||emptyTexture,n)}function setValueT6(e,t,r){var n=r.allocTextureUnit();e.uniform1i(this.addr,n),r.setTextureCube(t||emptyCubeTexture,n)}function setValue2iv(e,t){e.uniform2iv(this.addr,t)}function setValue3iv(e,t){e.uniform3iv(this.addr,t)}function setValue4iv(e,t){e.uniform4iv(this.addr,t)}function getSingularSetter(e){switch(e){case 5126:return setValue1f;case 35664:return setValue2fv;case 35665:return setValue3fv;case 35666:return setValue4fv;case 35674:return setValue2fm;case 35675:return setValue3fm;case 35676:return setValue4fm;case 35678:case 36198:return setValueT1;case 35680:return setValueT6;case 5124:case 35670:return setValue1i;case 35667:case 35671:return setValue2iv;case 35668:case 35672:return setValue3iv;case 35669:case 35673:return setValue4iv}}function setValue1fv(e,t){e.uniform1fv(this.addr,t)}function setValue1iv(e,t){e.uniform1iv(this.addr,t)}function setValueV2a(e,t){e.uniform2fv(this.addr,flatten(t,this.size,2))}function setValueV3a(e,t){e.uniform3fv(this.addr,flatten(t,this.size,3))}function setValueV4a(e,t){e.uniform4fv(this.addr,flatten(t,this.size,4))}function setValueM2a(e,t){e.uniformMatrix2fv(this.addr,!1,flatten(t,this.size,4))}function setValueM3a(e,t){e.uniformMatrix3fv(this.addr,!1,flatten(t,this.size,9))}function setValueM4a(e,t){e.uniformMatrix4fv(this.addr,!1,flatten(t,this.size,16))}function setValueT1a(e,t,r){var n=t.length,i=allocTexUnits(r,n);e.uniform1iv(this.addr,i);for(var a=0;a!==n;++a)r.setTexture2D(t[a]||emptyTexture,i[a])}function setValueT6a(e,t,r){var n=t.length,i=allocTexUnits(r,n);e.uniform1iv(this.addr,i);for(var a=0;a!==n;++a)r.setTextureCube(t[a]||emptyCubeTexture,i[a])}function getPureArraySetter(e){switch(e){case 5126:return setValue1fv;case 35664:return setValueV2a;case 35665:return setValueV3a;case 35666:return setValueV4a;case 35674:return setValueM2a;case 35675:return setValueM3a;case 35676:return setValueM4a;case 35678:return setValueT1a;case 35680:return setValueT6a;case 5124:case 35670:return setValue1iv;case 35667:case 35671:return setValue2iv;case 35668:case 35672:return setValue3iv;case 35669:case 35673:return setValue4iv}}function SingleUniform(e,t,r){this.id=e,this.addr=r,this.setValue=getSingularSetter(t.type)}function PureArrayUniform(e,t,r){this.id=e,this.addr=r,this.size=t.size,this.setValue=getPureArraySetter(t.type)}function StructuredUniform(e){this.id=e,UniformContainer.call(this)}function addUniform(e,t){e.seq.push(t),e.map[t.id]=t}function parseUniform(e,t,r){var n=e.name,i=n.length;for(RePathPart.lastIndex=0;;){var a=RePathPart.exec(n),o=RePathPart.lastIndex,s=a[1],c="]"===a[2],l=a[3];if(c&&(s|=0),void 0===l||"["===l&&o+2===i){addUniform(r,void 0===l?new SingleUniform(s,e,t):new PureArrayUniform(s,e,t));break}var u=r.map[s];void 0===u&&addUniform(r,u=new StructuredUniform(s)),r=u}}function WebGLUniforms(e,t,r){var n=this;UniformContainer.call(this),this.renderer=r;for(var i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS),a=0;a<i;++a){var o=e.getActiveUniform(t,a),s=o.name;parseUniform(o,e.getUniformLocation(t,s),n)}}function addLineNumbers(e){for(var t=e.split("\n"),r=0;r<t.length;r++)t[r]=r+1+": "+t[r];return t.join("\n")}function WebGLShader(e,t,r){var n=e.createShader(t);return e.shaderSource(n,r),e.compileShader(n),!1===e.getShaderParameter(n,e.COMPILE_STATUS)&&console.error("WebGLShader: Shader couldn't compile."),""!==e.getShaderInfoLog(n)&&console.warn("WebGLShader: gl.getShaderInfoLog()",t===e.VERTEX_SHADER?"vertex":"fragment",e.getShaderInfoLog(n),addLineNumbers(r)),n}function getEncodingComponents(e){switch(e){case LinearEncoding:return["Linear","( value )"];case sRGBEncoding:return["sRGB","( value )"];case RGBEEncoding:return["RGBE","( value )"];case RGBM7Encoding:return["RGBM","( value, 7.0 )"];case RGBM16Encoding:return["RGBM","( value, 16.0 )"];case RGBDEncoding:return["RGBD","( value, 256.0 )"];case GammaEncoding:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw new Error("unsupported encoding: "+e)}}function getTexelDecodingFunction(e,t){var r=getEncodingComponents(t);return"vec4 "+e+"( vec4 value ) { return "+r[0]+"ToLinear"+r[1]+"; }"}function getTexelEncodingFunction(e,t){var r=getEncodingComponents(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+r[0]+r[1]+"; }"}function getToneMappingFunction(e,t){var r;switch(t){case LinearToneMapping:r="Linear";break;case ReinhardToneMapping:r="Reinhard";break;case Uncharted2ToneMapping:r="Uncharted2";break;case CineonToneMapping:r="OptimizedCineon";break;default:throw new Error("unsupported toneMapping: "+t)}return"vec3 "+e+"( vec3 color ) { return "+r+"ToneMapping( color ); }"}function generateExtensions(e,t,r){return[(e=e||{}).derivatives||t.envMapCubeUV||t.bumpMap||t.normalMap||t.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(e.fragDepth||t.logarithmicDepthBuffer)&&r.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",e.drawBuffers&&r.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(e.shaderTextureLOD||t.envMap)&&r.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(filterEmptyLine).join("\n")}function generateDefines(e){var t=[];for(var r in e){var n=e[r];!1!==n&&t.push("#define "+r+" "+n)}return t.join("\n")}function fetchAttributeLocations(e,t){for(var r={},n=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES),i=0;i<n;i++){var a=e.getActiveAttrib(t,i).name;r[a]=e.getAttribLocation(t,a)}return r}function filterEmptyLine(e){return""!==e}function replaceLightNums(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights)}function replaceClippingPlaneNums(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}function parseIncludes(e){function t(e,t){var r=ShaderChunk[t];if(void 0===r)throw new Error("Can not resolve #include <"+t+">");return parseIncludes(r)}return e.replace(/^[ \t]*#include +<([\w\d.]+)>/gm,t)}function unrollLoops(e){function t(e,t,r,n){for(var i="",a=parseInt(t);a<parseInt(r);a++)i+=n.replace(/\[ i \]/g,"[ "+a+" ]");return i}return e.replace(/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,t)}function WebGLProgram(e,t,r,n,i,a){var o=e.context,s=n.defines,c=i.vertexShader,l=i.fragmentShader,u="SHADOWMAP_TYPE_BASIC";a.shadowMapType===PCFShadowMap?u="SHADOWMAP_TYPE_PCF":a.shadowMapType===PCFSoftShadowMap&&(u="SHADOWMAP_TYPE_PCF_SOFT");var h="ENVMAP_TYPE_CUBE",p="ENVMAP_MODE_REFLECTION",d="ENVMAP_BLENDING_MULTIPLY";if(a.envMap){switch(n.envMap.mapping){case CubeReflectionMapping:case CubeRefractionMapping:h="ENVMAP_TYPE_CUBE";break;case CubeUVReflectionMapping:case CubeUVRefractionMapping:h="ENVMAP_TYPE_CUBE_UV";break;case EquirectangularReflectionMapping:case EquirectangularRefractionMapping:h="ENVMAP_TYPE_EQUIREC";break;case SphericalReflectionMapping:h="ENVMAP_TYPE_SPHERE"}switch(n.envMap.mapping){case CubeRefractionMapping:case EquirectangularRefractionMapping:p="ENVMAP_MODE_REFRACTION"}switch(n.combine){case MultiplyOperation:d="ENVMAP_BLENDING_MULTIPLY";break;case MixOperation:d="ENVMAP_BLENDING_MIX";break;case AddOperation:d="ENVMAP_BLENDING_ADD"}}var f,m,v=e.gammaFactor>0?e.gammaFactor:1,g=generateExtensions(n.extensions,a,t),y=generateDefines(s),x=o.createProgram();n.isRawShaderMaterial?((f=[y].filter(filterEmptyLine).join("\n")).length>0&&(f+="\n"),(m=[g,y].filter(filterEmptyLine).join("\n")).length>0&&(m+="\n")):(f=["precision "+a.precision+" float;","precision "+a.precision+" int;","#define SHADER_NAME "+i.name,y,a.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+v,"#define MAX_BONES "+a.maxBones,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+p:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.displacementMap&&a.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.vertexColors?"#define USE_COLOR":"",a.flatShading?"#define FLAT_SHADED":"",a.skinning?"#define USE_SKINNING":"",a.useVertexTexture?"#define BONE_TEXTURE":"",a.morphTargets?"#define USE_MORPHTARGETS":"",a.morphNormals&&!1===a.flatShading?"#define USE_MORPHNORMALS":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"",a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+u:"",a.sizeAttenuation?"#define USE_SIZEATTENUATION":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&t.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(filterEmptyLine).join("\n"),m=[g,"precision "+a.precision+" float;","precision "+a.precision+" int;","#define SHADER_NAME "+i.name,y,a.alphaTest?"#define ALPHATEST "+a.alphaTest:"","#define GAMMA_FACTOR "+v,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+h:"",a.envMap?"#define "+p:"",a.envMap?"#define "+d:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.vertexColors?"#define USE_COLOR":"",a.gradientMap?"#define USE_GRADIENTMAP":"",a.flatShading?"#define FLAT_SHADED":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"",a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+u:"",a.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",a.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&t.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"",a.envMap&&t.get("EXT_shader_texture_lod")?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",a.toneMapping!==NoToneMapping?"#define TONE_MAPPING":"",a.toneMapping!==NoToneMapping?ShaderChunk.tonemapping_pars_fragment:"",a.toneMapping!==NoToneMapping?getToneMappingFunction("toneMapping",a.toneMapping):"",a.dithering?"#define DITHERING":"",a.outputEncoding||a.mapEncoding||a.envMapEncoding||a.emissiveMapEncoding?ShaderChunk.encodings_pars_fragment:"",a.mapEncoding?getTexelDecodingFunction("mapTexelToLinear",a.mapEncoding):"",a.envMapEncoding?getTexelDecodingFunction("envMapTexelToLinear",a.envMapEncoding):"",a.emissiveMapEncoding?getTexelDecodingFunction("emissiveMapTexelToLinear",a.emissiveMapEncoding):"",a.outputEncoding?getTexelEncodingFunction("linearToOutputTexel",a.outputEncoding):"",a.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(filterEmptyLine).join("\n")),c=replaceClippingPlaneNums(c=replaceLightNums(c=parseIncludes(c),a),a),l=replaceClippingPlaneNums(l=replaceLightNums(l=parseIncludes(l),a),a);var b=f+(c=unrollLoops(c)),_=m+(l=unrollLoops(l)),M=WebGLShader(o,o.VERTEX_SHADER,b),w=WebGLShader(o,o.FRAGMENT_SHADER,_);o.attachShader(x,M),o.attachShader(x,w),void 0!==n.index0AttributeName?o.bindAttribLocation(x,0,n.index0AttributeName):!0===a.morphTargets&&o.bindAttribLocation(x,0,"position"),o.linkProgram(x);var S=o.getProgramInfoLog(x).trim(),L=o.getShaderInfoLog(M).trim(),T=o.getShaderInfoLog(w).trim(),C=!0,A=!0;!1===o.getProgramParameter(x,o.LINK_STATUS)?(C=!1,console.error("WebGLProgram: shader error: ",o.getError(),"gl.VALIDATE_STATUS",o.getProgramParameter(x,o.VALIDATE_STATUS),"gl.getProgramInfoLog",S,L,T)):""!==S?console.warn("WebGLProgram: gl.getProgramInfoLog()",S):""!==L&&""!==T||(A=!1),A&&(this.diagnostics={runnable:C,material:n,programLog:S,vertexShader:{log:L,prefix:f},fragmentShader:{log:T,prefix:m}}),o.deleteShader(M),o.deleteShader(w);var E;this.getUniforms=function(){return void 0===E&&(E=new WebGLUniforms(o,x,e)),E};var P;return this.getAttributes=function(){return void 0===P&&(P=fetchAttributeLocations(o,x)),P},this.destroy=function(){o.deleteProgram(x),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn("WebGLProgram: .uniforms is now .getUniforms()."),this.getUniforms()}},attributes:{get:function(){return console.warn("WebGLProgram: .attributes is now .getAttributes()."),this.getAttributes()}}}),this.id=programIdCount++,this.code=r,this.usedTimes=1,this.program=x,this.vertexShader=M,this.fragmentShader=w,this}function WebGLPrograms(e,t,r){function n(e){var t=e.skeleton.bones;if(r.floatVertexTextures)return 1024;var n=r.maxVertexUniforms,i=Math.floor((n-20)/4),a=Math.min(i,t.length);return a<t.length?(console.warn("WebGLRenderer: Skeleton has "+t.length+" bones. This GPU supports "+a+"."),0):a}function i(e,t){var r;return e?e.isTexture?r=e.encoding:e.isWebGLRenderTarget&&(console.warn("WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),r=e.texture.encoding):r=LinearEncoding,r===LinearEncoding&&t&&(r=GammaEncoding),r}var a=[],o={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow"},s=["precision","supportsVertexTextures","map","mapEncoding","envMap","envMapMode","envMapEncoding","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering"];this.getParameters=function(t,a,s,c,l,u,h){var p=o[t.type],d=h.isSkinnedMesh?n(h):0,f=r.precision;null!==t.precision&&(f=r.getMaxPrecision(t.precision))!==t.precision&&console.warn("WebGLProgram.getParameters:",t.precision,"not supported, using",f,"instead.");var m=e.getRenderTarget();return{shaderID:p,precision:f,supportsVertexTextures:r.vertexTextures,outputEncoding:i(m?m.texture:null,e.gammaOutput),map:!!t.map,mapEncoding:i(t.map,e.gammaInput),envMap:!!t.envMap,envMapMode:t.envMap&&t.envMap.mapping,envMapEncoding:i(t.envMap,e.gammaInput),envMapCubeUV:!!t.envMap&&(t.envMap.mapping===CubeUVReflectionMapping||t.envMap.mapping===CubeUVRefractionMapping),lightMap:!!t.lightMap,aoMap:!!t.aoMap,emissiveMap:!!t.emissiveMap,emissiveMapEncoding:i(t.emissiveMap,e.gammaInput),bumpMap:!!t.bumpMap,normalMap:!!t.normalMap,displacementMap:!!t.displacementMap,roughnessMap:!!t.roughnessMap,metalnessMap:!!t.metalnessMap,specularMap:!!t.specularMap,alphaMap:!!t.alphaMap,gradientMap:!!t.gradientMap,combine:t.combine,vertexColors:t.vertexColors,fog:!!c,useFog:t.fog,fogExp:c&&c.isFogExp2,flatShading:t.flatShading,sizeAttenuation:t.sizeAttenuation,logarithmicDepthBuffer:r.logarithmicDepthBuffer,skinning:t.skinning&&d>0,maxBones:d,useVertexTexture:r.floatVertexTextures,morphTargets:t.morphTargets,morphNormals:t.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:a.directional.length,numPointLights:a.point.length,numSpotLights:a.spot.length,numRectAreaLights:a.rectArea.length,numHemiLights:a.hemi.length,numClippingPlanes:l,numClipIntersection:u,dithering:t.dithering,shadowMapEnabled:e.shadowMap.enabled&&h.receiveShadow&&s.length>0,shadowMapType:e.shadowMap.type,toneMapping:e.toneMapping,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:t.premultipliedAlpha,alphaTest:t.alphaTest,doubleSided:t.side===DoubleSide,flipSided:t.side===BackSide,depthPacking:void 0!==t.depthPacking&&t.depthPacking}},this.getProgramCode=function(t,r){var n=[];if(r.shaderID?n.push(r.shaderID):(n.push(t.fragmentShader),n.push(t.vertexShader)),void 0!==t.defines)for(var i in t.defines)n.push(i),n.push(t.defines[i]);for(var a=0;a<s.length;a++)n.push(r[s[a]]);return n.push(t.onBeforeCompile.toString()),n.push(e.gammaOutput),n.join()},this.acquireProgram=function(r,n,i,o){for(var s,c=0,l=a.length;c<l;c++){var u=a[c];if(u.code===o){++(s=u).usedTimes;break}}return void 0===s&&(s=new WebGLProgram(e,t,o,r,n,i),a.push(s)),s},this.releaseProgram=function(e){if(0==--e.usedTimes){var t=a.indexOf(e);a[t]=a[a.length-1],a.pop(),e.destroy()}},this.programs=a}function WebGLProperties(){function e(e){var t=i.get(e);return void 0===t&&(t={},i.set(e,t)),t}function t(e){i.delete(e)}function r(e,t,r){i.get(e)[t]=r}function n(){i=new WeakMap}var i=new WeakMap;return{get:e,remove:t,update:r,dispose:n}}function painterSortStable(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program&&t.program&&e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function reversePainterSortStable(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function WebGLRenderList(){function e(){i=0,a.length=0,o.length=0}function t(e,t,r,s,c){var l=n[i];void 0===l?(l={id:e.id,object:e,geometry:t,material:r,program:r.program,renderOrder:e.renderOrder,z:s,group:c},n[i]=l):(l.id=e.id,l.object=e,l.geometry=t,l.material=r,l.program=r.program,l.renderOrder=e.renderOrder,l.z=s,l.group=c),(!0===r.transparent?o:a).push(l),i++}function r(){a.length>1&&a.sort(painterSortStable),o.length>1&&o.sort(reversePainterSortStable)}var n=[],i=0,a=[],o=[];return{opaque:a,transparent:o,init:e,push:t,sort:r}}function WebGLRenderLists(){function e(e,t){var n=e.id+","+t.id,i=r[n];return void 0===i&&(i=new WebGLRenderList,r[n]=i),i}function t(){r={}}var r={};return{get:e,dispose:t}}function UniformsCache(){var e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];var r;switch(t.type){case"DirectionalLight":r={direction:new Vector3,color:new Color,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Vector2};break;case"SpotLight":r={position:new Vector3,direction:new Vector3,color:new Color,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Vector2};break;case"PointLight":r={position:new Vector3,color:new Color,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Vector2,shadowCameraNear:1,shadowCameraFar:1e3};break;case"HemisphereLight":r={direction:new Vector3,skyColor:new Color,groundColor:new Color};break;case"RectAreaLight":r={color:new Color,position:new Vector3,halfWidth:new Vector3,halfHeight:new Vector3}}return e[t.id]=r,r}}}function WebGLLights(){function e(e,o,s){for(var c=0,l=0,u=0,h=0,p=0,d=0,f=0,m=0,v=s.matrixWorldInverse,g=0,y=e.length;g<y;g++){var x=e[g],b=x.color,_=x.intensity,M=x.distance,w=x.shadow&&x.shadow.map?x.shadow.map.texture:null;if(x.isAmbientLight)c+=b.r*_,l+=b.g*_,u+=b.b*_;else if(x.isDirectionalLight){if((L=t.get(x)).color.copy(x.color).multiplyScalar(x.intensity),L.direction.setFromMatrixPosition(x.matrixWorld),n.setFromMatrixPosition(x.target.matrixWorld),L.direction.sub(n),L.direction.transformDirection(v),L.shadow=x.castShadow,x.castShadow){S=x.shadow;L.shadowBias=S.bias,L.shadowRadius=S.radius,L.shadowMapSize=S.mapSize}r.directionalShadowMap[h]=w,r.directionalShadowMatrix[h]=x.shadow.matrix,r.directional[h]=L,h++}else if(x.isSpotLight){if((L=t.get(x)).position.setFromMatrixPosition(x.matrixWorld),L.position.applyMatrix4(v),L.color.copy(b).multiplyScalar(_),L.distance=M,L.direction.setFromMatrixPosition(x.matrixWorld),n.setFromMatrixPosition(x.target.matrixWorld),L.direction.sub(n),L.direction.transformDirection(v),L.coneCos=Math.cos(x.angle),L.penumbraCos=Math.cos(x.angle*(1-x.penumbra)),L.decay=0===x.distance?0:x.decay,L.shadow=x.castShadow,x.castShadow){S=x.shadow;L.shadowBias=S.bias,L.shadowRadius=S.radius,L.shadowMapSize=S.mapSize}r.spotShadowMap[d]=w,r.spotShadowMatrix[d]=x.shadow.matrix,r.spot[d]=L,d++}else if(x.isRectAreaLight)(L=t.get(x)).color.copy(b).multiplyScalar(_),L.position.setFromMatrixPosition(x.matrixWorld),L.position.applyMatrix4(v),a.identity(),i.copy(x.matrixWorld),i.premultiply(v),a.extractRotation(i),L.halfWidth.set(.5*x.width,0,0),L.halfHeight.set(0,.5*x.height,0),L.halfWidth.applyMatrix4(a),L.halfHeight.applyMatrix4(a),r.rectArea[f]=L,f++;else if(x.isPointLight){if((L=t.get(x)).position.setFromMatrixPosition(x.matrixWorld),L.position.applyMatrix4(v),L.color.copy(x.color).multiplyScalar(x.intensity),L.distance=x.distance,L.decay=0===x.distance?0:x.decay,L.shadow=x.castShadow,x.castShadow){var S=x.shadow;L.shadowBias=S.bias,L.shadowRadius=S.radius,L.shadowMapSize=S.mapSize,L.shadowCameraNear=S.camera.near,L.shadowCameraFar=S.camera.far}r.pointShadowMap[p]=w,r.pointShadowMatrix[p]=x.shadow.matrix,r.point[p]=L,p++}else if(x.isHemisphereLight){var L=t.get(x);L.direction.setFromMatrixPosition(x.matrixWorld),L.direction.transformDirection(v),L.direction.normalize(),L.skyColor.copy(x.color).multiplyScalar(_),L.groundColor.copy(x.groundColor).multiplyScalar(_),r.hemi[m]=L,m++}}r.ambient[0]=c,r.ambient[1]=l,r.ambient[2]=u,r.directional.length=h,r.spot.length=d,r.rectArea.length=f,r.point.length=p,r.hemi.length=m,r.hash=r.id+","+h+","+p+","+d+","+f+","+m+","+o.length}var t=new UniformsCache,r={id:count++,hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},n=new Vector3,i=new Matrix4,a=new Matrix4;return{setup:e,state:r}}function WebGLRenderState(){function e(){o.length=0,s.length=0,c.length=0}function t(e){o.push(e)}function r(e){s.push(e)}function n(e){c.push(e)}function i(e){a.setup(o,s,e)}var a=new WebGLLights,o=[],s=[],c=[];return{init:e,state:{lightsArray:o,shadowsArray:s,spritesArray:c,lights:a},setupLights:i,pushLight:t,pushShadow:r,pushSprite:n}}function WebGLRenderStates(){function e(e,t){var n=e.id+","+t.id,i=r[n];return void 0===i&&(i=new WebGLRenderState,r[n]=i),i}function t(){r={}}var r={};return{get:e,dispose:t}}function WebGLShadowMap(e,t,r){function n(t,r,n,i,a,o){var s=t.geometry,c=null,l=f,u=t.customDepthMaterial;if(n&&(l=m,u=t.customDistanceMaterial),u)c=u;else{var d=!1;r.morphTargets&&(s&&s.isBufferGeometry?d=s.morphAttributes&&s.morphAttributes.position&&s.morphAttributes.position.length>0:s&&s.isGeometry&&(d=s.morphTargets&&s.morphTargets.length>0)),t.isSkinnedMesh&&!1===r.skinning&&console.warn("WebGLShadowMap: SkinnedMesh with material.skinning set to false:",t);var y=t.isSkinnedMesh&&r.skinning,x=0;d&&(x|=h),y&&(x|=p),c=l[x]}if(e.localClippingEnabled&&!0===r.clipShadows&&0!==r.clippingPlanes.length){var b=c.uuid,_=r.uuid,M=v[b];void 0===M&&(M={},v[b]=M);var w=M[_];void 0===w&&(w=c.clone(),M[_]=w),c=w}return c.visible=r.visible,c.wireframe=r.wireframe,c.side=null!=r.shadowSide?r.shadowSide:g[r.side],c.clipShadows=r.clipShadows,c.clippingPlanes=r.clippingPlanes,c.clipIntersection=r.clipIntersection,c.wireframeLinewidth=r.wireframeLinewidth,c.linewidth=r.linewidth,n&&c.isMeshDistanceMaterial&&(c.referencePosition.copy(i),c.nearDistance=a,c.farDistance=o),c}function i(r,o,s,c){if(!1!==r.visible){if(r.layers.test(o.layers)&&(r.isMesh||r.isLine||r.isPoints)&&r.castShadow&&(!r.frustumCulled||a.intersectsObject(r))){r.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,r.matrixWorld);var l=t.update(r),h=r.material;if(Array.isArray(h))for(var p=l.groups,d=0,f=p.length;d<f;d++){var m=p[d],v=h[m.materialIndex];if(v&&v.visible){g=n(r,v,c,u,s.near,s.far);e.renderBufferDirect(s,null,l,g,r,m)}}else if(h.visible){var g=n(r,h,c,u,s.near,s.far);e.renderBufferDirect(s,null,l,g,r,null)}}for(var y=r.children,x=0,b=y.length;x<b;x++)i(y[x],o,s,c)}}for(var a=new Frustum,o=new Matrix4,s=new Vector2,c=new Vector2(r,r),l=new Vector3,u=new Vector3,h=1,p=2,d=1+(h|p),f=new Array(d),m=new Array(d),v={},g={0:BackSide,1:FrontSide,2:DoubleSide},y=[new Vector3(1,0,0),new Vector3(-1,0,0),new Vector3(0,0,1),new Vector3(0,0,-1),new Vector3(0,1,0),new Vector3(0,-1,0)],x=[new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,0,1),new Vector3(0,0,-1)],b=[new Vector4,new Vector4,new Vector4,new Vector4,new Vector4,new Vector4],_=0;_!==d;++_){var M=0!=(_&h),w=0!=(_&p),S=new MeshDepthMaterial({depthPacking:RGBADepthPacking,morphTargets:M,skinning:w});f[_]=S;var L=new MeshDistanceMaterial({morphTargets:M,skinning:w});m[_]=L}var T=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=PCFShadowMap,this.render=function(t,r,n){if(!1!==T.enabled&&(!1!==T.autoUpdate||!1!==T.needsUpdate)&&0!==t.length){var h=e.context,p=e.state;p.disable(h.BLEND),p.buffers.color.setClear(1,1,1,1),p.buffers.depth.setTest(!0),p.setScissorTest(!1);for(var d,f=0,m=t.length;f<m;f++){var v=t[f],g=v.shadow,_=v&&v.isPointLight;if(void 0!==g){var M=g.camera;if(s.copy(g.mapSize),s.min(c),_){var w=s.x,S=s.y;b[0].set(2*w,S,w,S),b[1].set(0,S,w,S),b[2].set(3*w,S,w,S),b[3].set(w,S,w,S),b[4].set(3*w,0,w,S),b[5].set(w,0,w,S),s.x*=4,s.y*=2}if(null===g.map){var L={minFilter:NearestFilter,magFilter:NearestFilter,format:RGBAFormat};g.map=new WebGLRenderTarget(s.x,s.y,L),g.map.texture.name=v.name+".shadowMap",M.updateProjectionMatrix()}g.isSpotLightShadow&&g.update(v);var C=g.map,A=g.matrix;u.setFromMatrixPosition(v.matrixWorld),M.position.copy(u),_?(d=6,A.makeTranslation(-u.x,-u.y,-u.z)):(d=1,l.setFromMatrixPosition(v.target.matrixWorld),M.lookAt(l),M.updateMatrixWorld(),A.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),A.multiply(M.projectionMatrix),A.multiply(M.matrixWorldInverse)),e.setRenderTarget(C),e.clear();for(var E=0;E<d;E++){if(_){l.copy(M.position),l.add(y[E]),M.up.copy(x[E]),M.lookAt(l),M.updateMatrixWorld();var P=b[E];p.viewport(P)}o.multiplyMatrices(M.projectionMatrix,M.matrixWorldInverse),a.setFromMatrix(o),i(r,n,M,_)}}else console.warn("WebGLShadowMap:",v,"has no shadow.")}T.needsUpdate=!1}}}function CanvasTexture(e,t,r,n,i,a,o,s,c){Texture.call(this,e,t,r,n,i,a,o,s,c),this.needsUpdate=!0}function WebGLSpriteRenderer(e,t,r,n,i){function a(){var e=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),r=new Uint16Array([0,1,2,0,2,3]);c=t.createBuffer(),l=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,c),t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,l),t.bufferData(t.ELEMENT_ARRAY_BUFFER,r,t.STATIC_DRAW),u=o(),h={position:t.getAttribLocation(u,"position"),uv:t.getAttribLocation(u,"uv")},p={uvOffset:t.getUniformLocation(u,"uvOffset"),uvScale:t.getUniformLocation(u,"uvScale"),rotation:t.getUniformLocation(u,"rotation"),center:t.getUniformLocation(u,"center"),scale:t.getUniformLocation(u,"scale"),color:t.getUniformLocation(u,"color"),map:t.getUniformLocation(u,"map"),opacity:t.getUniformLocation(u,"opacity"),modelViewMatrix:t.getUniformLocation(u,"modelViewMatrix"),projectionMatrix:t.getUniformLocation(u,"projectionMatrix"),fogType:t.getUniformLocation(u,"fogType"),fogDensity:t.getUniformLocation(u,"fogDensity"),fogNear:t.getUniformLocation(u,"fogNear"),fogFar:t.getUniformLocation(u,"fogFar"),fogColor:t.getUniformLocation(u,"fogColor"),fogDepth:t.getUniformLocation(u,"fogDepth"),alphaTest:t.getUniformLocation(u,"alphaTest")};var n=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");n.width=8,n.height=8;var i=n.getContext("2d");i.fillStyle="white",i.fillRect(0,0,8,8),d=new CanvasTexture(n)}function o(){var e=t.createProgram(),r=t.createShader(t.VERTEX_SHADER),n=t.createShader(t.FRAGMENT_SHADER);return t.shaderSource(r,["precision "+i.precision+" float;","#define SHADER_NAME SpriteMaterial","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 center;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float fogDepth;","void main() {","\tvUV = uvOffset + uv * uvScale;","\tvec2 alignedPosition = ( position - center ) * scale;","\tvec2 rotatedPosition;","\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","\tvec4 mvPosition;","\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","\tmvPosition.xy += rotatedPosition;","\tgl_Position = projectionMatrix * mvPosition;","\tfogDepth = - mvPosition.z;","}"].join("\n")),t.shaderSource(n,["precision "+i.precision+" float;","#define SHADER_NAME SpriteMaterial","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","varying float fogDepth;","void main() {","\tvec4 texture = texture2D( map, vUV );","\tgl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","\tif ( gl_FragColor.a < alphaTest ) discard;","\tif ( fogType > 0 ) {","\t\tfloat fogFactor = 0.0;","\t\tif ( fogType == 1 ) {","\t\t\tfogFactor = smoothstep( fogNear, fogFar, fogDepth );","\t\t} else {","\t\t\tconst float LOG2 = 1.442695;","\t\t\tfogFactor = exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 );","\t\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","\t\t}","\t\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );","\t}","}"].join("\n")),t.compileShader(r),t.compileShader(n),t.attachShader(e,r),t.attachShader(e,n),t.linkProgram(e),e}function s(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:t.id-e.id}var c,l,u,h,p,d,f=new Vector3,m=new Quaternion,v=new Vector3;this.render=function(i,o,g){if(0!==i.length){void 0===u&&a(),r.useProgram(u),r.initAttributes(),r.enableAttribute(h.position),r.enableAttribute(h.uv),r.disableUnusedAttributes(),r.disable(t.CULL_FACE),r.enable(t.BLEND),t.bindBuffer(t.ARRAY_BUFFER,c),t.vertexAttribPointer(h.position,2,t.FLOAT,!1,16,0),t.vertexAttribPointer(h.uv,2,t.FLOAT,!1,16,8),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,l),t.uniformMatrix4fv(p.projectionMatrix,!1,g.projectionMatrix.elements),r.activeTexture(t.TEXTURE0),t.uniform1i(p.map,0);var y=0,x=0,b=o.fog;b?(t.uniform3f(p.fogColor,b.color.r,b.color.g,b.color.b),b.isFog?(t.uniform1f(p.fogNear,b.near),t.uniform1f(p.fogFar,b.far),t.uniform1i(p.fogType,1),y=1,x=1):b.isFogExp2&&(t.uniform1f(p.fogDensity,b.density),t.uniform1i(p.fogType,2),y=2,x=2)):(t.uniform1i(p.fogType,0),y=0,x=0);for(var _=0,M=i.length;_<M;_++)(L=i[_]).modelViewMatrix.multiplyMatrices(g.matrixWorldInverse,L.matrixWorld),L.z=-L.modelViewMatrix.elements[14];i.sort(s);for(var w=[],S=[],_=0,M=i.length;_<M;_++){var L=i[_],T=L.material;if(!1!==T.visible){L.onBeforeRender(e,o,g,void 0,T,void 0),t.uniform1f(p.alphaTest,T.alphaTest),t.uniformMatrix4fv(p.modelViewMatrix,!1,L.modelViewMatrix.elements),L.matrixWorld.decompose(f,m,v),w[0]=v.x,w[1]=v.y,S[0]=L.center.x-.5,S[1]=L.center.y-.5;var C=0;o.fog&&T.fog&&(C=x),y!==C&&(t.uniform1i(p.fogType,C),y=C),null!==T.map?(t.uniform2f(p.uvOffset,T.map.offset.x,T.map.offset.y),t.uniform2f(p.uvScale,T.map.repeat.x,T.map.repeat.y)):(t.uniform2f(p.uvOffset,0,0),t.uniform2f(p.uvScale,1,1)),t.uniform1f(p.opacity,T.opacity),t.uniform3f(p.color,T.color.r,T.color.g,T.color.b),t.uniform1f(p.rotation,T.rotation),t.uniform2fv(p.center,S),t.uniform2fv(p.scale,w),r.setBlending(T.blending,T.blendEquation,T.blendSrc,T.blendDst,T.blendEquationAlpha,T.blendSrcAlpha,T.blendDstAlpha,T.premultipliedAlpha),r.buffers.depth.setTest(T.depthTest),r.buffers.depth.setMask(T.depthWrite),r.buffers.color.setMask(T.colorWrite),n.setTexture2D(T.map||d,0),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),L.onAfterRender(e,o,g,void 0,T,void 0)}}r.enable(t.CULL_FACE),r.reset()}}}function WebGLState(e,t,r){function n(){var t=!1,r=new Vector4,n=null,i=new Vector4(0,0,0,0);return{setMask:function(r){n===r||t||(e.colorMask(r,r,r,r),n=r)},setLocked:function(e){t=e},setClear:function(t,n,a,o,s){!0===s&&(t*=o,n*=o,a*=o),r.set(t,n,a,o),!1===i.equals(r)&&(e.clearColor(t,n,a,o),i.copy(r))},reset:function(){t=!1,n=null,i.set(-1,0,0,0)}}}function i(){var t=!1,r=null,n=null,i=null;return{setTest:function(t){t?h(e.DEPTH_TEST):p(e.DEPTH_TEST)},setMask:function(n){r===n||t||(e.depthMask(n),r=n)},setFunc:function(t){if(n!==t){if(t)switch(t){case NeverDepth:e.depthFunc(e.NEVER);break;case AlwaysDepth:e.depthFunc(e.ALWAYS);break;case LessDepth:e.depthFunc(e.LESS);break;case LessEqualDepth:e.depthFunc(e.LEQUAL);break;case EqualDepth:e.depthFunc(e.EQUAL);break;case GreaterEqualDepth:e.depthFunc(e.GEQUAL);break;case GreaterDepth:e.depthFunc(e.GREATER);break;case NotEqualDepth:e.depthFunc(e.NOTEQUAL);break;default:e.depthFunc(e.LEQUAL)}else e.depthFunc(e.LEQUAL);n=t}},setLocked:function(e){t=e},setClear:function(t){i!==t&&(e.clearDepth(t),i=t)},reset:function(){t=!1,r=null,n=null,i=null}}}function a(){var t=!1,r=null,n=null,i=null,a=null,o=null,s=null,c=null,l=null;return{setTest:function(t){t?h(e.STENCIL_TEST):p(e.STENCIL_TEST)},setMask:function(n){r===n||t||(e.stencilMask(n),r=n)},setFunc:function(t,r,o){n===t&&i===r&&a===o||(e.stencilFunc(t,r,o),n=t,i=r,a=o)},setOp:function(t,r,n){o===t&&s===r&&c===n||(e.stencilOp(t,r,n),o=t,s=r,c=n)},setLocked:function(e){t=e},setClear:function(t){l!==t&&(e.clearStencil(t),l=t)},reset:function(){t=!1,r=null,n=null,i=null,a=null,o=null,s=null,c=null,l=null}}}function o(t,r,n){var i=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(var o=0;o<n;o++)e.texImage2D(r+o,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,i);return a}function s(){for(var e=0,t=R.length;e<t;e++)R[e]=0}function c(r){R[r]=1,0===U[r]&&(e.enableVertexAttribArray(r),U[r]=1),0!==N[r]&&(t.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(r,0),N[r]=0)}function l(r,n){R[r]=1,0===U[r]&&(e.enableVertexAttribArray(r),U[r]=1),N[r]!==n&&(t.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(r,n),N[r]=n)}function u(){for(var t=0,r=U.length;t!==r;++t)U[t]!==R[t]&&(e.disableVertexAttribArray(t),U[t]=0)}function h(t){!0!==G[t]&&(e.enable(t),G[t]=!0)}function p(t){!1!==G[t]&&(e.disable(t),G[t]=!1)}function d(){if(null===O&&(O=[],t.get("WEBGL_compressed_texture_pvrtc")||t.get("WEBGL_compressed_texture_s3tc")||t.get("WEBGL_compressed_texture_etc1")||t.get("WEBGL_compressed_texture_astc")))for(var r=e.getParameter(e.COMPRESSED_TEXTURE_FORMATS),n=0;n<r.length;n++)O.push(r[n]);return O}function f(t){return I!==t&&(e.useProgram(t),I=t,!0)}function m(t,n,i,a,o,s,c,l){if(t!==NoBlending?h(e.BLEND):p(e.BLEND),t!==CustomBlending){if(t!==V||l!==X)switch(t){case AdditiveBlending:l?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE,e.ONE,e.ONE)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE));break;case SubtractiveBlending:l?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ZERO,e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ONE_MINUS_SRC_ALPHA)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.ONE_MINUS_SRC_COLOR));break;case MultiplyBlending:l?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.SRC_COLOR));break;default:l?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)):(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA))}F=null,z=null,k=null,j=null,W=null,H=null}else o=o||n,s=s||i,c=c||a,n===F&&o===j||(e.blendEquationSeparate(r.convert(n),r.convert(o)),F=n,j=o),i===z&&a===k&&s===W&&c===H||(e.blendFuncSeparate(r.convert(i),r.convert(a),r.convert(s),r.convert(c)),z=i,k=a,W=s,H=c);V=t,X=l}function v(t,r){t.side===DoubleSide?p(e.CULL_FACE):h(e.CULL_FACE);var n=t.side===BackSide;r&&(n=!n),g(n),!0===t.transparent?m(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha):m(NoBlending),P.setFunc(t.depthFunc),P.setTest(t.depthTest),P.setMask(t.depthWrite),E.setMask(t.colorWrite),b(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits)}function g(t){q!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),q=t)}function y(t){t!==CullFaceNone?(h(e.CULL_FACE),t!==Y&&(t===CullFaceBack?e.cullFace(e.BACK):t===CullFaceFront?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):p(e.CULL_FACE),Y=t}function x(t){t!==Z&&($&&e.lineWidth(t),Z=t)}function b(t,r,n){t?(h(e.POLYGON_OFFSET_FILL),J===r&&K===n||(e.polygonOffset(r,n),J=r,K=n)):p(e.POLYGON_OFFSET_FILL)}function _(t){t?h(e.SCISSOR_TEST):p(e.SCISSOR_TEST)}function M(t){void 0===t&&(t=e.TEXTURE0+Q-1),re!==t&&(e.activeTexture(t),re=t)}function w(t,r){null===re&&M();var n=ne[re];void 0===n&&(n={type:void 0,texture:void 0},ne[re]=n),n.type===t&&n.texture===r||(e.bindTexture(t,r||oe[t]),n.type=t,n.texture=r)}function S(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("WebGLState:",e)}}function L(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("WebGLState:",e)}}function T(t){!1===ie.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),ie.copy(t))}function C(t){!1===ae.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),ae.copy(t))}function A(){for(var t=0;t<U.length;t++)1===U[t]&&(e.disableVertexAttribArray(t),U[t]=0);G={},O=null,re=null,ne={},I=null,V=null,q=null,Y=null,E.reset(),P.reset(),B.reset()}var E=new n,P=new i,B=new a,D=e.getParameter(e.MAX_VERTEX_ATTRIBS),R=new Uint8Array(D),U=new Uint8Array(D),N=new Uint8Array(D),G={},O=null,I=null,V=null,F=null,z=null,k=null,j=null,W=null,H=null,X=!1,q=null,Y=null,Z=null,J=null,K=null,Q=e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS),$=!1,ee=0,te=e.getParameter(e.VERSION);-1!==te.indexOf("WebGL")?(ee=parseFloat(/^WebGL\ ([0-9])/.exec(te)[1]),$=ee>=1):-1!==te.indexOf("OpenGL ES")&&(ee=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(te)[1]),$=ee>=2);var re=null,ne={},ie=new Vector4,ae=new Vector4,oe={};return oe[e.TEXTURE_2D]=o(e.TEXTURE_2D,e.TEXTURE_2D,1),oe[e.TEXTURE_CUBE_MAP]=o(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),E.setClear(0,0,0,1),P.setClear(1),B.setClear(0),h(e.DEPTH_TEST),P.setFunc(LessEqualDepth),g(!1),y(CullFaceBack),h(e.CULL_FACE),h(e.BLEND),m(NormalBlending),{buffers:{color:E,depth:P,stencil:B},initAttributes:s,enableAttribute:c,enableAttributeAndDivisor:l,disableUnusedAttributes:u,enable:h,disable:p,getCompressedTextureFormats:d,useProgram:f,setBlending:m,setMaterial:v,setFlipSided:g,setCullFace:y,setLineWidth:x,setPolygonOffset:b,setScissorTest:_,activeTexture:M,bindTexture:w,compressedTexImage2D:S,texImage2D:L,scissor:T,viewport:C,reset:A}}function WebGLTextures(e,t,r,n,i,a,o){function s(e,t){if(e.width>t||e.height>t){if("data"in e)return void console.warn("WebGLRenderer: image in DataTexture is too big ("+e.width+"x"+e.height+").");var r=t/Math.max(e.width,e.height),n=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return n.width=Math.floor(e.width*r),n.height=Math.floor(e.height*r),n.getContext("2d").drawImage(e,0,0,e.width,e.height,0,0,n.width,n.height),console.warn("WebGLRenderer: image is too big ("+e.width+"x"+e.height+"). Resized to "+n.width+"x"+n.height,e),n}return e}function c(e){return _Math.isPowerOfTwo(e.width)&&_Math.isPowerOfTwo(e.height)}function l(e){return e instanceof HTMLImageElement||e instanceof HTMLCanvasElement||e instanceof ImageBitmap?(void 0===P&&(P=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),P.width=_Math.floorPowerOfTwo(e.width),P.height=_Math.floorPowerOfTwo(e.height),P.getContext("2d").drawImage(e,0,0,P.width,P.height),console.warn("WebGLRenderer: image is not power of two ("+e.width+"x"+e.height+"). Resized to "+P.width+"x"+P.height,e),P):e}function u(e){return e.wrapS!==ClampToEdgeWrapping||e.wrapT!==ClampToEdgeWrapping||e.minFilter!==NearestFilter&&e.minFilter!==LinearFilter}function h(e,t){return e.generateMipmaps&&t&&e.minFilter!==NearestFilter&&e.minFilter!==LinearFilter}function p(t,r,i,a){e.generateMipmap(t),n.get(r).__maxMipLevel=Math.log2(Math.max(i,a))}function d(t){return t===NearestFilter||t===NearestMipMapNearestFilter||t===NearestMipMapLinearFilter?e.NEAREST:e.LINEAR}function f(e){var t=e.target;t.removeEventListener("dispose",f),v(t),t.isVideoTexture&&delete D[t.id],o.memory.textures--}function m(e){var t=e.target;t.removeEventListener("dispose",m),g(t),o.memory.textures--}function v(t){var r=n.get(t);if(t.image&&r.__image__webglTextureCube)e.deleteTexture(r.__image__webglTextureCube);else{if(void 0===r.__webglInit)return;e.deleteTexture(r.__webglTexture)}n.remove(t)}function g(t){var r=n.get(t),i=n.get(t.texture);if(t){if(void 0!==i.__webglTexture&&e.deleteTexture(i.__webglTexture),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLRenderTargetCube)for(var a=0;a<6;a++)e.deleteFramebuffer(r.__webglFramebuffer[a]),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer[a]);else e.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer);n.remove(t.texture),n.remove(t)}}function y(t,i){var a=n.get(t);if(t.isVideoTexture&&E(t),t.version>0&&a.__version!==t.version){var o=t.image;if(void 0===o)console.warn("WebGLRenderer: Texture marked for update but image is undefined",t);else{if(!1!==o.complete)return void M(a,t,i);console.warn("WebGLRenderer: Texture marked for update but image is incomplete",t)}}r.activeTexture(e.TEXTURE0+i),r.bindTexture(e.TEXTURE_2D,a.__webglTexture)}function x(t,l){var u=n.get(t);if(6===t.image.length)if(t.version>0&&u.__version!==t.version){u.__image__webglTextureCube||(t.addEventListener("dispose",f),u.__image__webglTextureCube=e.createTexture(),o.memory.textures++),r.activeTexture(e.TEXTURE0+l),r.bindTexture(e.TEXTURE_CUBE_MAP,u.__image__webglTextureCube),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,t.flipY);for(var d=t&&t.isCompressedTexture,m=t.image[0]&&t.image[0].isDataTexture,v=[],g=0;g<6;g++)v[g]=d||m?m?t.image[g].image:t.image[g]:s(t.image[g],i.maxCubemapSize);var y=v[0],x=c(y),b=a.convert(t.format),M=a.convert(t.type);_(e.TEXTURE_CUBE_MAP,t,x);for(g=0;g<6;g++)if(d)for(var w,S=v[g].mipmaps,L=0,T=S.length;L<T;L++)w=S[L],t.format!==RGBAFormat&&t.format!==RGBFormat?r.getCompressedTextureFormats().indexOf(b)>-1?r.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+g,L,b,w.width,w.height,0,w.data):console.warn("WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+g,L,b,w.width,w.height,0,b,M,w.data);else m?r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+g,0,b,v[g].width,v[g].height,0,b,M,v[g].data):r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+g,0,b,b,M,v[g]);u.__maxMipLevel=d?S.length-1:0,h(t,x)&&p(e.TEXTURE_CUBE_MAP,t,y.width,y.height),u.__version=t.version,t.onUpdate&&t.onUpdate(t)}else r.activeTexture(e.TEXTURE0+l),r.bindTexture(e.TEXTURE_CUBE_MAP,u.__image__webglTextureCube)}function b(t,i){r.activeTexture(e.TEXTURE0+i),r.bindTexture(e.TEXTURE_CUBE_MAP,n.get(t).__webglTexture)}function _(r,o,s){var c;if(s?(e.texParameteri(r,e.TEXTURE_WRAP_S,a.convert(o.wrapS)),e.texParameteri(r,e.TEXTURE_WRAP_T,a.convert(o.wrapT)),e.texParameteri(r,e.TEXTURE_MAG_FILTER,a.convert(o.magFilter)),e.texParameteri(r,e.TEXTURE_MIN_FILTER,a.convert(o.minFilter))):(e.texParameteri(r,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(r,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),o.wrapS===ClampToEdgeWrapping&&o.wrapT===ClampToEdgeWrapping||console.warn("WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to ClampToEdgeWrapping.",o),e.texParameteri(r,e.TEXTURE_MAG_FILTER,d(o.magFilter)),e.texParameteri(r,e.TEXTURE_MIN_FILTER,d(o.minFilter)),o.minFilter!==NearestFilter&&o.minFilter!==LinearFilter&&console.warn("WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to NearestFilter or LinearFilter.",o)),c=t.get("EXT_texture_filter_anisotropic")){if(o.type===FloatType&&null===t.get("OES_texture_float_linear"))return;if(o.type===HalfFloatType&&null===t.get("OES_texture_half_float_linear"))return;(o.anisotropy>1||n.get(o).__currentAnisotropy)&&(e.texParameterf(r,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(o.anisotropy,i.getMaxAnisotropy())),n.get(o).__currentAnisotropy=o.anisotropy)}}function M(t,n,d){void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",f),t.__webglTexture=e.createTexture(),o.memory.textures++),r.activeTexture(e.TEXTURE0+d),r.bindTexture(e.TEXTURE_2D,t.__webglTexture),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,n.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,n.unpackAlignment);var m=s(n.image,i.maxTextureSize);u(n)&&!1===c(m)&&(m=l(m));var v=c(m),g=a.convert(n.format),y=a.convert(n.type);_(e.TEXTURE_2D,n,v);var x,b=n.mipmaps;if(n.isDepthTexture){var M=e.DEPTH_COMPONENT;if(n.type===FloatType){if(!B)throw new Error("Float Depth Texture only supported in WebGL2.0");M=e.DEPTH_COMPONENT32F}else B&&(M=e.DEPTH_COMPONENT16);n.format===DepthFormat&&M===e.DEPTH_COMPONENT&&n.type!==UnsignedShortType&&n.type!==UnsignedIntType&&(console.warn("WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=UnsignedShortType,y=a.convert(n.type)),n.format===DepthStencilFormat&&(M=e.DEPTH_STENCIL,n.type!==UnsignedInt248Type&&(console.warn("WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=UnsignedInt248Type,y=a.convert(n.type))),r.texImage2D(e.TEXTURE_2D,0,M,m.width,m.height,0,g,y,null)}else if(n.isDataTexture)if(b.length>0&&v){for(var w=0,S=b.length;w<S;w++)x=b[w],r.texImage2D(e.TEXTURE_2D,w,g,x.width,x.height,0,g,y,x.data);n.generateMipmaps=!1,t.__maxMipLevel=b.length-1}else r.texImage2D(e.TEXTURE_2D,0,g,m.width,m.height,0,g,y,m.data),t.__maxMipLevel=0;else if(n.isCompressedTexture){for(var w=0,S=b.length;w<S;w++)x=b[w],n.format!==RGBAFormat&&n.format!==RGBFormat?r.getCompressedTextureFormats().indexOf(g)>-1?r.compressedTexImage2D(e.TEXTURE_2D,w,g,x.width,x.height,0,x.data):console.warn("WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):r.texImage2D(e.TEXTURE_2D,w,g,x.width,x.height,0,g,y,x.data);t.__maxMipLevel=b.length-1}else if(b.length>0&&v){for(var w=0,S=b.length;w<S;w++)x=b[w],r.texImage2D(e.TEXTURE_2D,w,g,g,y,x);n.generateMipmaps=!1,t.__maxMipLevel=b.length-1}else r.texImage2D(e.TEXTURE_2D,0,g,g,y,m),t.__maxMipLevel=0;h(n,v)&&p(e.TEXTURE_2D,n,m.width,m.height),t.__version=n.version,n.onUpdate&&n.onUpdate(n)}function w(t,i,o,s){var c=a.convert(i.texture.format),l=a.convert(i.texture.type);r.texImage2D(s,0,c,i.width,i.height,0,c,l,null),e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,o,s,n.get(i.texture).__webglTexture,0),e.bindFramebuffer(e.FRAMEBUFFER,null)}function S(t,r){e.bindRenderbuffer(e.RENDERBUFFER,t),r.depthBuffer&&!r.stencilBuffer?(e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_COMPONENT16,r.width,r.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,t)):r.depthBuffer&&r.stencilBuffer?(e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,r.width,r.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,t)):e.renderbufferStorage(e.RENDERBUFFER,e.RGBA4,r.width,r.height),e.bindRenderbuffer(e.RENDERBUFFER,null)}function L(t,r){if(r&&r.isWebGLRenderTargetCube)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(e.FRAMEBUFFER,t),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of DepthTexture");n.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),y(r.depthTexture,0);var i=n.get(r.depthTexture).__webglTexture;if(r.depthTexture.format===DepthFormat)e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,i,0);else{if(r.depthTexture.format!==DepthStencilFormat)throw new Error("Unknown depthTexture format");e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,i,0)}}function T(t){var r=n.get(t),i=!0===t.isWebGLRenderTargetCube;if(t.depthTexture){if(i)throw new Error("target.depthTexture not supported in Cube render targets");L(r.__webglFramebuffer,t)}else if(i){r.__webglDepthbuffer=[];for(var a=0;a<6;a++)e.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer[a]),r.__webglDepthbuffer[a]=e.createRenderbuffer(),S(r.__webglDepthbuffer[a],t)}else e.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer),r.__webglDepthbuffer=e.createRenderbuffer(),S(r.__webglDepthbuffer,t);e.bindFramebuffer(e.FRAMEBUFFER,null)}function C(t){var i=n.get(t),a=n.get(t.texture);t.addEventListener("dispose",m),a.__webglTexture=e.createTexture(),o.memory.textures++;var s=!0===t.isWebGLRenderTargetCube,l=c(t);if(s){i.__webglFramebuffer=[];for(u=0;u<6;u++)i.__webglFramebuffer[u]=e.createFramebuffer()}else i.__webglFramebuffer=e.createFramebuffer();if(s){r.bindTexture(e.TEXTURE_CUBE_MAP,a.__webglTexture),_(e.TEXTURE_CUBE_MAP,t.texture,l);for(var u=0;u<6;u++)w(i.__webglFramebuffer[u],t,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+u);h(t.texture,l)&&p(e.TEXTURE_CUBE_MAP,t.texture,t.width,t.height),r.bindTexture(e.TEXTURE_CUBE_MAP,null)}else r.bindTexture(e.TEXTURE_2D,a.__webglTexture),_(e.TEXTURE_2D,t.texture,l),w(i.__webglFramebuffer,t,e.COLOR_ATTACHMENT0,e.TEXTURE_2D),h(t.texture,l)&&p(e.TEXTURE_2D,t.texture,t.width,t.height),r.bindTexture(e.TEXTURE_2D,null);t.depthBuffer&&T(t)}function A(t){var i=t.texture;if(h(i,c(t))){var a=t.isWebGLRenderTargetCube?e.TEXTURE_CUBE_MAP:e.TEXTURE_2D,o=n.get(i).__webglTexture;r.bindTexture(a,o),p(a,i,t.width,t.height),r.bindTexture(a,null)}}function E(e){var t=e.id,r=o.render.frame;D[t]!==r&&(D[t]=r,e.update())}var P,B="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext,D={};this.setTexture2D=y,this.setTextureCube=x,this.setTextureCubeDynamic=b,this.setupRenderTarget=C,this.updateRenderTargetMipmap=A}function WebGLUtils(e,t){function r(r){var n;if(r===RepeatWrapping)return e.REPEAT;if(r===ClampToEdgeWrapping)return e.CLAMP_TO_EDGE;if(r===MirroredRepeatWrapping)return e.MIRRORED_REPEAT;if(r===NearestFilter)return e.NEAREST;if(r===NearestMipMapNearestFilter)return e.NEAREST_MIPMAP_NEAREST;if(r===NearestMipMapLinearFilter)return e.NEAREST_MIPMAP_LINEAR;if(r===LinearFilter)return e.LINEAR;if(r===LinearMipMapNearestFilter)return e.LINEAR_MIPMAP_NEAREST;if(r===LinearMipMapLinearFilter)return e.LINEAR_MIPMAP_LINEAR;if(r===UnsignedByteType)return e.UNSIGNED_BYTE;if(r===UnsignedShort4444Type)return e.UNSIGNED_SHORT_4_4_4_4;if(r===UnsignedShort5551Type)return e.UNSIGNED_SHORT_5_5_5_1;if(r===UnsignedShort565Type)return e.UNSIGNED_SHORT_5_6_5;if(r===ByteType)return e.BYTE;if(r===ShortType)return e.SHORT;if(r===UnsignedShortType)return e.UNSIGNED_SHORT;if(r===IntType)return e.INT;if(r===UnsignedIntType)return e.UNSIGNED_INT;if(r===FloatType)return e.FLOAT;if(r===HalfFloatType&&null!==(n=t.get("OES_texture_half_float")))return n.HALF_FLOAT_OES;if(r===AlphaFormat)return e.ALPHA;if(r===RGBFormat)return e.RGB;if(r===RGBAFormat)return e.RGBA;if(r===LuminanceFormat)return e.LUMINANCE;if(r===LuminanceAlphaFormat)return e.LUMINANCE_ALPHA;if(r===DepthFormat)return e.DEPTH_COMPONENT;if(r===DepthStencilFormat)return e.DEPTH_STENCIL;if(r===AddEquation)return e.FUNC_ADD;if(r===SubtractEquation)return e.FUNC_SUBTRACT;if(r===ReverseSubtractEquation)return e.FUNC_REVERSE_SUBTRACT;if(r===ZeroFactor)return e.ZERO;if(r===OneFactor)return e.ONE;if(r===SrcColorFactor)return e.SRC_COLOR;if(r===OneMinusSrcColorFactor)return e.ONE_MINUS_SRC_COLOR;if(r===SrcAlphaFactor)return e.SRC_ALPHA;if(r===OneMinusSrcAlphaFactor)return e.ONE_MINUS_SRC_ALPHA;if(r===DstAlphaFactor)return e.DST_ALPHA;if(r===OneMinusDstAlphaFactor)return e.ONE_MINUS_DST_ALPHA;if(r===DstColorFactor)return e.DST_COLOR;if(r===OneMinusDstColorFactor)return e.ONE_MINUS_DST_COLOR;if(r===SrcAlphaSaturateFactor)return e.SRC_ALPHA_SATURATE;if((r===RGB_S3TC_DXT1_Format||r===RGBA_S3TC_DXT1_Format||r===RGBA_S3TC_DXT3_Format||r===RGBA_S3TC_DXT5_Format)&&null!==(n=t.get("WEBGL_compressed_texture_s3tc"))){if(r===RGB_S3TC_DXT1_Format)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===RGBA_S3TC_DXT1_Format)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===RGBA_S3TC_DXT3_Format)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===RGBA_S3TC_DXT5_Format)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if((r===RGB_PVRTC_4BPPV1_Format||r===RGB_PVRTC_2BPPV1_Format||r===RGBA_PVRTC_4BPPV1_Format||r===RGBA_PVRTC_2BPPV1_Format)&&null!==(n=t.get("WEBGL_compressed_texture_pvrtc"))){if(r===RGB_PVRTC_4BPPV1_Format)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===RGB_PVRTC_2BPPV1_Format)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===RGBA_PVRTC_4BPPV1_Format)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===RGBA_PVRTC_2BPPV1_Format)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(r===RGB_ETC1_Format&&null!==(n=t.get("WEBGL_compressed_texture_etc1")))return n.COMPRESSED_RGB_ETC1_WEBGL;if((r===RGBA_ASTC_4x4_Format||r===RGBA_ASTC_5x4_Format||r===RGBA_ASTC_5x5_Format||r===RGBA_ASTC_6x5_Format||r===RGBA_ASTC_6x6_Format||r===RGBA_ASTC_8x5_Format||r===RGBA_ASTC_8x6_Format||r===RGBA_ASTC_8x8_Format||r===RGBA_ASTC_10x5_Format||r===RGBA_ASTC_10x6_Format||r===RGBA_ASTC_10x8_Format||r===RGBA_ASTC_10x10_Format||r===RGBA_ASTC_12x10_Format||r===RGBA_ASTC_12x12_Format)&&null!==(n=t.get("WEBGL_compressed_texture_astc")))return r;if((r===MinEquation||r===MaxEquation)&&null!==(n=t.get("EXT_blend_minmax"))){if(r===MinEquation)return n.MIN_EXT;if(r===MaxEquation)return n.MAX_EXT}return r===UnsignedInt248Type&&null!==(n=t.get("WEBGL_depth_texture"))?n.UNSIGNED_INT_24_8_WEBGL:0}return{convert:r}}function ArrayCamera(e){PerspectiveCamera.call(this),this.cameras=e||[]}function WebVRManager(e){function t(){if(null!==n&&n.isPresenting){var t=n.getEyeParameters("left"),i=t.renderWidth,a=t.renderHeight;m=e.getPixelRatio(),f=e.getSize(),e.setDrawingBufferSize(2*i,a,1)}else r.enabled&&e.setDrawingBufferSize(f.width,f.height,m)}var r=this,n=null,i=null,a=null,o=new Matrix4,s=new Matrix4;"undefined"!=typeof window&&"VRFrameData"in window&&(i=new window.VRFrameData);var c=new Matrix4,l=new Quaternion,u=new Vector3,h=new PerspectiveCamera;h.bounds=new Vector4(0,0,.5,1),h.layers.enable(1);var p=new PerspectiveCamera;p.bounds=new Vector4(.5,0,.5,1),p.layers.enable(2);var d=new ArrayCamera([h,p]);d.layers.enable(1),d.layers.enable(2);var f,m;"undefined"!=typeof window&&window.addEventListener("vrdisplaypresentchange",t,!1),this.enabled=!1,this.userHeight=1.6,this.getDevice=function(){return n},this.setDevice=function(e){void 0!==e&&(n=e)},this.setPoseTarget=function(e){void 0!==e&&(a=e)},this.getCamera=function(e){if(null===n)return e;n.depthNear=e.near,n.depthFar=e.far,n.getFrameData(i);var t=n.stageParameters;t?o.fromArray(t.sittingToStandingTransform):o.makeTranslation(0,r.userHeight,0);var f=i.pose,m=null!==a?a:e;if(m.matrix.copy(o),m.matrix.decompose(m.position,m.quaternion,m.scale),null!==f.orientation&&(l.fromArray(f.orientation),m.quaternion.multiply(l)),null!==f.position&&(l.setFromRotationMatrix(o),u.fromArray(f.position),u.applyQuaternion(l),m.position.add(u)),m.updateMatrixWorld(),!1===n.isPresenting)return e;h.near=e.near,p.near=e.near,h.far=e.far,p.far=e.far,d.matrixWorld.copy(e.matrixWorld),d.matrixWorldInverse.copy(e.matrixWorldInverse),h.matrixWorldInverse.fromArray(i.leftViewMatrix),p.matrixWorldInverse.fromArray(i.rightViewMatrix),s.getInverse(o),h.matrixWorldInverse.multiply(s),p.matrixWorldInverse.multiply(s);var v=m.parent;null!==v&&(c.getInverse(v.matrixWorld),h.matrixWorldInverse.multiply(c),p.matrixWorldInverse.multiply(c)),h.matrixWorld.getInverse(h.matrixWorldInverse),p.matrixWorld.getInverse(p.matrixWorldInverse),h.projectionMatrix.fromArray(i.leftProjectionMatrix),p.projectionMatrix.fromArray(i.rightProjectionMatrix),d.projectionMatrix.copy(h.projectionMatrix);var g=n.getLayers();if(g.length){var y=g[0];null!==y.leftBounds&&4===y.leftBounds.length&&h.bounds.fromArray(y.leftBounds),null!==y.rightBounds&&4===y.rightBounds.length&&p.bounds.fromArray(y.rightBounds)}return d},this.getStandingMatrix=function(){return o},this.submitFrame=function(){n&&n.isPresenting&&n.submitFrame()},this.dispose=function(){"undefined"!=typeof window&&window.removeEventListener("vrdisplaypresentchange",t)}}function WebGLRenderer(e){function t(){return null===Y?oe:1}function r(){(ge=new WebGLExtensions(H)).get("WEBGL_depth_texture"),ge.get("OES_texture_float"),ge.get("OES_texture_float_linear"),ge.get("OES_texture_half_float"),ge.get("OES_texture_half_float_linear"),ge.get("OES_standard_derivatives"),ge.get("OES_element_index_uint"),ge.get("ANGLE_instanced_arrays"),Ue=new WebGLUtils(H,ge),ye=new WebGLCapabilities(H,ge,e),(xe=new WebGLState(H,ge,Ue)).scissor(te.copy(ce).multiplyScalar(oe)),xe.viewport(ee.copy(se).multiplyScalar(oe)),be=new WebGLInfo(H),_e=new WebGLProperties,Me=new WebGLTextures(H,ge,xe,_e,ye,Ue,be),we=new WebGLAttributes(H),Se=new WebGLGeometries(H,we,be),Le=new WebGLObjects(Se,be),Pe=new WebGLMorphtargets(H),Te=new WebGLPrograms(X,ge,ye),Ce=new WebGLRenderLists,Ae=new WebGLRenderStates,Ee=new WebGLBackground(X,xe,Se,F),Be=new WebGLBufferRenderer(H,ge,be),De=new WebGLIndexedBufferRenderer(H,ge,be),Re=new WebGLSpriteRenderer(X,H,xe,Me,ye),be.programs=Te.programs,X.context=H,X.capabilities=ye,X.extensions=ge,X.properties=_e,X.renderLists=Ce,X.state=xe,X.info=be}function n(e){e.preventDefault(),console.log("WebGLRenderer: Context Lost."),q=!0}function i(){console.log("WebGLRenderer: Context Restored."),q=!1,r()}function a(e){var t=e.target;t.removeEventListener("dispose",a),o(t)}function o(e){s(e),_e.remove(e)}function s(e){var t=_e.get(e).program;e.program=void 0,void 0!==t&&Te.releaseProgram(t)}function c(e,t,r){e.render(function(e){X.renderBufferImmediate(e,t,r)})}function l(e,t,r,n){if(r&&r.isInstancedBufferGeometry&&null===ge.get("ANGLE_instanced_arrays"))return void console.error("WebGLRenderer.setupVertexAttributes: using InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");void 0===n&&(n=0),xe.initAttributes();var i=r.attributes,a=t.getAttributes(),o=e.defaultAttributeValues;for(var s in a){var c=a[s];if(c>=0){var l=i[s];if(void 0!==l){var u=l.normalized,h=l.itemSize,p=we.get(l);if(void 0===p)continue;var d=p.buffer,f=p.type,m=p.bytesPerElement;if(l.isInterleavedBufferAttribute){var v=l.data,g=v.stride,y=l.offset;v&&v.isInstancedInterleavedBuffer?(xe.enableAttributeAndDivisor(c,v.meshPerAttribute),void 0===r.maxInstancedCount&&(r.maxInstancedCount=v.meshPerAttribute*v.count)):xe.enableAttribute(c),H.bindBuffer(H.ARRAY_BUFFER,d),H.vertexAttribPointer(c,h,f,u,g*m,(n*g+y)*m)}else l.isInstancedBufferAttribute?(xe.enableAttributeAndDivisor(c,l.meshPerAttribute),void 0===r.maxInstancedCount&&(r.maxInstancedCount=l.meshPerAttribute*l.count)):xe.enableAttribute(c),H.bindBuffer(H.ARRAY_BUFFER,d),H.vertexAttribPointer(c,h,f,u,0,n*h*m)}else if(void 0!==o){var x=o[s];if(void 0!==x)switch(x.length){case 2:H.vertexAttrib2fv(c,x);break;case 3:H.vertexAttrib3fv(c,x);break;case 4:H.vertexAttrib4fv(c,x);break;default:H.vertexAttrib1fv(c,x)}}}}xe.disableUnusedAttributes()}function u(){Oe||(p(),Oe=!0)}function h(){Oe=!1}function p(){var e=Ne.getDevice();e&&e.isPresenting?e.requestAnimationFrame(d):window.requestAnimationFrame(d)}function d(e){!1!==Oe&&(Ie(e),p())}function f(e,t,r){if(!1!==e.visible){if(e.layers.test(t.layers))if(e.isLight)W.pushLight(e),e.castShadow&&W.pushShadow(e);else if(e.isSprite)e.frustumCulled&&!ue.intersectsSprite(e)||W.pushSprite(e);else if(e.isImmediateRenderObject)r&&me.setFromMatrixPosition(e.matrixWorld).applyMatrix4(fe),j.push(e,null,e.material,me.z,null);else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.update(),!e.frustumCulled||ue.intersectsObject(e))){r&&me.setFromMatrixPosition(e.matrixWorld).applyMatrix4(fe);var n=Le.update(e),i=e.material;if(Array.isArray(i))for(var a=n.groups,o=0,s=a.length;o<s;o++){var c=a[o],l=i[c.materialIndex];l&&l.visible&&j.push(e,n,l,me.z,c)}else i.visible&&j.push(e,n,i,me.z,null)}for(var u=e.children,o=0,s=u.length;o<s;o++)f(u[o],t,r)}}function m(e,t,r,n){for(var i=0,a=e.length;i<a;i++){var o=e[i],s=o.object,c=o.geometry,l=void 0===n?o.material:n,u=o.group;if(r.isArrayCamera){$=r;for(var h=r.cameras,p=0,d=h.length;p<d;p++){var f=h[p];if(s.layers.test(f.layers)){var m=f.bounds,g=m.x*ie,y=m.y*ae,x=m.z*ie,b=m.w*ae;xe.viewport(ee.set(g,y,x,b).multiplyScalar(oe)),v(s,t,f,c,l,u)}}}else $=null,v(s,t,r,c,l,u)}}function v(e,t,r,n,i,a){if(e.onBeforeRender(X,t,r,n,i,a),W=Ae.get(t,$||r),e.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject){var o=e.isMesh&&e.matrixWorld.determinant()<0;xe.setMaterial(i,o);var s=y(r,t.fog,i,e);K="",c(e,s,i)}else X.renderBufferDirect(r,t.fog,n,i,e,a);e.onAfterRender(X,t,r,n,i,a),W=Ae.get(t,$||r)}function g(e,t,r){var n=_e.get(e),i=W.state.lights,o=W.state.shadowsArray,c=Te.getParameters(e,i.state,o,t,he.numPlanes,he.numIntersection,r),l=Te.getProgramCode(e,c),u=n.program,h=!0;if(void 0===u)e.addEventListener("dispose",a);else if(u.code!==l)s(e);else if(n.lightsHash!==i.state.hash)_e.update(e,"lightsHash",i.state.hash),h=!1;else{if(void 0!==c.shaderID)return;h=!1}if(h){if(c.shaderID){var p=ShaderLib[c.shaderID];n.shader={name:e.type,uniforms:UniformsUtils.clone(p.uniforms),vertexShader:p.vertexShader,fragmentShader:p.fragmentShader}}else n.shader={name:e.type,uniforms:e.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader};e.onBeforeCompile(n.shader,X),u=Te.acquireProgram(e,n.shader,c,l),n.program=u,e.program=u}var d=u.getAttributes();if(e.morphTargets){e.numSupportedMorphTargets=0;for(f=0;f<X.maxMorphTargets;f++)d["morphTarget"+f]>=0&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;for(var f=0;f<X.maxMorphNormals;f++)d["morphNormal"+f]>=0&&e.numSupportedMorphNormals++}var m=n.shader.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(n.numClippingPlanes=he.numPlanes,n.numIntersection=he.numIntersection,m.clippingPlanes=he.uniform),n.fog=t,n.lightsHash=i.state.hash,e.lights&&(m.ambientLightColor.value=i.state.ambient,m.directionalLights.value=i.state.directional,m.spotLights.value=i.state.spot,m.rectAreaLights.value=i.state.rectArea,m.pointLights.value=i.state.point,m.hemisphereLights.value=i.state.hemi,m.directionalShadowMap.value=i.state.directionalShadowMap,m.directionalShadowMatrix.value=i.state.directionalShadowMatrix,m.spotShadowMap.value=i.state.spotShadowMap,m.spotShadowMatrix.value=i.state.spotShadowMatrix,m.pointShadowMap.value=i.state.pointShadowMap,m.pointShadowMatrix.value=i.state.pointShadowMatrix);var v=n.program.getUniforms(),g=WebGLUniforms.seqWithValue(v.seq,m);n.uniformsList=g}function y(e,t,r,n){ne=0;var i=_e.get(r),a=W.state.lights;if(pe&&(de||e!==Q)){var o=e===Q&&r.id===J;he.setState(r.clippingPlanes,r.clipIntersection,r.clipShadows,e,i,o)}!1===r.needsUpdate&&(void 0===i.program?r.needsUpdate=!0:r.fog&&i.fog!==t?r.needsUpdate=!0:r.lights&&i.lightsHash!==a.state.hash?r.needsUpdate=!0:void 0===i.numClippingPlanes||i.numClippingPlanes===he.numPlanes&&i.numIntersection===he.numIntersection||(r.needsUpdate=!0)),r.needsUpdate&&(g(r,t,n),r.needsUpdate=!1);var s=!1,c=!1,l=!1,u=i.program,h=u.getUniforms(),p=i.shader.uniforms;if(xe.useProgram(u.program)&&(s=!0,c=!0,l=!0),r.id!==J&&(J=r.id,c=!0),s||e!==Q){if(h.setValue(H,"projectionMatrix",e.projectionMatrix),ye.logarithmicDepthBuffer&&h.setValue(H,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),Q!==($||e)&&(Q=$||e,c=!0,l=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshStandardMaterial||r.envMap){var d=h.map.cameraPosition;void 0!==d&&d.setValue(H,me.setFromMatrixPosition(e.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.skinning)&&h.setValue(H,"viewMatrix",e.matrixWorldInverse)}if(r.skinning){h.setOptional(H,n,"bindMatrix"),h.setOptional(H,n,"bindMatrixInverse");var f=n.skeleton;if(f){var m=f.bones;if(ye.floatVertexTextures){if(void 0===f.boneTexture){var v=Math.sqrt(4*m.length);v=_Math.ceilPowerOfTwo(v),v=Math.max(v,4);var y=new Float32Array(v*v*4);y.set(f.boneMatrices);var R=new DataTexture(y,v,v,RGBAFormat,FloatType);R.needsUpdate=!0,f.boneMatrices=y,f.boneTexture=R,f.boneTextureSize=v}h.setValue(H,"boneTexture",f.boneTexture),h.setValue(H,"boneTextureSize",f.boneTextureSize)}else h.setOptional(H,f,"boneMatrices")}}return c&&(h.setValue(H,"toneMappingExposure",X.toneMappingExposure),h.setValue(H,"toneMappingWhitePoint",X.toneMappingWhitePoint),r.lights&&D(p,l),t&&r.fog&&w(p,t),r.isMeshBasicMaterial?x(p,r):r.isMeshLambertMaterial?(x(p,r),S(p,r)):r.isMeshPhongMaterial?(x(p,r),r.isMeshToonMaterial?T(p,r):L(p,r)):r.isMeshStandardMaterial?(x(p,r),r.isMeshPhysicalMaterial?A(p,r):C(p,r)):r.isMeshDepthMaterial?(x(p,r),E(p,r)):r.isMeshDistanceMaterial?(x(p,r),P(p,r)):r.isMeshNormalMaterial?(x(p,r),B(p,r)):r.isLineBasicMaterial?(b(p,r),r.isLineDashedMaterial&&_(p,r)):r.isPointsMaterial?M(p,r):r.isShadowMaterial&&(p.color.value=r.color,p.opacity.value=r.opacity),void 0!==p.ltc_1&&(p.ltc_1.value=UniformsLib.LTC_1),void 0!==p.ltc_2&&(p.ltc_2.value=UniformsLib.LTC_2),WebGLUniforms.upload(H,i.uniformsList,p,X)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(WebGLUniforms.upload(H,i.uniformsList,p,X),r.uniformsNeedUpdate=!1),h.setValue(H,"modelViewMatrix",n.modelViewMatrix),h.setValue(H,"normalMatrix",n.normalMatrix),h.setValue(H,"modelMatrix",n.matrixWorld),u}function x(e,t){e.opacity.value=t.opacity,t.color&&(e.diffuse.value=t.color),t.emissive&&e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity),t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.specularMap&&(e.specularMap.value=t.specularMap),t.envMap&&(e.envMap.value=t.envMap,e.flipEnvMap.value=t.envMap&&t.envMap.isCubeTexture?-1:1,e.reflectivity.value=t.reflectivity,e.refractionRatio.value=t.refractionRatio,e.maxMipLevel.value=_e.get(t.envMap).__maxMipLevel),t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity),t.aoMap&&(e.aoMap.value=t.aoMap,e.aoMapIntensity.value=t.aoMapIntensity);var r;if(t.map?r=t.map:t.specularMap?r=t.specularMap:t.displacementMap?r=t.displacementMap:t.normalMap?r=t.normalMap:t.bumpMap?r=t.bumpMap:t.roughnessMap?r=t.roughnessMap:t.metalnessMap?r=t.metalnessMap:t.alphaMap?r=t.alphaMap:t.emissiveMap&&(r=t.emissiveMap),void 0!==r){if(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate){var n=r.offset,i=r.repeat,a=r.rotation,o=r.center;r.matrix.setUvTransform(n.x,n.y,i.x,i.y,a,o.x,o.y)}e.uvTransform.value.copy(r.matrix)}}function b(e,t){e.diffuse.value=t.color,e.opacity.value=t.opacity}function _(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}function M(e,t){if(e.diffuse.value=t.color,e.opacity.value=t.opacity,e.size.value=t.size*oe,e.scale.value=.5*ae,e.map.value=t.map,null!==t.map){if(!0===t.map.matrixAutoUpdate){var r=t.map.offset,n=t.map.repeat,i=t.map.rotation,a=t.map.center;t.map.matrix.setUvTransform(r.x,r.y,n.x,n.y,i,a.x,a.y)}e.uvTransform.value.copy(t.map.matrix)}}function w(e,t){e.fogColor.value=t.color,t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)}function S(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}function L(e,t){e.specular.value=t.specular,e.shininess.value=Math.max(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale)),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function T(e,t){L(e,t),t.gradientMap&&(e.gradientMap.value=t.gradientMap)}function C(e,t){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap),t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale)),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),t.envMap&&(e.envMapIntensity.value=t.envMapIntensity)}function A(e,t){e.clearCoat.value=t.clearCoat,e.clearCoatRoughness.value=t.clearCoatRoughness,C(e,t)}function E(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function P(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}function B(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale)),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function D(e,t){e.ambientLightColor.needsUpdate=t,e.directionalLights.needsUpdate=t,e.pointLights.needsUpdate=t,e.spotLights.needsUpdate=t,e.rectAreaLights.needsUpdate=t,e.hemisphereLights.needsUpdate=t}function R(){var e=ne;return e>=ye.maxTextures&&console.warn("WebGLRenderer: Trying to use "+e+" texture units while this GPU supports only "+ye.maxTextures),ne+=1,e}console.log("WebGLRenderer",REVISION);var U=void 0!==(e=e||{}).canvas?e.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),N=void 0!==e.context?e.context:null,G=void 0!==e.alpha&&e.alpha,O=void 0===e.depth||e.depth,I=void 0===e.stencil||e.stencil,V=void 0!==e.antialias&&e.antialias,F=void 0===e.premultipliedAlpha||e.premultipliedAlpha,z=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,k=void 0!==e.powerPreference?e.powerPreference:"default",j=null,W=null;this.domElement=U,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyCorrectLights=!1,this.toneMapping=LinearToneMapping,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var H,X=this,q=!1,Y=null,Z=null,J=-1,K="",Q=null,$=null,ee=new Vector4,te=new Vector4,re=null,ne=0,ie=U.width,ae=U.height,oe=1,se=new Vector4(0,0,ie,ae),ce=new Vector4(0,0,ie,ae),le=!1,ue=new Frustum,he=new WebGLClipping,pe=!1,de=!1,fe=new Matrix4,me=new Vector3;try{var ve={alpha:G,depth:O,stencil:I,antialias:V,premultipliedAlpha:F,preserveDrawingBuffer:z,powerPreference:k};if(U.addEventListener("webglcontextlost",n,!1),U.addEventListener("webglcontextrestored",i,!1),null===(H=N||U.getContext("webgl",ve)||U.getContext("experimental-webgl",ve)))throw null!==U.getContext("webgl")?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.");void 0===H.getShaderPrecisionFormat&&(H.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){console.error("WebGLRenderer: "+e.message)}var ge,ye,xe,be,_e,Me,we,Se,Le,Te,Ce,Ae,Ee,Pe,Be,De,Re,Ue;r();var Ne=new WebVRManager(X);this.vr=Ne;var Ge=new WebGLShadowMap(X,Le,ye.maxTextureSize);this.shadowMap=Ge,this.getContext=function(){return H},this.getContextAttributes=function(){return H.getContextAttributes()},this.forceContextLoss=function(){var e=ge.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){var e=ge.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return oe},this.setPixelRatio=function(e){void 0!==e&&(oe=e,this.setSize(ie,ae,!1))},this.getSize=function(){return{width:ie,height:ae}},this.setSize=function(e,t,r){var n=Ne.getDevice();if(n&&n.isPresenting)return void console.warn("WebGLRenderer: Can't change size while VR device is presenting.");ie=e,ae=t,U.width=e*oe,U.height=t*oe,!1!==r&&(U.style.width=e+"px",U.style.height=t+"px"),this.setViewport(0,0,e,t)},this.getDrawingBufferSize=function(){return{width:ie*oe,height:ae*oe}},this.setDrawingBufferSize=function(e,t,r){ie=e,ae=t,oe=r,U.width=e*r,U.height=t*r,this.setViewport(0,0,e,t)},this.getCurrentViewport=function(){return ee},this.setViewport=function(e,t,r,n){se.set(e,ae-t-n,r,n),xe.viewport(ee.copy(se).multiplyScalar(oe))},this.setScissor=function(e,t,r,n){ce.set(e,ae-t-n,r,n),xe.scissor(te.copy(ce).multiplyScalar(oe))},this.setScissorTest=function(e){xe.setScissorTest(le=e)},this.getClearColor=function(){return Ee.getClearColor()},this.setClearColor=function(){Ee.setClearColor.apply(Ee,arguments)},this.getClearAlpha=function(){return Ee.getClearAlpha()},this.setClearAlpha=function(){Ee.setClearAlpha.apply(Ee,arguments)},this.clear=function(e,t,r){var n=0;(void 0===e||e)&&(n|=H.COLOR_BUFFER_BIT),(void 0===t||t)&&(n|=H.DEPTH_BUFFER_BIT),(void 0===r||r)&&(n|=H.STENCIL_BUFFER_BIT),H.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.clearTarget=function(e,t,r,n){this.setRenderTarget(e),this.clear(t,r,n)},this.dispose=function(){U.removeEventListener("webglcontextlost",n,!1),U.removeEventListener("webglcontextrestored",i,!1),Ce.dispose(),Ae.dispose(),_e.dispose(),Le.dispose(),Ne.dispose(),h()},this.renderBufferImmediate=function(e,t,r){xe.initAttributes();var n=_e.get(e);e.hasPositions&&!n.position&&(n.position=H.createBuffer()),e.hasNormals&&!n.normal&&(n.normal=H.createBuffer()),e.hasUvs&&!n.uv&&(n.uv=H.createBuffer()),e.hasColors&&!n.color&&(n.color=H.createBuffer());var i=t.getAttributes();if(e.hasPositions&&(H.bindBuffer(H.ARRAY_BUFFER,n.position),H.bufferData(H.ARRAY_BUFFER,e.positionArray,H.DYNAMIC_DRAW),xe.enableAttribute(i.position),H.vertexAttribPointer(i.position,3,H.FLOAT,!1,0,0)),e.hasNormals){if(H.bindBuffer(H.ARRAY_BUFFER,n.normal),!r.isMeshPhongMaterial&&!r.isMeshStandardMaterial&&!r.isMeshNormalMaterial&&!0===r.flatShading)for(var a=0,o=3*e.count;a<o;a+=9){var s=e.normalArray,c=(s[a+0]+s[a+3]+s[a+6])/3,l=(s[a+1]+s[a+4]+s[a+7])/3,u=(s[a+2]+s[a+5]+s[a+8])/3;s[a+0]=c,s[a+1]=l,s[a+2]=u,s[a+3]=c,s[a+4]=l,s[a+5]=u,s[a+6]=c,s[a+7]=l,s[a+8]=u}H.bufferData(H.ARRAY_BUFFER,e.normalArray,H.DYNAMIC_DRAW),xe.enableAttribute(i.normal),H.vertexAttribPointer(i.normal,3,H.FLOAT,!1,0,0)}e.hasUvs&&r.map&&(H.bindBuffer(H.ARRAY_BUFFER,n.uv),H.bufferData(H.ARRAY_BUFFER,e.uvArray,H.DYNAMIC_DRAW),xe.enableAttribute(i.uv),H.vertexAttribPointer(i.uv,2,H.FLOAT,!1,0,0)),e.hasColors&&r.vertexColors!==NoColors&&(H.bindBuffer(H.ARRAY_BUFFER,n.color),H.bufferData(H.ARRAY_BUFFER,e.colorArray,H.DYNAMIC_DRAW),xe.enableAttribute(i.color),H.vertexAttribPointer(i.color,3,H.FLOAT,!1,0,0)),xe.disableUnusedAttributes(),H.drawArrays(H.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,r,n,i,a,o){var s=a.isMesh&&a.matrixWorld.determinant()<0;xe.setMaterial(i,s);var c=y(e,r,i,a),u=n.id+"_"+c.id+"_"+(!0===i.wireframe),h=!1;u!==K&&(K=u,h=!0),a.morphTargetInfluences&&(Pe.update(a,n,i,c),h=!0);var p=n.index,d=n.attributes.position,f=1;!0===i.wireframe&&(p=Se.getWireframeAttribute(n),f=2);var m,v=Be;null!==p&&(m=we.get(p),(v=De).setIndex(m)),h&&(l(i,c,n),null!==p&&H.bindBuffer(H.ELEMENT_ARRAY_BUFFER,m.buffer));var g=1/0;null!==p?g=p.count:void 0!==d&&(g=d.count);var x=n.drawRange.start*f,b=n.drawRange.count*f,_=null!==o?o.start*f:0,M=null!==o?o.count*f:1/0,w=Math.max(x,_),S=Math.min(g,x+b,_+M)-1,L=Math.max(0,S-w+1);if(0!==L){if(a.isMesh)if(!0===i.wireframe)xe.setLineWidth(i.wireframeLinewidth*t()),v.setMode(H.LINES);else switch(a.drawMode){case TrianglesDrawMode:v.setMode(H.TRIANGLES);break;case TriangleStripDrawMode:v.setMode(H.TRIANGLE_STRIP);break;case TriangleFanDrawMode:v.setMode(H.TRIANGLE_FAN)}else if(a.isLine){var T=i.linewidth;void 0===T&&(T=1),xe.setLineWidth(T*t()),a.isLineSegments?v.setMode(H.LINES):a.isLineLoop?v.setMode(H.LINE_LOOP):v.setMode(H.LINE_STRIP)}else a.isPoints&&v.setMode(H.POINTS);n&&n.isInstancedBufferGeometry?n.maxInstancedCount>0&&v.renderInstances(n,w,L):v.render(w,L)}},this.compile=function(e,t){(W=Ae.get(e,t)).init(),e.traverse(function(e){e.isLight&&(W.pushLight(e),e.castShadow&&W.pushShadow(e))}),W.setupLights(t),e.traverse(function(t){if(t.material)if(Array.isArray(t.material))for(var r=0;r<t.material.length;r++)g(t.material[r],e.fog,t);else g(t.material,e.fog,t)})};var Oe=!1,Ie=null;this.animate=function(e){null!==(Ie=e)?u():h()},this.render=function(e,t,r,n){if(!t||!t.isCamera)return void console.error("WebGLRenderer.render: camera is not an instance of Camera.");if(!q){K="",J=-1,Q=null,!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),Ne.enabled&&(t=Ne.getCamera(t)),(W=Ae.get(e,t)).init(),e.onBeforeRender(X,e,t,r),fe.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),ue.setFromMatrix(fe),de=this.localClippingEnabled,pe=he.init(this.clippingPlanes,de,t),(j=Ce.get(e,t)).init(),f(e,t,X.sortObjects),!0===X.sortObjects&&j.sort(),pe&&he.beginShadows();var i=W.state.shadowsArray;Ge.render(i,e,t),W.setupLights(t),pe&&he.endShadows(),this.info.autoReset&&this.info.reset(),void 0===r&&(r=null),this.setRenderTarget(r),Ee.render(j,e,t,n);var a=j.opaque,o=j.transparent;if(e.overrideMaterial){var s=e.overrideMaterial;a.length&&m(a,e,t,s),o.length&&m(o,e,t,s)}else a.length&&m(a,e,t),o.length&&m(o,e,t);var c=W.state.spritesArray;Re.render(c,e,t),r&&Me.updateRenderTargetMipmap(r),xe.buffers.depth.setTest(!0),xe.buffers.depth.setMask(!0),xe.buffers.color.setMask(!0),xe.setPolygonOffset(!1),e.onAfterRender(X,e,t),Ne.enabled&&Ne.submitFrame(),j=null,W=null}},this.allocTextureUnit=R,this.setTexture2D=function(){var e=!1;return function(t,r){t&&t.isWebGLRenderTarget&&(e||(console.warn("WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."),e=!0),t=t.texture),Me.setTexture2D(t,r)}}(),this.setTexture=function(){var e=!1;return function(t,r){e||(console.warn("WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),e=!0),Me.setTexture2D(t,r)}}(),this.setTextureCube=function(){var e=!1;return function(t,r){t&&t.isWebGLRenderTargetCube&&(e||(console.warn("WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."),e=!0),t=t.texture),t&&t.isCubeTexture||Array.isArray(t.image)&&6===t.image.length?Me.setTextureCube(t,r):Me.setTextureCubeDynamic(t,r)}}(),this.getRenderTarget=function(){return Y},this.setRenderTarget=function(e){Y=e,e&&void 0===_e.get(e).__webglFramebuffer&&Me.setupRenderTarget(e);var t=null,r=!1;if(e){var n=_e.get(e).__webglFramebuffer;e.isWebGLRenderTargetCube?(t=n[e.activeCubeFace],r=!0):t=n,ee.copy(e.viewport),te.copy(e.scissor),re=e.scissorTest}else ee.copy(se).multiplyScalar(oe),te.copy(ce).multiplyScalar(oe),re=le;if(Z!==t&&(H.bindFramebuffer(H.FRAMEBUFFER,t),Z=t),xe.viewport(ee),xe.scissor(te),xe.setScissorTest(re),r){var i=_e.get(e.texture);H.framebufferTexture2D(H.FRAMEBUFFER,H.COLOR_ATTACHMENT0,H.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,i.__webglTexture,e.activeMipMapLevel)}},this.readRenderTargetPixels=function(e,t,r,n,i,a){if(!e||!e.isWebGLRenderTarget)return void console.error("WebGLRenderer.readRenderTargetPixels: renderTarget is not WebGLRenderTarget.");var o=_e.get(e).__webglFramebuffer;if(o){var s=!1;o!==Z&&(H.bindFramebuffer(H.FRAMEBUFFER,o),s=!0);try{var c=e.texture,l=c.format,u=c.type;if(l!==RGBAFormat&&Ue.convert(l)!==H.getParameter(H.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(u===UnsignedByteType||Ue.convert(u)===H.getParameter(H.IMPLEMENTATION_COLOR_READ_TYPE)||u===FloatType&&(ge.get("OES_texture_float")||ge.get("WEBGL_color_buffer_float"))||u===HalfFloatType&&ge.get("EXT_color_buffer_half_float")))return void console.error("WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");H.checkFramebufferStatus(H.FRAMEBUFFER)===H.FRAMEBUFFER_COMPLETE?t>=0&&t<=e.width-n&&r>=0&&r<=e.height-i&&H.readPixels(t,r,n,i,Ue.convert(l),Ue.convert(u),a):console.error("WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{s&&H.bindFramebuffer(H.FRAMEBUFFER,Z)}}},this.copyFramebufferToTexture=function(e,t,r){var n=t.image.width,i=t.image.height,a=Ue.convert(t.format);this.setTexture2D(t,0),H.copyTexImage2D(H.TEXTURE_2D,r||0,a,e.x,e.y,n,i,0)},this.copyTextureToTexture=function(e,t,r,n){var i=t.image.width,a=t.image.height,o=Ue.convert(r.format),s=Ue.convert(r.type),c=t.isDataTexture?t.image.data:t.image;this.setTexture2D(r,0),H.texSubImage2D(H.TEXTURE_2D,n||0,e.x,e.y,i,a,o,s,c)}}function DepthTexture(e,t,r,n,i,a,o,s,c,l){if((l=void 0!==l?l:DepthFormat)!==DepthFormat&&l!==DepthStencilFormat)throw new Error("DepthTexture format must be either DepthFormat or DepthStencilFormat");void 0===r&&l===DepthFormat&&(r=UnsignedShortType),void 0===r&&l===DepthStencilFormat&&(r=UnsignedInt248Type),Texture.call(this,null,n,i,a,o,s,l,r,c),this.image={width:e,height:t},this.magFilter=void 0!==o?o:NearestFilter,this.minFilter=void 0!==s?s:NearestFilter,this.flipY=!1,this.generateMipmaps=!1}void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Number.isInteger&&(Number.isInteger=function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e}),void 0===Math.sign&&(Math.sign=function(e){return e<0?-1:e>0?1:+e}),"name"in Function.prototype==!1&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),void 0===Object.assign&&function(){Object.assign=function(e){var t=arguments;if(void 0===e||null===e)throw new TypeError("Cannot convert undefined or null to object");for(var r=Object(e),n=1;n<arguments.length;n++){var i=t[n];if(void 0!==i&&null!==i)for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&(r[a]=i[a])}return r}}(),Object.assign(Vector4.prototype,{isVector4:!0,set:function(e,t,r,n){return this.x=e,this.y=t,this.z=r,this.w=n,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this},sub:function(e,t){return void 0!==t?(console.warn("Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,r=this.y,n=this.z,i=this.w,a=e.elements;return this.x=a[0]*t+a[4]*r+a[8]*n+a[12]*i,this.y=a[1]*t+a[5]*r+a[9]*n+a[13]*i,this.z=a[2]*t+a[6]*r+a[10]*n+a[14]*i,this.w=a[3]*t+a[7]*r+a[11]*n+a[15]*i,this},divideScalar:function(e){return this.multiplyScalar(1/e)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,r,n,i,a=e.elements,o=a[0],s=a[4],c=a[8],l=a[1],u=a[5],h=a[9],p=a[2],d=a[6],f=a[10];if(Math.abs(s-l)<.01&&Math.abs(c-p)<.01&&Math.abs(h-d)<.01){if(Math.abs(s+l)<.1&&Math.abs(c+p)<.1&&Math.abs(h+d)<.1&&Math.abs(o+u+f-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;var m=(o+1)/2,v=(u+1)/2,g=(f+1)/2,y=(s+l)/4,x=(c+p)/4,b=(h+d)/4;return m>v&&m>g?m<.01?(r=0,n=.707106781,i=.707106781):(n=y/(r=Math.sqrt(m)),i=x/r):v>g?v<.01?(r=.707106781,n=0,i=.707106781):(r=y/(n=Math.sqrt(v)),i=b/n):g<.01?(r=.707106781,n=.707106781,i=0):(r=x/(i=Math.sqrt(g)),n=b/i),this.set(r,n,i,t),this}var _=Math.sqrt((d-h)*(d-h)+(c-p)*(c-p)+(l-s)*(l-s));return Math.abs(_)<.001&&(_=1),this.x=(d-h)/_,this.y=(c-p)/_,this.z=(l-s)/_,this.w=Math.acos((o+u+f-1)/2),this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this},clampScalar:function(){var e,t;return function(r,n){return void 0===e&&(e=new Vector4,t=new Vector4),e.set(r,r,r,r),t.set(n,n,n,n),this.clamp(e,t)}}(),clampLength:function(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromBufferAttribute:function(e,t,r){return void 0!==r&&console.warn("Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}});var _Math={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){for(var e=[],t=0;t<256;t++)e[t]=(t<16?"0":"")+t.toString(16).toUpperCase();return function(){var t=4294967295*Math.random()|0,r=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return e[255&t]+e[t>>8&255]+e[t>>16&255]+e[t>>24&255]+"-"+e[255&r]+e[r>>8&255]+"-"+e[r>>16&15|64]+e[r>>24&255]+"-"+e[63&n|128]+e[n>>8&255]+"-"+e[n>>16&255]+e[n>>24&255]+e[255&i]+e[i>>8&255]+e[i>>16&255]+e[i>>24&255]}}(),clamp:function(e,t,r){return Math.max(t,Math.min(r,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,r,n,i){return n+(e-t)*(i-n)/(r-t)},lerp:function(e,t,r){return(1-r)*e+r*t},smoothstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t))*e*(3-2*e)},smootherstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(e){return e*_Math.DEG2RAD},radToDeg:function(e){return e*_Math.RAD2DEG},isPowerOfTwo:function(e){return 0==(e&e-1)&&0!==e},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}};Object.assign(Matrix4.prototype,{isMatrix4:!0,set:function(e,t,r,n,i,a,o,s,c,l,u,h,p,d,f,m){var v=this.elements;return v[0]=e,v[4]=t,v[8]=r,v[12]=n,v[1]=i,v[5]=a,v[9]=o,v[13]=s,v[2]=c,v[6]=l,v[10]=u,v[14]=h,v[3]=p,v[7]=d,v[11]=f,v[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new Matrix4).fromArray(this.elements)},copy:function(e){var t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],t[9]=r[9],t[10]=r[10],t[11]=r[11],t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15],this},copyPosition:function(e){var t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this},extractBasis:function(e,t,r){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this},makeBasis:function(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this},extractRotation:function(){var e=new Vector3;return function(t){var r=this.elements,n=t.elements,i=1/e.setFromMatrixColumn(t,0).length(),a=1/e.setFromMatrixColumn(t,1).length(),o=1/e.setFromMatrixColumn(t,2).length();return r[0]=n[0]*i,r[1]=n[1]*i,r[2]=n[2]*i,r[4]=n[4]*a,r[5]=n[5]*a,r[6]=n[6]*a,r[8]=n[8]*o,r[9]=n[9]*o,r[10]=n[10]*o,this}}(),makeRotationFromEuler:function(e){e&&e.isEuler||console.error("Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var t=this.elements,r=e.x,n=e.y,i=e.z,a=Math.cos(r),o=Math.sin(r),s=Math.cos(n),c=Math.sin(n),l=Math.cos(i),u=Math.sin(i);if("XYZ"===e.order){var h=a*l,p=a*u,d=o*l,f=o*u;t[0]=s*l,t[4]=-s*u,t[8]=c,t[1]=p+d*c,t[5]=h-f*c,t[9]=-o*s,t[2]=f-h*c,t[6]=d+p*c,t[10]=a*s}else if("YXZ"===e.order){var m=s*l,v=s*u,g=c*l,y=c*u;t[0]=m+y*o,t[4]=g*o-v,t[8]=a*c,t[1]=a*u,t[5]=a*l,t[9]=-o,t[2]=v*o-g,t[6]=y+m*o,t[10]=a*s}else if("ZXY"===e.order){var m=s*l,v=s*u,g=c*l,y=c*u;t[0]=m-y*o,t[4]=-a*u,t[8]=g+v*o,t[1]=v+g*o,t[5]=a*l,t[9]=y-m*o,t[2]=-a*c,t[6]=o,t[10]=a*s}else if("ZYX"===e.order){var h=a*l,p=a*u,d=o*l,f=o*u;t[0]=s*l,t[4]=d*c-p,t[8]=h*c+f,t[1]=s*u,t[5]=f*c+h,t[9]=p*c-d,t[2]=-c,t[6]=o*s,t[10]=a*s}else if("YZX"===e.order){var x=a*s,b=a*c,_=o*s,M=o*c;t[0]=s*l,t[4]=M-x*u,t[8]=_*u+b,t[1]=u,t[5]=a*l,t[9]=-o*l,t[2]=-c*l,t[6]=b*u+_,t[10]=x-M*u}else if("XZY"===e.order){var x=a*s,b=a*c,_=o*s,M=o*c;t[0]=s*l,t[4]=-u,t[8]=c*l,t[1]=x*u+M,t[5]=a*l,t[9]=b*u-_,t[2]=_*u-b,t[6]=o*l,t[10]=M*u+x}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromQuaternion:function(e){var t=this.elements,r=e._x,n=e._y,i=e._z,a=e._w,o=r+r,s=n+n,c=i+i,l=r*o,u=r*s,h=r*c,p=n*s,d=n*c,f=i*c,m=a*o,v=a*s,g=a*c;return t[0]=1-(p+f),t[4]=u-g,t[8]=h+v,t[1]=u+g,t[5]=1-(l+f),t[9]=d-m,t[2]=h-v,t[6]=d+m,t[10]=1-(l+p),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAt:function(){var e=new Vector3,t=new Vector3,r=new Vector3;return function(n,i,a){var o=this.elements;return r.subVectors(n,i),0===r.lengthSq()&&(r.z=1),r.normalize(),e.crossVectors(a,r),0===e.lengthSq()&&(1===Math.abs(a.z)?r.x+=1e-4:r.z+=1e-4,r.normalize(),e.crossVectors(a,r)),e.normalize(),t.crossVectors(r,e),o[0]=e.x,o[4]=t.x,o[8]=r.x,o[1]=e.y,o[5]=t.y,o[9]=r.y,o[2]=e.z,o[6]=t.z,o[10]=r.z,this}}(),multiply:function(e,t){return void 0!==t?(console.warn("Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var r=e.elements,n=t.elements,i=this.elements,a=r[0],o=r[4],s=r[8],c=r[12],l=r[1],u=r[5],h=r[9],p=r[13],d=r[2],f=r[6],m=r[10],v=r[14],g=r[3],y=r[7],x=r[11],b=r[15],_=n[0],M=n[4],w=n[8],S=n[12],L=n[1],T=n[5],C=n[9],A=n[13],E=n[2],P=n[6],B=n[10],D=n[14],R=n[3],U=n[7],N=n[11],G=n[15];return i[0]=a*_+o*L+s*E+c*R,i[4]=a*M+o*T+s*P+c*U,i[8]=a*w+o*C+s*B+c*N,i[12]=a*S+o*A+s*D+c*G,i[1]=l*_+u*L+h*E+p*R,i[5]=l*M+u*T+h*P+p*U,i[9]=l*w+u*C+h*B+p*N,i[13]=l*S+u*A+h*D+p*G,i[2]=d*_+f*L+m*E+v*R,i[6]=d*M+f*T+m*P+v*U,i[10]=d*w+f*C+m*B+v*N,i[14]=d*S+f*A+m*D+v*G,i[3]=g*_+y*L+x*E+b*R,i[7]=g*M+y*T+x*P+b*U,i[11]=g*w+y*C+x*B+b*N,i[15]=g*S+y*A+x*D+b*G,this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},applyToBufferAttribute:function(){var e=new Vector3;return function(t){for(var r=this,n=0,i=t.count;n<i;n++)e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.applyMatrix4(r),t.setXYZ(n,e.x,e.y,e.z);return t}}(),determinant:function(){var e=this.elements,t=e[0],r=e[4],n=e[8],i=e[12],a=e[1],o=e[5],s=e[9],c=e[13],l=e[2],u=e[6],h=e[10],p=e[14];return e[3]*(+i*s*u-n*c*u-i*o*h+r*c*h+n*o*p-r*s*p)+e[7]*(+t*s*p-t*c*h+i*a*h-n*a*p+n*c*l-i*s*l)+e[11]*(+t*c*u-t*o*p-i*a*u+r*a*p+i*o*l-r*c*l)+e[15]*(-n*o*l-t*s*u+t*o*h+n*a*u-r*a*h+r*s*l)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){var r=this.elements,n=e.elements,i=n[0],a=n[1],o=n[2],s=n[3],c=n[4],l=n[5],u=n[6],h=n[7],p=n[8],d=n[9],f=n[10],m=n[11],v=n[12],g=n[13],y=n[14],x=n[15],b=d*y*h-g*f*h+g*u*m-l*y*m-d*u*x+l*f*x,_=v*f*h-p*y*h-v*u*m+c*y*m+p*u*x-c*f*x,M=p*g*h-v*d*h+v*l*m-c*g*m-p*l*x+c*d*x,w=v*d*u-p*g*u-v*l*f+c*g*f+p*l*y-c*d*y,S=i*b+a*_+o*M+s*w;if(0===S){var L="Matrix4: .getInverse() can't invert matrix, determinant is 0";if(!0===t)throw new Error(L);return console.warn(L),this.identity()}var T=1/S;return r[0]=b*T,r[1]=(g*f*s-d*y*s-g*o*m+a*y*m+d*o*x-a*f*x)*T,r[2]=(l*y*s-g*u*s+g*o*h-a*y*h-l*o*x+a*u*x)*T,r[3]=(d*u*s-l*f*s-d*o*h+a*f*h+l*o*m-a*u*m)*T,r[4]=_*T,r[5]=(p*y*s-v*f*s+v*o*m-i*y*m-p*o*x+i*f*x)*T,r[6]=(v*u*s-c*y*s-v*o*h+i*y*h+c*o*x-i*u*x)*T,r[7]=(c*f*s-p*u*s+p*o*h-i*f*h-c*o*m+i*u*m)*T,r[8]=M*T,r[9]=(v*d*s-p*g*s-v*a*m+i*g*m+p*a*x-i*d*x)*T,r[10]=(c*g*s-v*l*s+v*a*h-i*g*h-c*a*x+i*l*x)*T,r[11]=(p*l*s-c*d*s-p*a*h+i*d*h+c*a*m-i*l*m)*T,r[12]=w*T,r[13]=(p*g*o-v*d*o+v*a*f-i*g*f-p*a*y+i*d*y)*T,r[14]=(v*l*o-c*g*o-v*a*u+i*g*u+c*a*y-i*l*y)*T,r[15]=(c*d*o-p*l*o+p*a*u-i*d*u-c*a*f+i*l*f)*T,this},scale:function(e){var t=this.elements,r=e.x,n=e.y,i=e.z;return t[0]*=r,t[4]*=n,t[8]*=i,t[1]*=r,t[5]*=n,t[9]*=i,t[2]*=r,t[6]*=n,t[10]*=i,t[3]*=r,t[7]*=n,t[11]*=i,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,r,n))},makeTranslation:function(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var r=Math.cos(t),n=Math.sin(t),i=1-r,a=e.x,o=e.y,s=e.z,c=i*a,l=i*o;return this.set(c*a+r,c*o-n*s,c*s+n*o,0,c*o+n*s,l*o+r,l*s-n*a,0,c*s-n*o,l*s+n*a,i*s*s+r,0,0,0,0,1),this},makeScale:function(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this},makeShear:function(e,t,r){return this.set(1,t,r,0,e,1,r,0,e,t,1,0,0,0,0,1),this},compose:function(e,t,r){return this.makeRotationFromQuaternion(t),this.scale(r),this.setPosition(e),this},decompose:function(){var e=new Vector3,t=new Matrix4;return function(r,n,i){var a=this.elements,o=e.set(a[0],a[1],a[2]).length(),s=e.set(a[4],a[5],a[6]).length(),c=e.set(a[8],a[9],a[10]).length();this.determinant()<0&&(o=-o),r.x=a[12],r.y=a[13],r.z=a[14],t.copy(this);var l=1/o,u=1/s,h=1/c;return t.elements[0]*=l,t.elements[1]*=l,t.elements[2]*=l,t.elements[4]*=u,t.elements[5]*=u,t.elements[6]*=u,t.elements[8]*=h,t.elements[9]*=h,t.elements[10]*=h,n.setFromRotationMatrix(t),i.x=o,i.y=s,i.z=c,this}}(),makePerspective:function(e,t,r,n,i,a){void 0===a&&console.warn("Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var o=this.elements,s=2*i/(t-e),c=2*i/(r-n),l=(t+e)/(t-e),u=(r+n)/(r-n),h=-(a+i)/(a-i),p=-2*a*i/(a-i);return o[0]=s,o[4]=0,o[8]=l,o[12]=0,o[1]=0,o[5]=c,o[9]=u,o[13]=0,o[2]=0,o[6]=0,o[10]=h,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makeOrthographic:function(e,t,r,n,i,a){var o=this.elements,s=1/(t-e),c=1/(r-n),l=1/(a-i),u=(t+e)*s,h=(r+n)*c,p=(a+i)*l;return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-u,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-h,o[2]=0,o[6]=0,o[10]=-2*l,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(e){for(var t=this.elements,r=e.elements,n=0;n<16;n++)if(t[n]!==r[n])return!1;return!0},fromArray:function(e,t){var r=this;void 0===t&&(t=0);for(var n=0;n<16;n++)r.elements[n]=e[n+t];return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e}}),Object.assign(Quaternion,{slerp:function(e,t,r,n){return r.copy(e).slerp(t,n)},slerpFlat:function(e,t,r,n,i,a,o){var s=r[n+0],c=r[n+1],l=r[n+2],u=r[n+3],h=i[a+0],p=i[a+1],d=i[a+2],f=i[a+3];if(u!==f||s!==h||c!==p||l!==d){var m=1-o,v=s*h+c*p+l*d+u*f,g=v>=0?1:-1,y=1-v*v;if(y>Number.EPSILON){var x=Math.sqrt(y),b=Math.atan2(x,v*g);m=Math.sin(m*b)/x,o=Math.sin(o*b)/x}var _=o*g;if(s=s*m+h*_,c=c*m+p*_,l=l*m+d*_,u=u*m+f*_,m===1-o){var M=1/Math.sqrt(s*s+c*c+l*l+u*u);s*=M,c*=M,l*=M,u*=M}}e[t]=s,e[t+1]=c,e[t+2]=l,e[t+3]=u}}),Object.defineProperties(Quaternion.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this.onChangeCallback()}},w:{get:function(){return this._w},set:function(e){this._w=e,this.onChangeCallback()}}}),Object.assign(Quaternion.prototype,{set:function(e,t,r,n){return this._x=e,this._y=t,this._z=r,this._w=n,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this.onChangeCallback(),this},setFromEuler:function(e,t){if(!e||!e.isEuler)throw new Error("Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var r=e._x,n=e._y,i=e._z,a=e.order,o=Math.cos,s=Math.sin,c=o(r/2),l=o(n/2),u=o(i/2),h=s(r/2),p=s(n/2),d=s(i/2);return"XYZ"===a?(this._x=h*l*u+c*p*d,this._y=c*p*u-h*l*d,this._z=c*l*d+h*p*u,this._w=c*l*u-h*p*d):"YXZ"===a?(this._x=h*l*u+c*p*d,this._y=c*p*u-h*l*d,this._z=c*l*d-h*p*u,this._w=c*l*u+h*p*d):"ZXY"===a?(this._x=h*l*u-c*p*d,this._y=c*p*u+h*l*d,this._z=c*l*d+h*p*u,this._w=c*l*u-h*p*d):"ZYX"===a?(this._x=h*l*u-c*p*d,this._y=c*p*u+h*l*d,this._z=c*l*d-h*p*u,this._w=c*l*u+h*p*d):"YZX"===a?(this._x=h*l*u+c*p*d,this._y=c*p*u+h*l*d,this._z=c*l*d-h*p*u,this._w=c*l*u-h*p*d):"XZY"===a&&(this._x=h*l*u-c*p*d,this._y=c*p*u-h*l*d,this._z=c*l*d+h*p*u,this._w=c*l*u+h*p*d),!1!==t&&this.onChangeCallback(),this},setFromAxisAngle:function(e,t){var r=t/2,n=Math.sin(r);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(r),this.onChangeCallback(),this},setFromRotationMatrix:function(e){var t,r=e.elements,n=r[0],i=r[4],a=r[8],o=r[1],s=r[5],c=r[9],l=r[2],u=r[6],h=r[10],p=n+s+h;return p>0?(t=.5/Math.sqrt(p+1),this._w=.25/t,this._x=(u-c)*t,this._y=(a-l)*t,this._z=(o-i)*t):n>s&&n>h?(t=2*Math.sqrt(1+n-s-h),this._w=(u-c)/t,this._x=.25*t,this._y=(i+o)/t,this._z=(a+l)/t):s>h?(t=2*Math.sqrt(1+s-n-h),this._w=(a-l)/t,this._x=(i+o)/t,this._y=.25*t,this._z=(c+u)/t):(t=2*Math.sqrt(1+h-n-s),this._w=(o-i)/t,this._x=(a+l)/t,this._y=(c+u)/t,this._z=.25*t),this.onChangeCallback(),this},setFromUnitVectors:function(){var e,t=new Vector3;return function(r,n){return void 0===t&&(t=new Vector3),e=r.dot(n)+1,e<1e-6?(e=0,Math.abs(r.x)>Math.abs(r.z)?t.set(-r.y,r.x,0):t.set(0,-r.z,r.y)):t.crossVectors(r,n),this._x=t.x,this._y=t.y,this._z=t.z,this._w=e,this.normalize()}}(),inverse:function(){return this.conjugate()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this.onChangeCallback(),this},multiply:function(e,t){return void 0!==t?(console.warn("Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},premultiply:function(e){return this.multiplyQuaternions(e,this)},multiplyQuaternions:function(e,t){var r=e._x,n=e._y,i=e._z,a=e._w,o=t._x,s=t._y,c=t._z,l=t._w;return this._x=r*l+a*o+n*c-i*s,this._y=n*l+a*s+i*o-r*c,this._z=i*l+a*c+r*s-n*o,this._w=a*l-r*o-n*s-i*c,this.onChangeCallback(),this},slerp:function(e,t){if(0===t)return this;if(1===t)return this.copy(e);var r=this._x,n=this._y,i=this._z,a=this._w,o=a*e._w+r*e._x+n*e._y+i*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=r,this._y=n,this._z=i,this;var s=Math.sqrt(1-o*o);if(Math.abs(s)<.001)return this._w=.5*(a+this._w),this._x=.5*(r+this._x),this._y=.5*(n+this._y),this._z=.5*(i+this._z),this;var c=Math.atan2(s,o),l=Math.sin((1-t)*c)/s,u=Math.sin(t*c)/s;return this._w=a*l+this._w*u,this._x=r*l+this._x*u,this._y=n*l+this._y*u,this._z=i*l+this._z*u,this.onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}}),Object.assign(Vector3.prototype,{isVector3:!0,set:function(e,t,r){return this.x=e,this.y=t,this.z=r,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this},sub:function(e,t){return void 0!==t?(console.warn("Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(){var e=new Quaternion;return function(t){return t&&t.isEuler||console.error("Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(e.setFromEuler(t))}}(),applyAxisAngle:function(){var e=new Quaternion;return function(t,r){return this.applyQuaternion(e.setFromAxisAngle(t,r))}}(),applyMatrix3:function(e){var t=this.x,r=this.y,n=this.z,i=e.elements;return this.x=i[0]*t+i[3]*r+i[6]*n,this.y=i[1]*t+i[4]*r+i[7]*n,this.z=i[2]*t+i[5]*r+i[8]*n,this},applyMatrix4:function(e){var t=this.x,r=this.y,n=this.z,i=e.elements,a=1/(i[3]*t+i[7]*r+i[11]*n+i[15]);return this.x=(i[0]*t+i[4]*r+i[8]*n+i[12])*a,this.y=(i[1]*t+i[5]*r+i[9]*n+i[13])*a,this.z=(i[2]*t+i[6]*r+i[10]*n+i[14])*a,this},applyQuaternion:function(e){var t=this.x,r=this.y,n=this.z,i=e.x,a=e.y,o=e.z,s=e.w,c=s*t+a*n-o*r,l=s*r+o*t-i*n,u=s*n+i*r-a*t,h=-i*t-a*r-o*n;return this.x=c*s+h*-i+l*-o-u*-a,this.y=l*s+h*-a+u*-i-c*-o,this.z=u*s+h*-o+c*-a-l*-i,this},project:function(){var e=new Matrix4;return function(t){return e.multiplyMatrices(t.projectionMatrix,e.getInverse(t.matrixWorld)),this.applyMatrix4(e)}}(),unproject:function(){var e=new Matrix4;return function(t){return e.multiplyMatrices(t.matrixWorld,e.getInverse(t.projectionMatrix)),this.applyMatrix4(e)}}(),transformDirection:function(e){var t=this.x,r=this.y,n=this.z,i=e.elements;return this.x=i[0]*t+i[4]*r+i[8]*n,this.y=i[1]*t+i[5]*r+i[9]*n,this.z=i[2]*t+i[6]*r+i[10]*n,this.normalize()},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this},clampScalar:function(){var e=new Vector3,t=new Vector3;return function(r,n){return e.set(r,r,r),t.set(n,n,n),this.clamp(e,t)}}(),clampLength:function(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e)},cross:function(e,t){return void 0!==t?(console.warn("Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)},crossVectors:function(e,t){var r=e.x,n=e.y,i=e.z,a=t.x,o=t.y,s=t.z;return this.x=n*s-i*o,this.y=i*a-r*s,this.z=r*o-n*a,this},projectOnVector:function(e){var t=e.dot(this)/e.lengthSq();return this.copy(e).multiplyScalar(t)},projectOnPlane:function(){var e=new Vector3;return function(t){return e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e=new Vector3;return function(t){return this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(e){var t=this.dot(e)/Math.sqrt(this.lengthSq()*e.lengthSq());return Math.acos(_Math.clamp(t,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y,n=this.z-e.z;return t*t+r*r+n*n},manhattanDistanceTo:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)},setFromSpherical:function(e){var t=Math.sin(e.phi)*e.radius;return this.x=t*Math.sin(e.theta),this.y=Math.cos(e.phi)*e.radius,this.z=t*Math.cos(e.theta),this},setFromCylindrical:function(e){return this.x=e.radius*Math.sin(e.theta),this.y=e.y,this.z=e.radius*Math.cos(e.theta),this},setFromMatrixPosition:function(e){var t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this},setFromMatrixScale:function(e){var t=this.setFromMatrixColumn(e,0).length(),r=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=r,this.z=n,this},setFromMatrixColumn:function(e,t){return this.fromArray(e.elements,4*t)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromBufferAttribute:function(e,t,r){return void 0!==r&&console.warn("Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}}),Object.defineProperties(Vector2.prototype,{width:{get:function(){return this.x},set:function(e){this.x=e}},height:{get:function(){return this.y},set:function(e){this.y=e}}}),Object.assign(Vector2.prototype,{isVector2:!0,set:function(e,t){return this.x=e,this.y=t,this},setScalar:function(e){return this.x=e,this.y=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addScalar:function(e){return this.x+=e,this.y+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this},sub:function(e,t){return void 0!==t?(console.warn("Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subScalar:function(e){return this.x-=e,this.y-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){return this.multiplyScalar(1/e)},applyMatrix3:function(e){var t=this.x,r=this.y,n=e.elements;return this.x=n[0]*t+n[3]*r+n[6],this.y=n[1]*t+n[4]*r+n[7],this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this},clampScalar:function(){var e=new Vector2,t=new Vector2;return function(r,n){return e.set(r,r),t.set(n,n),this.clamp(e,t)}}(),clampLength:function(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var e=Math.atan2(this.y,this.x);return e<0&&(e+=2*Math.PI),e},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y;return t*t+r*r},manhattanDistanceTo:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromBufferAttribute:function(e,t,r){return void 0!==r&&console.warn("Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this},rotateAround:function(e,t){var r=Math.cos(t),n=Math.sin(t),i=this.x-e.x,a=this.y-e.y;return this.x=i*r-a*n+e.x,this.y=i*n+a*r+e.y,this}});var ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Object.assign(Color.prototype,{isColor:!0,r:1,g:1,b:1,set:function(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setScalar:function(e){return this.r=e,this.g=e,this.b=e,this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,r){return this.r=e,this.g=t,this.b=r,this},setHSL:function(){function e(e,t,r){return r<0&&(r+=1),r>1&&(r-=1),r<1/6?e+6*(t-e)*r:r<.5?t:r<2/3?e+6*(t-e)*(2/3-r):e}return function(t,r,n){if(t=_Math.euclideanModulo(t,1),r=_Math.clamp(r,0,1),n=_Math.clamp(n,0,1),0===r)this.r=this.g=this.b=n;else{var i=n<=.5?n*(1+r):n+r-n*r,a=2*n-i;this.r=e(a,i,t+1/3),this.g=e(a,i,t),this.b=e(a,i,t-1/3)}return this}}(),setStyle:function(e){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn("Color: Alpha component of "+e+" will be ignored.")}var r;if(r=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){var n,i=r[1],a=r[2];switch(i){case"rgb":case"rgba":if(n=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(n[1],10))/255,this.g=Math.min(255,parseInt(n[2],10))/255,this.b=Math.min(255,parseInt(n[3],10))/255,t(n[5]),this;if(n=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(n[1],10))/100,this.g=Math.min(100,parseInt(n[2],10))/100,this.b=Math.min(100,parseInt(n[3],10))/100,t(n[5]),this;break;case"hsl":case"hsla":if(n=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)){var o=parseFloat(n[1])/360,s=parseInt(n[2],10)/100,c=parseInt(n[3],10)/100;return t(n[5]),this.setHSL(o,s,c)}}}else if(r=/^\#([A-Fa-f0-9]+)$/.exec(e)){var l=(u=r[1]).length;if(3===l)return this.r=parseInt(u.charAt(0)+u.charAt(0),16)/255,this.g=parseInt(u.charAt(1)+u.charAt(1),16)/255,this.b=parseInt(u.charAt(2)+u.charAt(2),16)/255,this;if(6===l)return this.r=parseInt(u.charAt(0)+u.charAt(1),16)/255,this.g=parseInt(u.charAt(2)+u.charAt(3),16)/255,this.b=parseInt(u.charAt(4)+u.charAt(5),16)/255,this}if(e&&e.length>0){var u=ColorKeywords[e];void 0!==u?this.setHex(u):console.warn("Color: Unknown color "+e)}return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e,t){return void 0===t&&(t=2),this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this},copyLinearToGamma:function(e,t){void 0===t&&(t=2);var r=t>0?1/t:1;return this.r=Math.pow(e.r,r),this.g=Math.pow(e.g,r),this.b=Math.pow(e.b,r),this},convertGammaToLinear:function(){var e=this.r,t=this.g,r=this.b;return this.r=e*e,this.g=t*t,this.b=r*r,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){void 0===e&&(console.warn("Color: .getHSL() target is now required"),e={h:0,s:0,l:0});var t,r,n=this.r,i=this.g,a=this.b,o=Math.max(n,i,a),s=Math.min(n,i,a),c=(s+o)/2;if(s===o)t=0,r=0;else{var l=o-s;switch(r=c<=.5?l/(o+s):l/(2-o-s),o){case n:t=(i-a)/l+(i<a?6:0);break;case i:t=(a-n)/l+2;break;case a:t=(n-i)/l+4}t/=6}return e.h=t,e.s=r,e.l=c,e},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(){var e={};return function(t,r,n){return this.getHSL(e),e.h+=t,e.s+=r,e.l+=n,this.setHSL(e.h,e.s,e.l),this}}(),add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},sub:function(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e,t){return void 0===t&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e},toJSON:function(){return this.getHex()}}),Object.defineProperty(BufferAttribute.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(BufferAttribute.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setArray:function(e){if(Array.isArray(e))throw new TypeError("BufferAttribute: array should be a Typed Array.");this.count=void 0!==e?e.length/this.itemSize:0,this.array=e},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.dynamic=e.dynamic,this},copyAt:function(e,t,r){var n=this;e*=this.itemSize,r*=t.itemSize;for(var i=0,a=this.itemSize;i<a;i++)n.array[e+i]=t.array[r+i];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){for(var t=this.array,r=0,n=0,i=e.length;n<i;n++){var a=e[n];void 0===a&&(console.warn("BufferAttribute.copyColorsArray(): color is undefined",n),a=new Color),t[r++]=a.r,t[r++]=a.g,t[r++]=a.b}return this},copyVector2sArray:function(e){for(var t=this.array,r=0,n=0,i=e.length;n<i;n++){var a=e[n];void 0===a&&(console.warn("BufferAttribute.copyVector2sArray(): vector is undefined",n),a=new Vector2),t[r++]=a.x,t[r++]=a.y}return this},copyVector3sArray:function(e){for(var t=this.array,r=0,n=0,i=e.length;n<i;n++){var a=e[n];void 0===a&&(console.warn("BufferAttribute.copyVector3sArray(): vector is undefined",n),a=new Vector3),t[r++]=a.x,t[r++]=a.y,t[r++]=a.z}return this},copyVector4sArray:function(e){for(var t=this.array,r=0,n=0,i=e.length;n<i;n++){var a=e[n];void 0===a&&(console.warn("BufferAttribute.copyVector4sArray(): vector is undefined",n),a=new Vector4),t[r++]=a.x,t[r++]=a.y,t[r++]=a.z,t[r++]=a.w}return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this},setXYZ:function(e,t,r,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=n,this},setXYZW:function(e,t,r,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=n,this.array[e+3]=i,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)}}),Int8BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Int8BufferAttribute.prototype.constructor=Int8BufferAttribute,Uint8BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Uint8BufferAttribute.prototype.constructor=Uint8BufferAttribute,Uint8ClampedBufferAttribute.prototype=Object.create(BufferAttribute.prototype),Uint8ClampedBufferAttribute.prototype.constructor=Uint8ClampedBufferAttribute,Int16BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Int16BufferAttribute.prototype.constructor=Int16BufferAttribute,Uint16BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Uint16BufferAttribute.prototype.constructor=Uint16BufferAttribute,Int32BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Int32BufferAttribute.prototype.constructor=Int32BufferAttribute,Uint32BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Uint32BufferAttribute.prototype.constructor=Uint32BufferAttribute,Float32BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Float32BufferAttribute.prototype.constructor=Float32BufferAttribute,Float64BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Float64BufferAttribute.prototype.constructor=Float64BufferAttribute,Object.assign(Sphere.prototype,{set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(){var e=new Box3;return function(t,r){var n=this.center;void 0!==r?n.copy(r):e.setFromPoints(t).getCenter(n);for(var i=0,a=0,o=t.length;a<o;a++)i=Math.max(i,n.distanceToSquared(t[a]));return this.radius=Math.sqrt(i),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return this.radius<=0},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},intersectsBox:function(e){return e.intersectsSphere(this)},intersectsPlane:function(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius},clampPoint:function(e,t){var r=this.center.distanceToSquared(e);return void 0===t&&(console.warn("Sphere: .clampPoint() target is now required"),t=new Vector3),t.copy(e),r>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t},getBoundingBox:function(e){return void 0===e&&(console.warn("Sphere: .getBoundingBox() target is now required"),e=new Box3),e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius}}),Object.assign(Box3.prototype,{isBox3:!0,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromArray:function(e){for(var t=1/0,r=1/0,n=1/0,i=-1/0,a=-1/0,o=-1/0,s=0,c=e.length;s<c;s+=3){var l=e[s],u=e[s+1],h=e[s+2];l<t&&(t=l),u<r&&(r=u),h<n&&(n=h),l>i&&(i=l),u>a&&(a=u),h>o&&(o=h)}return this.min.set(t,r,n),this.max.set(i,a,o),this},setFromBufferAttribute:function(e){for(var t=1/0,r=1/0,n=1/0,i=-1/0,a=-1/0,o=-1/0,s=0,c=e.count;s<c;s++){var l=e.getX(s),u=e.getY(s),h=e.getZ(s);l<t&&(t=l),u<r&&(r=u),h<n&&(n=h),l>i&&(i=l),u>a&&(a=u),h>o&&(o=h)}return this.min.set(t,r,n),this.max.set(i,a,o),this},setFromPoints:function(e){var t=this;this.makeEmpty();for(var r=0,n=e.length;r<n;r++)t.expandByPoint(e[r]);return this},setFromCenterAndSize:function(){var e=new Vector3;return function(t,r){var n=e.copy(r).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}}(),setFromObject:function(e){return this.makeEmpty(),this.expandByObject(e)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(e){return void 0===e&&(console.warn("Box3: .getCenter() target is now required"),e=new Vector3),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){return void 0===e&&(console.warn("Box3: .getSize() target is now required"),e=new Vector3),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},expandByObject:function(){function e(e){var a=e.geometry;if(void 0!==a)if(a.isGeometry){var o=a.vertices;for(r=0,n=o.length;r<n;r++)i.copy(o[r]),i.applyMatrix4(e.matrixWorld),t.expandByPoint(i)}else if(a.isBufferGeometry){var s=a.attributes.position;if(void 0!==s)for(r=0,n=s.count;r<n;r++)i.fromBufferAttribute(s,r).applyMatrix4(e.matrixWorld),t.expandByPoint(i)}}var t,r,n,i=new Vector3;return function(r){return t=this,r.updateMatrixWorld(!0),r.traverse(e),this}}(),containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function(e,t){return void 0===t&&(console.warn("Box3: .getParameter() target is now required"),t=new Vector3),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},intersectsSphere:function(){var e=new Vector3;return function(t){return this.clampPoint(t.center,e),e.distanceToSquared(t.center)<=t.radius*t.radius}}(),intersectsPlane:function(e){var t,r;return e.normal.x>0?(t=e.normal.x*this.min.x,r=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,r=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,r+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,r+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,r+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,r+=e.normal.z*this.min.z),t<=e.constant&&r>=e.constant},intersectsTriangle:function(){function e(e){var i,a;for(i=0,a=e.length-3;i<=a;i+=3){s.fromArray(e,i);var o=l.x*Math.abs(s.x)+l.y*Math.abs(s.y)+l.z*Math.abs(s.z),c=t.dot(s),u=r.dot(s),h=n.dot(s);if(Math.max(-Math.max(c,u,h),Math.min(c,u,h))>o)return!1}return!0}var t=new Vector3,r=new Vector3,n=new Vector3,i=new Vector3,a=new Vector3,o=new Vector3,s=new Vector3,c=new Vector3,l=new Vector3,u=new Vector3;return function(s){if(this.isEmpty())return!1;this.getCenter(c),l.subVectors(this.max,c),t.subVectors(s.a,c),r.subVectors(s.b,c),n.subVectors(s.c,c),i.subVectors(r,t),a.subVectors(n,r),o.subVectors(t,n);var h=[0,-i.z,i.y,0,-a.z,a.y,0,-o.z,o.y,i.z,0,-i.x,a.z,0,-a.x,o.z,0,-o.x,-i.y,i.x,0,-a.y,a.x,0,-o.y,o.x,0];return!!e(h)&&(h=[1,0,0,0,1,0,0,0,1],!!e(h)&&(u.crossVectors(i,a),h=[u.x,u.y,u.z],e(h)))}}(),clampPoint:function(e,t){return void 0===t&&(console.warn("Box3: .clampPoint() target is now required"),t=new Vector3),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new Vector3;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),getBoundingSphere:function(){var e=new Vector3;return function(t){return void 0===t&&(console.warn("Box3: .getBoundingSphere() target is now required"),t=new Sphere),this.getCenter(t.center),t.radius=.5*this.getSize(e).length(),t}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(){var e=[new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3];return function(t){return this.isEmpty()?this:(e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(e),this)}}(),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}),Object.assign(EventDispatcher.prototype,{addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var r=this._listeners;void 0===r[e]&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var r=this._listeners;return void 0!==r[e]&&-1!==r[e].indexOf(t)},removeEventListener:function(e,t){if(void 0!==this._listeners){var r=this._listeners[e];if(void 0!==r){var n=r.indexOf(t);-1!==n&&r.splice(n,1)}}},dispatchEvent:function(e){var t=this;if(void 0!==this._listeners){var r=this._listeners[e.type];if(void 0!==r){e.target=this;for(var n=r.slice(0),i=0,a=n.length;i<a;i++)n[i].call(t,e)}}}}),Object.assign(DirectGeometry.prototype,{computeGroups:function(e){for(var t,r=[],n=void 0,i=e.faces,a=0;a<i.length;a++){var o=i[a];o.materialIndex!==n&&(n=o.materialIndex,void 0!==t&&(t.count=3*a-t.start,r.push(t)),t={start:3*a,materialIndex:n})}void 0!==t&&(t.count=3*a-t.start,r.push(t)),this.groups=r},fromGeometry:function(e){var t,r=this,n=e.faces,i=e.vertices,a=e.faceVertexUvs,o=a[0]&&a[0].length>0,s=a[1]&&a[1].length>0,c=e.morphTargets,l=c.length;if(l>0){t=[];for(g=0;g<l;g++)t[g]=[];this.morphTargets.position=t}var u,h=e.morphNormals,p=h.length;if(p>0){u=[];for(g=0;g<p;g++)u[g]=[];this.morphTargets.normal=u}for(var d=e.skinIndices,f=e.skinWeights,m=d.length===i.length,v=f.length===i.length,g=0;g<n.length;g++){var y=n[g];r.vertices.push(i[y.a],i[y.b],i[y.c]);var x=y.vertexNormals;if(3===x.length)r.normals.push(x[0],x[1],x[2]);else{var b=y.normal;r.normals.push(b,b,b)}var _=y.vertexColors;if(3===_.length)r.colors.push(_[0],_[1],_[2]);else{var M=y.color;r.colors.push(M,M,M)}if(!0===o&&(void 0!==(w=a[0][g])?r.uvs.push(w[0],w[1],w[2]):(console.warn("DirectGeometry.fromGeometry(): Undefined vertexUv ",g),r.uvs.push(new Vector2,new Vector2,new Vector2))),!0===s){var w=a[1][g];void 0!==w?r.uvs2.push(w[0],w[1],w[2]):(console.warn("DirectGeometry.fromGeometry(): Undefined vertexUv2 ",g),r.uvs2.push(new Vector2,new Vector2,new Vector2))}for(L=0;L<l;L++){var S=c[L].vertices;t[L].push(S[y.a],S[y.b],S[y.c])}for(var L=0;L<p;L++){var T=h[L].vertexNormals[g];u[L].push(T.a,T.b,T.c)}m&&r.skinIndices.push(d[y.a],d[y.b],d[y.c]),v&&r.skinWeights.push(f[y.a],f[y.b],f[y.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this}}),Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],Euler.DefaultOrder="XYZ",Object.defineProperties(Euler.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this.onChangeCallback()}},order:{get:function(){return this._order},set:function(e){this._order=e,this.onChangeCallback()}}}),Object.assign(Euler.prototype,{isEuler:!0,set:function(e,t,r,n){return this._x=e,this._y=t,this._z=r,this._order=n||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},setFromRotationMatrix:function(e,t,r){var n=_Math.clamp,i=e.elements,a=i[0],o=i[4],s=i[8],c=i[1],l=i[5],u=i[9],h=i[2],p=i[6],d=i[10];return t=t||this._order,"XYZ"===t?(this._y=Math.asin(n(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-o,a)):(this._x=Math.atan2(p,l),this._z=0)):"YXZ"===t?(this._x=Math.asin(-n(u,-1,1)),Math.abs(u)<.99999?(this._y=Math.atan2(s,d),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-h,a),this._z=0)):"ZXY"===t?(this._x=Math.asin(n(p,-1,1)),Math.abs(p)<.99999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(c,a))):"ZYX"===t?(this._y=Math.asin(-n(h,-1,1)),Math.abs(h)<.99999?(this._x=Math.atan2(p,d),this._z=Math.atan2(c,a)):(this._x=0,this._z=Math.atan2(-o,l))):"YZX"===t?(this._z=Math.asin(n(c,-1,1)),Math.abs(c)<.99999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-h,a)):(this._x=0,this._y=Math.atan2(s,d))):"XZY"===t?(this._z=Math.asin(-n(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(p,l),this._y=Math.atan2(s,a)):(this._x=Math.atan2(-u,d),this._y=0)):console.warn("Euler: .setFromRotationMatrix() given unsupported order: "+t),this._order=t,!1!==r&&this.onChangeCallback(),this},setFromQuaternion:function(){var e=new Matrix4;return function(t,r,n){return e.makeRotationFromQuaternion(t),this.setFromRotationMatrix(e,r,n)}}(),setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:function(){var e=new Quaternion;return function(t){return e.setFromEuler(this),this.setFromQuaternion(e,t)}}(),equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new Vector3(this._x,this._y,this._z)},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}}),Object.assign(Layers.prototype,{set:function(e){this.mask=1<<e|0},enable:function(e){this.mask|=1<<e|0},toggle:function(e){this.mask^=1<<e|0},disable:function(e){this.mask&=~(1<<e|0)},test:function(e){return 0!=(this.mask&e.mask)}}),Object.assign(Matrix3.prototype,{isMatrix3:!0,set:function(e,t,r,n,i,a,o,s,c){var l=this.elements;return l[0]=e,l[1]=n,l[2]=o,l[3]=t,l[4]=i,l[5]=s,l[6]=r,l[7]=a,l[8]=c,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(e){var t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],this},setFromMatrix4:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},applyToBufferAttribute:function(){var e=new Vector3;return function(t){for(var r=this,n=0,i=t.count;n<i;n++)e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.applyMatrix3(r),t.setXYZ(n,e.x,e.y,e.z);return t}}(),multiply:function(e){return this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var r=e.elements,n=t.elements,i=this.elements,a=r[0],o=r[3],s=r[6],c=r[1],l=r[4],u=r[7],h=r[2],p=r[5],d=r[8],f=n[0],m=n[3],v=n[6],g=n[1],y=n[4],x=n[7],b=n[2],_=n[5],M=n[8];return i[0]=a*f+o*g+s*b,i[3]=a*m+o*y+s*_,i[6]=a*v+o*x+s*M,i[1]=c*f+l*g+u*b,i[4]=c*m+l*y+u*_,i[7]=c*v+l*x+u*M,i[2]=h*f+p*g+d*b,i[5]=h*m+p*y+d*_,i[8]=h*v+p*x+d*M,this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],o=e[5],s=e[6],c=e[7],l=e[8];return t*a*l-t*o*c-r*i*l+r*o*s+n*i*c-n*a*s},getInverse:function(e,t){e&&e.isMatrix4&&console.error("Matrix3: .getInverse() no longer takes a Matrix4 argument.");var r=e.elements,n=this.elements,i=r[0],a=r[1],o=r[2],s=r[3],c=r[4],l=r[5],u=r[6],h=r[7],p=r[8],d=p*c-l*h,f=l*u-p*s,m=h*s-c*u,v=i*d+a*f+o*m;if(0===v){var g="Matrix3: .getInverse() can't invert matrix, determinant is 0";if(!0===t)throw new Error(g);return console.warn(g),this.identity()}var y=1/v;return n[0]=d*y,n[1]=(o*h-p*a)*y,n[2]=(l*a-o*c)*y,n[3]=f*y,n[4]=(p*i-o*u)*y,n[5]=(o*s-l*i)*y,n[6]=m*y,n[7]=(a*u-h*i)*y,n[8]=(c*i-a*s)*y,this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},getNormalMatrix:function(e){return this.setFromMatrix4(e).getInverse(this).transpose()},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},setUvTransform:function(e,t,r,n,i,a,o){var s=Math.cos(i),c=Math.sin(i);this.set(r*s,r*c,-r*(s*a+c*o)+a+e,-n*c,n*s,-n*(-c*a+s*o)+o+t,0,0,1)},scale:function(e,t){var r=this.elements;return r[0]*=e,r[3]*=e,r[6]*=e,r[1]*=t,r[4]*=t,r[7]*=t,this},rotate:function(e){var t=Math.cos(e),r=Math.sin(e),n=this.elements,i=n[0],a=n[3],o=n[6],s=n[1],c=n[4],l=n[7];return n[0]=t*i+r*s,n[3]=t*a+r*c,n[6]=t*o+r*l,n[1]=-r*i+t*s,n[4]=-r*a+t*c,n[7]=-r*o+t*l,this},translate:function(e,t){var r=this.elements;return r[0]+=e*r[2],r[3]+=e*r[5],r[6]+=e*r[8],r[1]+=t*r[2],r[4]+=t*r[5],r[7]+=t*r[8],this},equals:function(e){for(var t=this.elements,r=e.elements,n=0;n<9;n++)if(t[n]!==r[n])return!1;return!0},fromArray:function(e,t){var r=this;void 0===t&&(t=0);for(var n=0;n<9;n++)r.elements[n]=e[n+t];return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e}});var object3DId=0;Object3D.DefaultUp=new Vector3(0,1,0),Object3D.DefaultMatrixAutoUpdate=!0,Object3D.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Object3D,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(e){return this.quaternion.premultiply(e),this},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new Quaternion;return function(t,r){return e.setFromAxisAngle(t,r),this.quaternion.multiply(e),this}}(),rotateOnWorldAxis:function(){var e=new Quaternion;return function(t,r){return e.setFromAxisAngle(t,r),this.quaternion.premultiply(e),this}}(),rotateX:function(){var e=new Vector3(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new Vector3(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new Vector3(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new Vector3;return function(t,r){return e.copy(t).applyQuaternion(this.quaternion),this.position.add(e.multiplyScalar(r)),this}}(),translateX:function(){var e=new Vector3(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new Vector3(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new Vector3(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new Matrix4;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new Matrix4,t=new Vector3;return function(r,n,i){r.isVector3?t.copy(r):t.set(r,n,i),this.isCamera?e.lookAt(this.position,t,this.up):e.lookAt(t,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){var t=arguments,r=this;if(arguments.length>1){for(var n=0;n<arguments.length;n++)r.add(t[n]);return this}return e===this?(console.error("Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:"added"}),this.children.push(e)):console.error("Object3D.add: object not an instance of Object3D.",e),this)},remove:function(e){var t=arguments,r=this;if(arguments.length>1){for(var n=0;n<arguments.length;n++)r.remove(t[n]);return this}var i=this.children.indexOf(e);return-1!==i&&(e.parent=null,e.dispatchEvent({type:"removed"}),this.children.splice(i,1)),this},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){var r=this;if(this[e]===t)return this;for(var n=0,i=this.children.length;n<i;n++){var a=r.children[n].getObjectByProperty(e,t);if(void 0!==a)return a}},getWorldPosition:function(e){return void 0===e&&(console.warn("Object3D: .getWorldPosition() target is now required"),e=new Vector3),this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var e=new Vector3,t=new Vector3;return function(r){return void 0===r&&(console.warn("Object3D: .getWorldQuaternion() target is now required"),r=new Quaternion),this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,r,t),r}}(),getWorldScale:function(){var e=new Vector3,t=new Quaternion;return function(r){return void 0===r&&(console.warn("Object3D: .getWorldScale() target is now required"),r=new Vector3),this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,t,r),r}}(),getWorldDirection:function(){var e=new Quaternion;return function(t){return void 0===t&&(console.warn("Object3D: .getWorldDirection() target is now required"),t=new Vector3),this.getWorldQuaternion(e),t.set(0,0,1).applyQuaternion(e)}}(),raycast:function(){},traverse:function(e){e(this);for(var t=this.children,r=0,n=t.length;r<n;r++)t[r].traverse(e)},traverseVisible:function(e){if(!1!==this.visible){e(this);for(var t=this.children,r=0,n=t.length;r<n;r++)t[r].traverseVisible(e)}},traverseAncestors:function(e){var t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=this.children,r=0,n=t.length;r<n;r++)t[r].updateMatrixWorld(e)},toJSON:function(e){function t(t,r){return void 0===t[r.uuid]&&(t[r.uuid]=r.toJSON(e)),r.uuid}function r(e){var t=[];for(var r in e){var n=e[r];delete n.metadata,t.push(n)}return t}var n=this,i=void 0===e||"string"==typeof e,a={};i&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{}},a.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var o={};if(o.uuid=this.uuid,o.type=this.type,""!==this.name&&(o.name=this.name),!0===this.castShadow&&(o.castShadow=!0),!0===this.receiveShadow&&(o.receiveShadow=!0),!1===this.visible&&(o.visible=!1),!1===this.frustumCulled&&(o.frustumCulled=!1),0!==this.renderOrder&&(o.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(o.userData=this.userData),o.matrix=this.matrix.toArray(),void 0!==this.geometry){o.geometry=t(e.geometries,this.geometry);var s=this.geometry.parameters;if(void 0!==s&&void 0!==s.shapes){v=s.shapes;if(Array.isArray(v))for(var c=0,l=v.length;c<l;c++){var u=v[c];t(e.shapes,u)}else t(e.shapes,v)}}if(void 0!==this.material)if(Array.isArray(this.material)){for(var h=[],c=0,l=this.material.length;c<l;c++)h.push(t(e.materials,n.material[c]));o.material=h}else o.material=t(e.materials,this.material);if(this.children.length>0){o.children=[];for(c=0;c<this.children.length;c++)o.children.push(n.children[c].toJSON(e).object)}if(i){var p=r(e.geometries),d=r(e.materials),f=r(e.textures),m=r(e.images),v=r(e.shapes);p.length>0&&(a.geometries=p),d.length>0&&(a.materials=d),f.length>0&&(a.textures=f),m.length>0&&(a.images=m),v.length>0&&(a.shapes=v)}return a.object=o,a},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(e,t){var r=this;if(void 0===t&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(var n=0;n<e.children.length;n++){var i=e.children[n];r.add(i.clone())}return this}});var bufferGeometryId=1;BufferGeometry.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:BufferGeometry,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){Array.isArray(e)?this.index=new(arrayMax(e)>65535?Uint32BufferAttribute:Uint16BufferAttribute)(e,1):this.index=e},addAttribute:function(e,t){return t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("BufferGeometry.addAttribute: Use .setIndex() for index attribute."),void this.setIndex(t)):(this.attributes[e]=t,this):(console.warn("BufferGeometry: .addAttribute() now expects ( name, attribute )."),void this.addAttribute(e,new BufferAttribute(arguments[1],arguments[2])))},getAttribute:function(e){return this.attributes[e]},removeAttribute:function(e){return delete this.attributes[e],this},addGroup:function(e,t,r){this.groups.push({start:e,count:t,materialIndex:void 0!==r?r:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix:function(e){var t=this.attributes.position;void 0!==t&&(e.applyToBufferAttribute(t),t.needsUpdate=!0);var r=this.attributes.normal;return void 0!==r&&((new Matrix3).getNormalMatrix(e).applyToBufferAttribute(r),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(){var e=new Matrix4;return function(t){return e.makeRotationX(t),this.applyMatrix(e),this}}(),rotateY:function(){var e=new Matrix4;return function(t){return e.makeRotationY(t),this.applyMatrix(e),this}}(),rotateZ:function(){var e=new Matrix4;return function(t){return e.makeRotationZ(t),this.applyMatrix(e),this}}(),translate:function(){var e=new Matrix4;return function(t,r,n){return e.makeTranslation(t,r,n),this.applyMatrix(e),this}}(),scale:function(){var e=new Matrix4;return function(t,r,n){return e.makeScale(t,r,n),this.applyMatrix(e),this}}(),lookAt:function(){var e=new Object3D;return function(t){e.lookAt(t),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),center:function(){var e=new Vector3;return function(){return this.computeBoundingBox(),this.boundingBox.getCenter(e).negate(),this.translate(e.x,e.y,e.z),this}}(),setFromObject:function(e){var t=e.geometry;if(e.isPoints||e.isLine){var r=new Float32BufferAttribute(3*t.vertices.length,3),n=new Float32BufferAttribute(3*t.colors.length,3);if(this.addAttribute("position",r.copyVector3sArray(t.vertices)),this.addAttribute("color",n.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){var i=new Float32BufferAttribute(t.lineDistances.length,1);this.addAttribute("lineDistance",i.copyArray(t.lineDistances))}null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone())}else e.isMesh&&t&&t.isGeometry&&this.fromGeometry(t);return this},setFromPoints:function(e){for(var t=[],r=0,n=e.length;r<n;r++){var i=e[r];t.push(i.x,i.y,i.z||0)}return this.addAttribute("position",new Float32BufferAttribute(t,3)),this},updateFromObject:function(e){var t=e.geometry;if(e.isMesh){var r=t.__directGeometry;if(!0===t.elementsNeedUpdate&&(r=void 0,t.elementsNeedUpdate=!1),void 0===r)return this.fromGeometry(t);r.verticesNeedUpdate=t.verticesNeedUpdate,r.normalsNeedUpdate=t.normalsNeedUpdate,r.colorsNeedUpdate=t.colorsNeedUpdate,r.uvsNeedUpdate=t.uvsNeedUpdate,r.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=r}var n;return!0===t.verticesNeedUpdate&&(void 0!==(n=this.attributes.position)&&(n.copyVector3sArray(t.vertices),n.needsUpdate=!0),t.verticesNeedUpdate=!1),!0===t.normalsNeedUpdate&&(void 0!==(n=this.attributes.normal)&&(n.copyVector3sArray(t.normals),n.needsUpdate=!0),t.normalsNeedUpdate=!1),!0===t.colorsNeedUpdate&&(void 0!==(n=this.attributes.color)&&(n.copyColorsArray(t.colors),n.needsUpdate=!0),t.colorsNeedUpdate=!1),t.uvsNeedUpdate&&(void 0!==(n=this.attributes.uv)&&(n.copyVector2sArray(t.uvs),n.needsUpdate=!0),t.uvsNeedUpdate=!1),t.lineDistancesNeedUpdate&&(void 0!==(n=this.attributes.lineDistance)&&(n.copyArray(t.lineDistances),n.needsUpdate=!0),t.lineDistancesNeedUpdate=!1),t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=(new DirectGeometry).fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){var t=this,r=new Float32Array(3*e.vertices.length);if(this.addAttribute("position",new BufferAttribute(r,3).copyVector3sArray(e.vertices)),e.normals.length>0){var n=new Float32Array(3*e.normals.length);this.addAttribute("normal",new BufferAttribute(n,3).copyVector3sArray(e.normals))}if(e.colors.length>0){var i=new Float32Array(3*e.colors.length);this.addAttribute("color",new BufferAttribute(i,3).copyColorsArray(e.colors))}if(e.uvs.length>0){var a=new Float32Array(2*e.uvs.length);this.addAttribute("uv",new BufferAttribute(a,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){var o=new Float32Array(2*e.uvs2.length);this.addAttribute("uv2",new BufferAttribute(o,2).copyVector2sArray(e.uvs2))}this.groups=e.groups;for(var s in e.morphTargets){for(var c=[],l=e.morphTargets[s],u=0,h=l.length;u<h;u++){var p=l[u],d=new Float32BufferAttribute(3*p.length,3);c.push(d.copyVector3sArray(p))}t.morphAttributes[s]=c}if(e.skinIndices.length>0){var f=new Float32BufferAttribute(4*e.skinIndices.length,4);this.addAttribute("skinIndex",f.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){var m=new Float32BufferAttribute(4*e.skinWeights.length,4);this.addAttribute("skinWeight",m.copyVector4sArray(e.skinWeights))}return null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Box3);var e=this.attributes.position;void 0!==e?this.boundingBox.setFromBufferAttribute(e):this.boundingBox.makeEmpty(),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var e=new Box3,t=new Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new Sphere);var r=this.attributes.position;if(r){var n=this.boundingSphere.center;e.setFromBufferAttribute(r),e.getCenter(n);for(var i=0,a=0,o=r.count;a<o;a++)t.x=r.getX(a),t.y=r.getY(a),t.z=r.getZ(a),i=Math.max(i,n.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var e=this.index,t=this.attributes,r=this.groups;if(t.position){var n=t.position.array;if(void 0===t.normal)this.addAttribute("normal",new BufferAttribute(new Float32Array(n.length),3));else for(var i=t.normal.array,a=0,o=i.length;a<o;a++)i[a]=0;var s,c,l,u=t.normal.array,h=new Vector3,p=new Vector3,d=new Vector3,f=new Vector3,m=new Vector3;if(e){var v=e.array;0===r.length&&this.addGroup(0,v.length);for(var g=0,y=r.length;g<y;++g)for(var x=r[g],b=x.start,a=b,o=b+x.count;a<o;a+=3)s=3*v[a+0],c=3*v[a+1],l=3*v[a+2],h.fromArray(n,s),p.fromArray(n,c),d.fromArray(n,l),f.subVectors(d,p),m.subVectors(h,p),f.cross(m),u[s]+=f.x,u[s+1]+=f.y,u[s+2]+=f.z,u[c]+=f.x,u[c+1]+=f.y,u[c+2]+=f.z,u[l]+=f.x,u[l+1]+=f.y,u[l+2]+=f.z}else for(var a=0,o=n.length;a<o;a+=9)h.fromArray(n,a),p.fromArray(n,a+3),d.fromArray(n,a+6),f.subVectors(d,p),m.subVectors(h,p),f.cross(m),u[a]=f.x,u[a+1]=f.y,u[a+2]=f.z,u[a+3]=f.x,u[a+4]=f.y,u[a+5]=f.z,u[a+6]=f.x,u[a+7]=f.y,u[a+8]=f.z;this.normalizeNormals(),t.normal.needsUpdate=!0}},merge:function(e,t){if(!e||!e.isBufferGeometry)return void console.error("BufferGeometry.merge(): geometry not an instance of BufferGeometry.",e);void 0===t&&(t=0,console.warn("BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var r=this.attributes;for(var n in r)if(void 0!==e.attributes[n])for(var i=r[n].array,a=e.attributes[n],o=a.array,s=0,c=a.itemSize*t;s<o.length;s++,c++)i[c]=o[s];return this},normalizeNormals:function(){var e=new Vector3;return function(){for(var t=this.attributes.normal,r=0,n=t.count;r<n;r++)e.x=t.getX(r),e.y=t.getY(r),e.z=t.getZ(r),e.normalize(),t.setXYZ(r,e.x,e.y,e.z)}}(),toNonIndexed:function(){if(null===this.index)return console.warn("BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var e=new BufferGeometry,t=this.index.array,r=this.attributes;for(var n in r){for(var i=r[n],a=i.array,o=i.itemSize,s=new a.constructor(t.length*o),c=0,l=0,u=0,h=t.length;u<h;u++){c=t[u]*o;for(var p=0;p<o;p++)s[l++]=a[c++]}e.addAttribute(n,new BufferAttribute(s,o))}for(var d=this.groups,u=0,h=d.length;u<h;u++){var f=d[u];e.addGroup(f.start,f.count,f.materialIndex)}return e},toJSON:function(){var e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),void 0!==this.parameters){var t=this.parameters;for(var r in t)void 0!==t[r]&&(e[r]=t[r]);return e}e.data={attributes:{}};var n=this.index;if(null!==n){o=Array.prototype.slice.call(n.array);e.data.index={type:n.array.constructor.name,array:o}}var i=this.attributes;for(var r in i){var a=i[r],o=Array.prototype.slice.call(a.array);e.data.attributes[r]={itemSize:a.itemSize,type:a.array.constructor.name,array:o,normalized:a.normalized}}var s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));var c=this.boundingSphere;return null!==c&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e},clone:function(){return(new BufferGeometry).copy(this)},copy:function(e){var t,r,n,i=this;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;var a=e.index;null!==a&&this.setIndex(a.clone());var o=e.attributes;for(t in o){var s=o[t];i.addAttribute(t,s.clone())}var c=e.morphAttributes;for(t in c){var l=[],u=c[t];for(r=0,n=u.length;r<n;r++)l.push(u[r].clone());i.morphAttributes[t]=l}var h=e.groups;for(r=0,n=h.length;r<n;r++){var p=h[r];i.addGroup(p.start,p.count,p.materialIndex)}var d=e.boundingBox;null!==d&&(this.boundingBox=d.clone());var f=e.boundingSphere;return null!==f&&(this.boundingSphere=f.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});var BufferGeometryUtils={computeTangents:function(e){function t(e){B.fromArray(o,3*e),D.copy(B),C=u[e],E.copy(C),E.sub(B.multiplyScalar(B.dot(C))).normalize(),P.crossVectors(D,C),A=P.dot(h[e]),T=A<0?-1:1,l[4*e]=E.x,l[4*e+1]=E.y,l[4*e+2]=E.z,l[4*e+3]=T}var r=e.index,n=e.attributes;if(null===r||void 0===n.position||void 0===n.normal||void 0===n.uv)return void console.warn("BufferGeometry: Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");var i=r.array,a=n.position.array,o=n.normal.array,s=n.uv.array,c=a.length/3;void 0===n.tangent&&e.addAttribute("tangent",new BufferAttribute(new Float32Array(4*c),4));for(var l=n.tangent.array,u=[],h=[],p=0;p<c;p++)u[p]=new Vector3,h[p]=new Vector3;var d=new Vector3,f=new Vector3,m=new Vector3,v=new Vector2,g=new Vector2,y=new Vector2,x=new Vector3,b=new Vector3,_=e.groups;0===_.length&&(_=[{start:0,count:i.length}]);for(var M=0,w=_.length;M<w;++M)for(var S=U=(R=_[M]).start,L=U+(N=R.count);S<L;S+=3)!function(e,t,r){d.fromArray(a,3*e),f.fromArray(a,3*t),m.fromArray(a,3*r),v.fromArray(s,2*e),g.fromArray(s,2*t),y.fromArray(s,2*r);var n=f.x-d.x,i=m.x-d.x,o=f.y-d.y,c=m.y-d.y,l=f.z-d.z,p=m.z-d.z,_=g.x-v.x,M=y.x-v.x,w=g.y-v.y,S=y.y-v.y,L=1/(_*S-M*w);x.set((S*n-w*i)*L,(S*o-w*c)*L,(S*l-w*p)*L),b.set((_*i-M*n)*L,(_*c-M*o)*L,(_*p-M*l)*L),u[e].add(x),u[t].add(x),u[r].add(x),h[e].add(b),h[t].add(b),h[r].add(b)}(i[S+0],i[S+1],i[S+2]);for(var T,C,A,E=new Vector3,P=new Vector3,B=new Vector3,D=new Vector3,M=0,w=_.length;M<w;++M)for(var R=_[M],U=R.start,N=R.count,S=U,L=U+N;S<L;S+=3)t(i[S+0]),t(i[S+1]),t(i[S+2])},mergeBufferGeometries:function(e){for(var t=this,r=null!==e[0].index,n=new Set(Object.keys(e[0].attributes)),i=new Set(Object.keys(e[0].morphAttributes)),a={},o={},s=new BufferGeometry,c=0;c<e.length;++c){var l=e[c];if(r!==(null!==l.index))return null;for(var u in l.attributes){if(!n.has(u))return null;void 0===a[u]&&(a[u]=[]),a[u].push(l.attributes[u])}for(var u in l.morphAttributes){if(!i.has(u))return null;void 0===o[u]&&(o[u]=[]),o[u].push(l.morphAttributes[u])}void 0!==l.userData&&(s.userData=s.userData||{},s.userData.mergedUserData=s.userData.mergedUserData||[],s.userData.mergedUserData.push(l.userData))}if(r){for(var h=0,p=[],c=0;c<e.length;++c){var d=e[c].index;if(h>0){d=d.clone();for(y=0;y<d.count;++y)d.setX(y,d.getX(y)+h)}p.push(d),h+=e[c].attributes.position.count}var f=this.mergeBufferAttributes(p);if(!f)return null;s.index=f}for(var u in a){var m=t.mergeBufferAttributes(a[u]);if(!m)return null;s.addAttribute(u,m)}for(var u in o){var v=o[u][0].length;if(0===v)break;s.morphAttributes=s.morphAttributes||{},s.morphAttributes[u]=[];for(c=0;c<v;++c){for(var g=[],y=0;y<o[u].length;++y)g.push(o[u][y][c]);var x=t.mergeBufferAttributes(g);if(!x)return null;s.morphAttributes[u].push(x)}}return s},mergeBufferAttributes:function(e){for(var t,r,n,i=0,a=0;a<e.length;++a){var o=e[a];if(o.isInterleavedBufferAttribute)return null;if(void 0===t&&(t=o.array.constructor),t!==o.array.constructor)return null;if(void 0===r&&(r=o.itemSize),r!==o.itemSize)return null;if(void 0===n&&(n=o.normalized),n!==o.normalized)return null;i+=o.array.length}for(var s=new t(i),c=0,l=0;l<e.length;++l)s.set(e[l].array,c),c+=e[l].array.length;return new BufferAttribute(s,r,n)}};Camera.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Camera,isCamera:!0,copy:function(e,t){return Object3D.prototype.copy.call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this},getWorldDirection:function(){var e=new Quaternion;return function(t){return void 0===t&&(console.warn("Camera: .getWorldDirection() target is now required"),t=new Vector3),this.getWorldQuaternion(e),t.set(0,0,-1).applyQuaternion(e)}}(),updateMatrixWorld:function(e){Object3D.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}}),PerspectiveCamera.prototype=Object.assign(Object.create(Camera.prototype),{constructor:PerspectiveCamera,isPerspectiveCamera:!0,copy:function(e,t){return Camera.prototype.copy.call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){var t=.5*this.getFilmHeight()/e;this.fov=2*_Math.RAD2DEG*Math.atan(t),this.updateProjectionMatrix()},getFocalLength:function(){var e=Math.tan(.5*_Math.DEG2RAD*this.fov);return.5*this.getFilmHeight()/e},getEffectiveFOV:function(){return 2*_Math.RAD2DEG*Math.atan(Math.tan(.5*_Math.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,r,n,i,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=n,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=this.near,t=e*Math.tan(.5*_Math.DEG2RAD*this.fov)/this.zoom,r=2*t,n=this.aspect*r,i=-.5*n,a=this.view;if(null!==this.view&&this.view.enabled){var o=a.fullWidth,s=a.fullHeight;i+=a.offsetX*n/o,t-=a.offsetY*r/s,n*=a.width/o,r*=a.height/s}var c=this.filmOffset;0!==c&&(i+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+n,t,t-r,e,this.far)},toJSON:function(e){var t=Object3D.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}});var REVISION="91",MOUSE={LEFT:0,MIDDLE:1,RIGHT:2},CullFaceNone=0,CullFaceBack=1,CullFaceFront=2,PCFShadowMap=1,PCFSoftShadowMap=2,FrontSide=0,BackSide=1,DoubleSide=2,FlatShading=1,NoColors=0,FaceColors=1,VertexColors=2,NoBlending=0,NormalBlending=1,AdditiveBlending=2,SubtractiveBlending=3,MultiplyBlending=4,CustomBlending=5,AddEquation=100,SubtractEquation=101,ReverseSubtractEquation=102,MinEquation=103,MaxEquation=104,ZeroFactor=200,OneFactor=201,SrcColorFactor=202,OneMinusSrcColorFactor=203,SrcAlphaFactor=204,OneMinusSrcAlphaFactor=205,DstAlphaFactor=206,OneMinusDstAlphaFactor=207,DstColorFactor=208,OneMinusDstColorFactor=209,SrcAlphaSaturateFactor=210,NeverDepth=0,AlwaysDepth=1,LessDepth=2,LessEqualDepth=3,EqualDepth=4,GreaterEqualDepth=5,GreaterDepth=6,NotEqualDepth=7,MultiplyOperation=0,MixOperation=1,AddOperation=2,NoToneMapping=0,LinearToneMapping=1,ReinhardToneMapping=2,Uncharted2ToneMapping=3,CineonToneMapping=4,UVMapping=300,CubeReflectionMapping=301,CubeRefractionMapping=302,EquirectangularReflectionMapping=303,EquirectangularRefractionMapping=304,SphericalReflectionMapping=305,CubeUVReflectionMapping=306,CubeUVRefractionMapping=307,RepeatWrapping=1e3,ClampToEdgeWrapping=1001,MirroredRepeatWrapping=1002,NearestFilter=1003,NearestMipMapNearestFilter=1004,NearestMipMapLinearFilter=1005,LinearFilter=1006,LinearMipMapNearestFilter=1007,LinearMipMapLinearFilter=1008,UnsignedByteType=1009,ByteType=1010,ShortType=1011,UnsignedShortType=1012,IntType=1013,UnsignedIntType=1014,FloatType=1015,HalfFloatType=1016,UnsignedShort4444Type=1017,UnsignedShort5551Type=1018,UnsignedShort565Type=1019,UnsignedInt248Type=1020,AlphaFormat=1021,RGBFormat=1022,RGBAFormat=1023,LuminanceFormat=1024,LuminanceAlphaFormat=1025,DepthFormat=1026,DepthStencilFormat=1027,RGB_S3TC_DXT1_Format=33776,RGBA_S3TC_DXT1_Format=33777,RGBA_S3TC_DXT3_Format=33778,RGBA_S3TC_DXT5_Format=33779,RGB_PVRTC_4BPPV1_Format=35840,RGB_PVRTC_2BPPV1_Format=35841,RGBA_PVRTC_4BPPV1_Format=35842,RGBA_PVRTC_2BPPV1_Format=35843,RGB_ETC1_Format=36196,RGBA_ASTC_4x4_Format=37808,RGBA_ASTC_5x4_Format=37809,RGBA_ASTC_5x5_Format=37810,RGBA_ASTC_6x5_Format=37811,RGBA_ASTC_6x6_Format=37812,RGBA_ASTC_8x5_Format=37813,RGBA_ASTC_8x6_Format=37814,RGBA_ASTC_8x8_Format=37815,RGBA_ASTC_10x5_Format=37816,RGBA_ASTC_10x6_Format=37817,RGBA_ASTC_10x8_Format=37818,RGBA_ASTC_10x10_Format=37819,RGBA_ASTC_12x10_Format=37820,RGBA_ASTC_12x12_Format=37821,InterpolateDiscrete=2300,InterpolateLinear=2301,InterpolateSmooth=2302,ZeroCurvatureEnding=2400,ZeroSlopeEnding=2401,WrapAroundEnding=2402,TrianglesDrawMode=0,TriangleStripDrawMode=1,TriangleFanDrawMode=2,LinearEncoding=3e3,sRGBEncoding=3001,GammaEncoding=3007,RGBEEncoding=3002,RGBM7Encoding=3004,RGBM16Encoding=3005,RGBDEncoding=3006,BasicDepthPacking=3200,RGBADepthPacking=3201,materialId=0;Material.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Material,isMaterial:!0,onBeforeCompile:function(){},setValues:function(e){var t=this;if(void 0!==e)for(var r in e){var n=e[r];if(void 0!==n)if("shading"!==r){var i=t[r];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):t[r]="overdraw"===r?Number(n):n:console.warn(t.type+": '"+r+"' is not a property of this material.")}else console.warn(t.type+": .shading has been removed. Use the boolean .flatShading instead."),t.flatShading=n===FlatShading;else console.warn("Material: '"+r+"' parameter is undefined.")}},toJSON:function(e){function t(e){var t=[];for(var r in e){var n=e[r];delete n.metadata,t.push(n)}return t}var r=void 0===e||"string"==typeof e;r&&(e={textures:{},images:{}});var n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearCoat&&(n.clearCoat=this.clearCoat),void 0!==this.clearCoatRoughness&&(n.clearCoatRoughness=this.clearCoatRoughness),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,n.reflectivity=this.reflectivity),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.size&&(n.size=this.size),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==NormalBlending&&(n.blending=this.blending),!0===this.flatShading&&(n.flatShading=this.flatShading),this.side!==FrontSide&&(n.side=this.side),this.vertexColors!==NoColors&&(n.vertexColors=this.vertexColors),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,0!==this.rotation&&(n.rotation=this.rotation),1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.skinning&&(n.skinning=!0),!1===this.visible&&(n.visible=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),r){var i=t(e.textures),a=t(e.images);i.length>0&&(n.textures=i),a.length>0&&(n.images=a)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.lights=e.lights,this.blending=e.blending,this.side=e.side,this.flatShading=e.flatShading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.overdraw=e.overdraw,this.visible=e.visible,this.userData=JSON.parse(JSON.stringify(e.userData)),this.clipShadows=e.clipShadows,this.clipIntersection=e.clipIntersection;var t=e.clippingPlanes,r=null;if(null!==t){var n=t.length;r=new Array(n);for(var i=0;i!==n;++i)r[i]=t[i].clone()}return this.clippingPlanes=r,this.shadowSide=e.shadowSide,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),MeshDepthMaterial.prototype=Object.create(Material.prototype),MeshDepthMaterial.prototype.constructor=MeshDepthMaterial,MeshDepthMaterial.prototype.isMeshDepthMaterial=!0,MeshDepthMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},Scene.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Scene,copy:function(e,t){return Object3D.prototype.copy.call(this,e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this},toJSON:function(e){var t=Object3D.prototype.toJSON.call(this,e);return null!==this.background&&(t.object.background=this.background.toJSON(e)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}),OrthographicCamera.prototype=Object.assign(Object.create(Camera.prototype),{constructor:OrthographicCamera,isOrthographicCamera:!0,copy:function(e,t){return Camera.prototype.copy.call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this},setViewOffset:function(e,t,r,n,i,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=n,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,n=(this.top+this.bottom)/2,i=r-e,a=r+e,o=n+t,s=n-t;if(null!==this.view&&this.view.enabled){var c=this.zoom/(this.view.width/this.view.fullWidth),l=this.zoom/(this.view.height/this.view.fullHeight),u=(this.right-this.left)/this.view.width,h=(this.top-this.bottom)/this.view.height;a=(i+=u*(this.view.offsetX/c))+u*(this.view.width/c),s=(o-=h*(this.view.offsetY/l))-h*(this.view.height/l)}this.projectionMatrix.makeOrthographic(i,a,o,s,this.near,this.far)},toJSON:function(e){var t=Object3D.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}});var textureId=0;Texture.DEFAULT_IMAGE=void 0,Texture.DEFAULT_MAPPING=UVMapping,Texture.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Texture,isTexture:!0,clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){var t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];var r={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY};if(void 0!==this.image){var n=this.image;void 0===n.uuid&&(n.uuid=_Math.generateUUID()),t||void 0!==e.images[n.uuid]||(e.images[n.uuid]={uuid:n.uuid,url:function(e){var t;if(e instanceof HTMLCanvasElement)t=e;else{(t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")).width=e.width,t.height=e.height;var r=t.getContext("2d");e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height)}return t.width>2048||t.height>2048?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}(n)}),r.image=n.uuid}return t||(e.textures[this.uuid]=r),r},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(this.mapping===UVMapping){if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case RepeatWrapping:e.x=e.x-Math.floor(e.x);break;case ClampToEdgeWrapping:e.x=e.x<0?0:1;break;case MirroredRepeatWrapping:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case RepeatWrapping:e.y=e.y-Math.floor(e.y);break;case ClampToEdgeWrapping:e.y=e.y<0?0:1;break;case MirroredRepeatWrapping:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}this.flipY&&(e.y=1-e.y)}}}),Object.defineProperty(Texture.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),WebGLRenderTarget.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:WebGLRenderTarget,isWebGLRenderTarget:!0,setSize:function(e,t){this.width===e&&this.height===t||(this.width=e,this.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});var UniformsUtils={merge:function(e){for(var t=this,r={},n=0;n<e.length;n++){var i=t.clone(e[n]);for(var a in i)r[a]=i[a]}return r},clone:function(e){var t={};for(var r in e){t[r]={};for(var n in e[r]){var i=e[r][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture)?t[r][n]=i.clone():Array.isArray(i)?t[r][n]=i.slice():t[r][n]=i}}return t}};ShaderMaterial.prototype=Object.create(Material.prototype),ShaderMaterial.prototype.constructor=ShaderMaterial,ShaderMaterial.prototype.isShaderMaterial=!0,ShaderMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=UniformsUtils.clone(e.uniforms),this.defines=e.defines,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=e.extensions,this},ShaderMaterial.prototype.toJSON=function(e){var t=Material.prototype.toJSON.call(this,e);return t.uniforms=this.uniforms,t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t},Object.assign(Ray.prototype,{set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return void 0===t&&(console.warn("Ray: .at() target is now required"),t=new Vector3),t.copy(this.direction).multiplyScalar(e).add(this.origin)},lookAt:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this},recast:function(){var e=new Vector3;return function(t){return this.origin.copy(this.at(t,e)),this}}(),closestPointToPoint:function(e,t){void 0===t&&(console.warn("Ray: .closestPointToPoint() target is now required"),t=new Vector3),t.subVectors(e,this.origin);var r=t.dot(this.direction);return r<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(e){return Math.sqrt(this.distanceSqToPoint(e))},distanceSqToPoint:function(){var e=new Vector3;return function(t){var r=e.subVectors(t,this.origin).dot(this.direction);return r<0?this.origin.distanceToSquared(t):(e.copy(this.direction).multiplyScalar(r).add(this.origin),e.distanceToSquared(t))}}(),distanceSqToSegment:function(){var e=new Vector3,t=new Vector3,r=new Vector3;return function(n,i,a,o){e.copy(n).add(i).multiplyScalar(.5),t.copy(i).sub(n).normalize(),r.copy(this.origin).sub(e);var s,c,l,u,h=.5*n.distanceTo(i),p=-this.direction.dot(t),d=r.dot(this.direction),f=-r.dot(t),m=r.lengthSq(),v=Math.abs(1-p*p);if(v>0)if(s=p*f-d,c=p*d-f,u=h*v,s>=0)if(c>=-u)if(c<=u){var g=1/v;l=(s*=g)*(s+p*(c*=g)+2*d)+c*(p*s+c+2*f)+m}else c=h,l=-(s=Math.max(0,-(p*c+d)))*s+c*(c+2*f)+m;else c=-h,l=-(s=Math.max(0,-(p*c+d)))*s+c*(c+2*f)+m;else c<=-u?l=-(s=Math.max(0,-(-p*h+d)))*s+(c=s>0?-h:Math.min(Math.max(-h,-f),h))*(c+2*f)+m:c<=u?(s=0,l=(c=Math.min(Math.max(-h,-f),h))*(c+2*f)+m):l=-(s=Math.max(0,-(p*h+d)))*s+(c=s>0?h:Math.min(Math.max(-h,-f),h))*(c+2*f)+m;else c=p>0?-h:h,l=-(s=Math.max(0,-(p*c+d)))*s+c*(c+2*f)+m;return a&&a.copy(this.direction).multiplyScalar(s).add(this.origin),o&&o.copy(t).multiplyScalar(c).add(e),l}}(),intersectSphere:function(){var e=new Vector3;return function(t,r){e.subVectors(t.center,this.origin);var n=e.dot(this.direction),i=e.dot(e)-n*n,a=t.radius*t.radius;if(i>a)return null;var o=Math.sqrt(a-i),s=n-o,c=n+o;return s<0&&c<0?null:s<0?this.at(c,r):this.at(s,r)}}(),intersectsSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;var r=-(this.origin.dot(e.normal)+e.constant)/t;return r>=0?r:null},intersectPlane:function(e,t){var r=this.distanceToPlane(e);return null===r?null:this.at(r,t)},intersectsPlane:function(e){var t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0},intersectBox:function(e,t){var r,n,i,a,o,s,c=1/this.direction.x,l=1/this.direction.y,u=1/this.direction.z,h=this.origin;return c>=0?(r=(e.min.x-h.x)*c,n=(e.max.x-h.x)*c):(r=(e.max.x-h.x)*c,n=(e.min.x-h.x)*c),l>=0?(i=(e.min.y-h.y)*l,a=(e.max.y-h.y)*l):(i=(e.max.y-h.y)*l,a=(e.min.y-h.y)*l),r>a||i>n?null:((i>r||r!==r)&&(r=i),(a<n||n!==n)&&(n=a),u>=0?(o=(e.min.z-h.z)*u,s=(e.max.z-h.z)*u):(o=(e.max.z-h.z)*u,s=(e.min.z-h.z)*u),r>s||o>n?null:((o>r||r!==r)&&(r=o),(s<n||n!==n)&&(n=s),n<0?null:this.at(r>=0?r:n,t)))},intersectsBox:function(){var e=new Vector3;return function(t){return null!==this.intersectBox(t,e)}}(),intersectTriangle:function(){var e=new Vector3,t=new Vector3,r=new Vector3,n=new Vector3;return function(i,a,o,s,c){t.subVectors(a,i),r.subVectors(o,i),n.crossVectors(t,r);var l,u=this.direction.dot(n);if(u>0){if(s)return null;l=1}else{if(!(u<0))return null;l=-1,u=-u}e.subVectors(this.origin,i);var h=l*this.direction.dot(r.crossVectors(e,r));if(h<0)return null;var p=l*this.direction.dot(t.cross(e));if(p<0)return null;if(h+p>u)return null;var d=-l*e.dot(n);return d<0?null:this.at(d/u,c)}}(),applyMatrix4:function(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}}),Object.assign(Line3.prototype,{set:function(e,t){return this.start.copy(e),this.end.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},getCenter:function(e){return void 0===e&&(console.warn("Line3: .getCenter() target is now required"),e=new Vector3),e.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return void 0===e&&(console.warn("Line3: .delta() target is now required"),e=new Vector3),e.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){return void 0===t&&(console.warn("Line3: .at() target is now required"),t=new Vector3),this.delta(t).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new Vector3,t=new Vector3;return function(r,n){e.subVectors(r,this.start),t.subVectors(this.end,this.start);var i=t.dot(t),a=t.dot(e)/i;return n&&(a=_Math.clamp(a,0,1)),a}}(),closestPointToPoint:function(e,t,r){var n=this.closestPointToPointParameter(e,t);return void 0===r&&(console.warn("Line3: .closestPointToPoint() target is now required"),r=new Vector3),this.delta(r).multiplyScalar(n).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}}),Object.assign(Plane.prototype,{set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,r,n){return this.normal.set(e,t,r),this.constant=n,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var e=new Vector3,t=new Vector3;return function(r,n,i){var a=e.subVectors(i,n).cross(t.subVectors(r,n)).normalize();return this.setFromNormalAndCoplanarPoint(a,r),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return void 0===t&&(console.warn("Plane: .projectPoint() target is now required"),t=new Vector3),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)},intersectLine:function(){var e=new Vector3;return function(t,r){void 0===r&&(console.warn("Plane: .intersectLine() target is now required"),r=new Vector3);var n=t.delta(e),i=this.normal.dot(n);if(0!==i){var a=-(t.start.dot(this.normal)+this.constant)/i;if(!(a<0||a>1))return r.copy(n).multiplyScalar(a).add(t.start)}else if(0===this.distanceToPoint(t.start))return r.copy(t.start)}}(),intersectsLine:function(e){var t=this.distanceToPoint(e.start),r=this.distanceToPoint(e.end);return t<0&&r>0||r<0&&t>0},intersectsBox:function(e){return e.intersectsPlane(this)},intersectsSphere:function(e){return e.intersectsPlane(this)},coplanarPoint:function(e){return void 0===e&&(console.warn("Plane: .coplanarPoint() target is now required"),e=new Vector3),e.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new Vector3,t=new Matrix3;return function(r,n){var i=n||t.getNormalMatrix(r),a=this.coplanarPoint(e).applyMatrix4(r),o=this.normal.applyMatrix3(i).normalize();return this.constant=-a.dot(o),this}}(),translate:function(e){return this.constant-=e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}}),Object.assign(Triangle,{getNormal:function(){var e=new Vector3;return function(t,r,n,i){void 0===i&&(console.warn("Triangle: .getNormal() target is now required"),i=new Vector3),i.subVectors(n,r),e.subVectors(t,r),i.cross(e);var a=i.lengthSq();return a>0?i.multiplyScalar(1/Math.sqrt(a)):i.set(0,0,0)}}(),getBarycoord:function(){var e=new Vector3,t=new Vector3,r=new Vector3;return function(n,i,a,o,s){e.subVectors(o,i),t.subVectors(a,i),r.subVectors(n,i);var c=e.dot(e),l=e.dot(t),u=e.dot(r),h=t.dot(t),p=t.dot(r),d=c*h-l*l;if(void 0===s&&(console.warn("Triangle: .getBarycoord() target is now required"),s=new Vector3),0===d)return s.set(-2,-1,-1);var f=1/d,m=(h*u-l*p)*f,v=(c*p-l*u)*f;return s.set(1-m-v,v,m)}}(),containsPoint:function(){var e=new Vector3;return function(t,r,n,i){return Triangle.getBarycoord(t,r,n,i,e),e.x>=0&&e.y>=0&&e.x+e.y<=1}}()}),Object.assign(Triangle.prototype,{set:function(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this},setFromPointsAndIndices:function(e,t,r,n){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[n]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},getArea:function(){var e=new Vector3,t=new Vector3;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),.5*e.cross(t).length()}}(),getMidpoint:function(e){return void 0===e&&(console.warn("Triangle: .getMidpoint() target is now required"),e=new Vector3),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(e){return Triangle.getNormal(this.a,this.b,this.c,e)},getPlane:function(e){return void 0===e&&(console.warn("Triangle: .getPlane() target is now required"),e=new Vector3),e.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function(e,t){return Triangle.getBarycoord(e,this.a,this.b,this.c,t)},containsPoint:function(e){return Triangle.containsPoint(e,this.a,this.b,this.c)},intersectsBox:function(e){return e.intersectsTriangle(this)},closestPointToPoint:function(){var e=new Plane,t=[new Line3,new Line3,new Line3],r=new Vector3,n=new Vector3;return function(i,a){void 0===a&&(console.warn("Triangle: .closestPointToPoint() target is now required"),a=new Vector3);var o=1/0;if(e.setFromCoplanarPoints(this.a,this.b,this.c),e.projectPoint(i,r),!0===this.containsPoint(r))a.copy(r);else{t[0].set(this.a,this.b),t[1].set(this.b,this.c),t[2].set(this.c,this.a);for(var s=0;s<t.length;s++){t[s].closestPointToPoint(r,!0,n);var c=r.distanceToSquared(n);c<o&&(o=c,a.copy(n))}}return a}}(),equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}),Object.assign(Face3.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(e){var t=this;this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(var r=0,n=e.vertexNormals.length;r<n;r++)t.vertexNormals[r]=e.vertexNormals[r].clone();for(var r=0,n=e.vertexColors.length;r<n;r++)t.vertexColors[r]=e.vertexColors[r].clone();return this}}),MeshBasicMaterial.prototype=Object.create(Material.prototype),MeshBasicMaterial.prototype.constructor=MeshBasicMaterial,MeshBasicMaterial.prototype.isMeshBasicMaterial=!0,MeshBasicMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this},Mesh.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Mesh,isMesh:!0,setDrawMode:function(e){this.drawMode=e},copy:function(e){return Object3D.prototype.copy.call(this,e),this.drawMode=e.drawMode,void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this},updateMorphTargets:function(){var e,t,r,n=this,i=this.geometry;if(i.isBufferGeometry){var a=i.morphAttributes,o=Object.keys(a);if(o.length>0){var s=a[o[0]];if(void 0!==s)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},e=0,t=s.length;e<t;e++)r=s[e].name||String(e),n.morphTargetInfluences.push(0),n.morphTargetDictionary[r]=e}}else{var c=i.morphTargets;if(void 0!==c&&c.length>0)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},e=0,t=c.length;e<t;e++)r=c[e].name||String(e),n.morphTargetInfluences.push(0),n.morphTargetDictionary[r]=e}},raycast:function(){function e(e,t,r,n,i,a,o){return Triangle.getBarycoord(e,t,r,n,m),i.multiplyScalar(m.x),a.multiplyScalar(m.y),o.multiplyScalar(m.z),i.add(a).add(o),i.clone()}function t(e,t,r,n,i,a,o,s){if(null===(t.side===BackSide?n.intersectTriangle(o,a,i,!0,s):n.intersectTriangle(i,a,o,t.side!==DoubleSide,s)))return null;g.copy(s),g.applyMatrix4(e.matrixWorld);var c=r.ray.origin.distanceTo(g);return c<r.near||c>r.far?null:{distance:c,point:g.clone(),object:e}}function r(r,n,i,a,l,u,h,m){o.fromBufferAttribute(a,u),s.fromBufferAttribute(a,h),c.fromBufferAttribute(a,m);var g=t(r,r.material,n,i,o,s,c,v);if(g){l&&(p.fromBufferAttribute(l,u),d.fromBufferAttribute(l,h),f.fromBufferAttribute(l,m),g.uv=e(v,o,s,c,p,d,f));var y=new Face3(u,h,m);Triangle.getNormal(o,s,c,y.normal),g.face=y,g.faceIndex=u}return g}var n=new Matrix4,i=new Ray,a=new Sphere,o=new Vector3,s=new Vector3,c=new Vector3,l=new Vector3,u=new Vector3,h=new Vector3,p=new Vector2,d=new Vector2,f=new Vector2,m=new Vector3,v=new Vector3,g=new Vector3;return function(m,g){var y=this,x=this.geometry,b=this.material,_=this.matrixWorld;if(void 0!==b&&(null===x.boundingSphere&&x.computeBoundingSphere(),a.copy(x.boundingSphere),a.applyMatrix4(_),!1!==m.ray.intersectsSphere(a)&&(n.getInverse(_),i.copy(m.ray).applyMatrix4(n),null===x.boundingBox||!1!==i.intersectsBox(x.boundingBox)))){var M;if(x.isBufferGeometry){var w,S,L,T,C,A=x.index,E=x.attributes.position,P=x.attributes.uv;if(null!==A)for(T=0,C=A.count;T<C;T+=3)w=A.getX(T),S=A.getX(T+1),L=A.getX(T+2),(M=r(y,m,i,E,P,w,S,L))&&(M.faceIndex=Math.floor(T/3),g.push(M));else if(void 0!==E)for(T=0,C=E.count;T<C;T+=3)(M=r(y,m,i,E,P,w=T,S=T+1,L=T+2))&&(M.index=w,g.push(M))}else if(x.isGeometry){var B,D,R,U,N=Array.isArray(b),G=x.vertices,O=x.faces,I=x.faceVertexUvs[0];I.length>0&&(U=I);for(var V=0,F=O.length;V<F;V++){var z=O[V],k=N?b[z.materialIndex]:b;if(void 0!==k){if(B=G[z.a],D=G[z.b],R=G[z.c],!0===k.morphTargets){var j=x.morphTargets,W=y.morphTargetInfluences;o.set(0,0,0),s.set(0,0,0),c.set(0,0,0);for(var H=0,X=j.length;H<X;H++){var q=W[H];if(0!==q){var Y=j[H].vertices;o.addScaledVector(l.subVectors(Y[z.a],B),q),s.addScaledVector(u.subVectors(Y[z.b],D),q),c.addScaledVector(h.subVectors(Y[z.c],R),q)}}o.add(B),s.add(D),c.add(R),B=o,D=s,R=c}if(M=t(y,k,m,i,B,D,R,v)){if(U&&U[V]){var Z=U[V];p.copy(Z[0]),d.copy(Z[1]),f.copy(Z[2]),M.uv=e(v,B,D,R,p,d,f)}M.face=z,M.faceIndex=V,g.push(M)}}}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var geometryId=0;Geometry.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Geometry,isGeometry:!0,applyMatrix:function(e){for(var t=this,r=(new Matrix3).getNormalMatrix(e),n=0,i=this.vertices.length;n<i;n++)t.vertices[n].applyMatrix4(e);for(var n=0,i=this.faces.length;n<i;n++){var a=t.faces[n];a.normal.applyMatrix3(r).normalize();for(var o=0,s=a.vertexNormals.length;o<s;o++)a.vertexNormals[o].applyMatrix3(r).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(){var e=new Matrix4;return function(t){return e.makeRotationX(t),this.applyMatrix(e),this}}(),rotateY:function(){var e=new Matrix4;return function(t){return e.makeRotationY(t),this.applyMatrix(e),this}}(),rotateZ:function(){var e=new Matrix4;return function(t){return e.makeRotationZ(t),this.applyMatrix(e),this}}(),translate:function(){var e=new Matrix4;return function(t,r,n){return e.makeTranslation(t,r,n),this.applyMatrix(e),this}}(),scale:function(){var e=new Matrix4;return function(t,r,n){return e.makeScale(t,r,n),this.applyMatrix(e),this}}(),lookAt:function(){var e=new Object3D;return function(t){e.lookAt(t),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),fromBufferGeometry:function(e){function t(e,t,n,i){var a=new Face3(e,t,n,void 0!==o?[u[e].clone(),u[t].clone(),u[n].clone()]:[],void 0!==s?[r.colors[e].clone(),r.colors[t].clone(),r.colors[n].clone()]:[],i);r.faces.push(a),void 0!==c&&r.faceVertexUvs[0].push([h[e].clone(),h[t].clone(),h[n].clone()]),void 0!==l&&r.faceVertexUvs[1].push([p[e].clone(),p[t].clone(),p[n].clone()])}var r=this,n=null!==e.index?e.index.array:void 0,i=e.attributes,a=i.position.array,o=void 0!==i.normal?i.normal.array:void 0,s=void 0!==i.color?i.color.array:void 0,c=void 0!==i.uv?i.uv.array:void 0,l=void 0!==i.uv2?i.uv2.array:void 0;void 0!==l&&(this.faceVertexUvs[1]=[]);for(var u=[],h=[],p=[],d=0,f=0;d<a.length;d+=3,f+=2)r.vertices.push(new Vector3(a[d],a[d+1],a[d+2])),void 0!==o&&u.push(new Vector3(o[d],o[d+1],o[d+2])),void 0!==s&&r.colors.push(new Color(s[d],s[d+1],s[d+2])),void 0!==c&&h.push(new Vector2(c[f],c[f+1])),void 0!==l&&p.push(new Vector2(l[f],l[f+1]));var m=e.groups;if(m.length>0)for(d=0;d<m.length;d++)for(var v=m[d],g=v.start,f=g,y=g+v.count;f<y;f+=3)void 0!==n?t(n[f],n[f+1],n[f+2],v.materialIndex):t(f,f+1,f+2,v.materialIndex);else if(void 0!==n)for(d=0;d<n.length;d+=3)t(n[d],n[d+1],n[d+2]);else for(d=0;d<a.length/3;d+=3)t(d,d+1,d+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){var e=new Vector3;return function(){return this.computeBoundingBox(),this.boundingBox.getCenter(e).negate(),this.translate(e.x,e.y,e.z),this}}(),normalize:function(){this.computeBoundingSphere();var e=this.boundingSphere.center,t=this.boundingSphere.radius,r=0===t?1:1/t,n=new Matrix4;return n.set(r,0,0,-r*e.x,0,r,0,-r*e.y,0,0,r,-r*e.z,0,0,0,1),this.applyMatrix(n),this},computeFaceNormals:function(){for(var e=this,t=new Vector3,r=new Vector3,n=0,i=this.faces.length;n<i;n++){var a=e.faces[n],o=e.vertices[a.a],s=e.vertices[a.b],c=e.vertices[a.c];t.subVectors(c,s),r.subVectors(o,s),t.cross(r),t.normalize(),a.normal.copy(t)}},computeVertexNormals:function(e){var t=this;void 0===e&&(e=!0);var r,n,i,a,o,s;for(s=new Array(this.vertices.length),r=0,n=this.vertices.length;r<n;r++)s[r]=new Vector3;if(e){var c,l,u,h=new Vector3,p=new Vector3;for(i=0,a=this.faces.length;i<a;i++)o=t.faces[i],c=t.vertices[o.a],l=t.vertices[o.b],u=t.vertices[o.c],h.subVectors(u,l),p.subVectors(c,l),h.cross(p),s[o.a].add(h),s[o.b].add(h),s[o.c].add(h)}else for(this.computeFaceNormals(),i=0,a=this.faces.length;i<a;i++)s[(o=t.faces[i]).a].add(o.normal),s[o.b].add(o.normal),s[o.c].add(o.normal);for(r=0,n=this.vertices.length;r<n;r++)s[r].normalize();for(i=0,a=this.faces.length;i<a;i++){var d=(o=t.faces[i]).vertexNormals;3===d.length?(d[0].copy(s[o.a]),d[1].copy(s[o.b]),d[2].copy(s[o.c])):(d[0]=s[o.a].clone(),d[1]=s[o.b].clone(),d[2]=s[o.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var e,t,r,n=this;for(this.computeFaceNormals(),e=0,t=this.faces.length;e<t;e++){var i=(r=n.faces[e]).vertexNormals;3===i.length?(i[0].copy(r.normal),i[1].copy(r.normal),i[2].copy(r.normal)):(i[0]=r.normal.clone(),i[1]=r.normal.clone(),i[2]=r.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var e,t,r,n,i,a=this;for(r=0,n=this.faces.length;r<n;r++)for((i=a.faces[r]).__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]),e=0,t=i.vertexNormals.length;e<t;e++)i.__originalVertexNormals[e]?i.__originalVertexNormals[e].copy(i.vertexNormals[e]):i.__originalVertexNormals[e]=i.vertexNormals[e].clone();var o=new Geometry;for(o.faces=this.faces,e=0,t=this.morphTargets.length;e<t;e++){if(!a.morphNormals[e]){a.morphNormals[e]={},a.morphNormals[e].faceNormals=[],a.morphNormals[e].vertexNormals=[];var s=a.morphNormals[e].faceNormals,c=a.morphNormals[e].vertexNormals;for(r=0,n=this.faces.length;r<n;r++)u=new Vector3,h={a:new Vector3,b:new Vector3,c:new Vector3},s.push(u),c.push(h)}var l=a.morphNormals[e];o.vertices=a.morphTargets[e].vertices,o.computeFaceNormals(),o.computeVertexNormals();var u,h;for(r=0,n=this.faces.length;r<n;r++)i=a.faces[r],u=l.faceNormals[r],h=l.vertexNormals[r],u.copy(i.normal),h.a.copy(i.vertexNormals[0]),h.b.copy(i.vertexNormals[1]),h.c.copy(i.vertexNormals[2])}for(r=0,n=this.faces.length;r<n;r++)(i=a.faces[r]).normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,r){if(!e||!e.isGeometry)return void console.error("Geometry.merge(): geometry not an instance of Geometry.",e);var n,i=this.vertices.length,a=this.vertices,o=e.vertices,s=this.faces,c=e.faces,l=this.faceVertexUvs[0],u=e.faceVertexUvs[0],h=this.colors,p=e.colors;void 0===r&&(r=0),void 0!==t&&(n=(new Matrix3).getNormalMatrix(t));for(var d=0,f=o.length;d<f;d++){var m=o[d].clone();void 0!==t&&m.applyMatrix4(t),a.push(m)}for(var d=0,f=p.length;d<f;d++)h.push(p[d].clone());for(d=0,f=c.length;d<f;d++){var v,g,y,x=c[d],b=x.vertexNormals,_=x.vertexColors;(v=new Face3(x.a+i,x.b+i,x.c+i)).normal.copy(x.normal),void 0!==n&&v.normal.applyMatrix3(n).normalize();for(var M=0,w=b.length;M<w;M++)g=b[M].clone(),void 0!==n&&g.applyMatrix3(n).normalize(),v.vertexNormals.push(g);v.color.copy(x.color);for(var M=0,w=_.length;M<w;M++)y=_[M],v.vertexColors.push(y.clone());v.materialIndex=x.materialIndex+r,s.push(v)}for(d=0,f=u.length;d<f;d++){var S=u[d],L=[];if(void 0!==S){for(var M=0,w=S.length;M<w;M++)L.push(S[M].clone());l.push(L)}}},mergeMesh:function(e){if(!e||!e.isMesh)return void console.error("Geometry.mergeMesh(): mesh not an instance of Mesh.",e);e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)},mergeVertices:function(){var e,t,r,n,i,a,o,s,c=this,l={},u=[],h=[],p=Math.pow(10,4);for(r=0,n=this.vertices.length;r<n;r++)e=c.vertices[r],void 0===l[t=Math.round(e.x*p)+"_"+Math.round(e.y*p)+"_"+Math.round(e.z*p)]?(l[t]=r,u.push(c.vertices[r]),h[r]=u.length-1):h[r]=h[l[t]];var d=[];for(r=0,n=this.faces.length;r<n;r++){(i=c.faces[r]).a=h[i.a],i.b=h[i.b],i.c=h[i.c],a=[i.a,i.b,i.c];for(var f=0;f<3;f++)if(a[f]===a[(f+1)%3]){d.push(r);break}}for(r=d.length-1;r>=0;r--){var m=d[r];for(c.faces.splice(m,1),o=0,s=this.faceVertexUvs.length;o<s;o++)c.faceVertexUvs[o].splice(m,1)}var v=this.vertices.length-u.length;return this.vertices=u,v},setFromPoints:function(e){var t=this;this.vertices=[];for(var r=0,n=e.length;r<n;r++){var i=e[r];t.vertices.push(new Vector3(i.x,i.y,i.z||0))}return this},sortFacesByMaterialIndex:function(){function e(e,t){return e.materialIndex-t.materialIndex}for(var t=this.faces,r=t.length,n=0;n<r;n++)t[n]._id=n;t.sort(e);var i,a,o=this.faceVertexUvs[0],s=this.faceVertexUvs[1];o&&o.length===r&&(i=[]),s&&s.length===r&&(a=[]);for(n=0;n<r;n++){var c=t[n]._id;i&&i.push(o[c]),a&&a.push(s[c])}i&&(this.faceVertexUvs[0]=i),a&&(this.faceVertexUvs[1]=a)},toJSON:function(){function e(e,t,r){return r?e|1<<t:e&~(1<<t)}function t(e){var t=e.x.toString()+e.y.toString()+e.z.toString();return void 0!==d[t]?d[t]:(d[t]=p.length/3,p.push(e.x,e.y,e.z),d[t])}function r(e){var t=e.r.toString()+e.g.toString()+e.b.toString();return void 0!==m[t]?m[t]:(m[t]=f.length,f.push(e.getHex()),m[t])}function n(e){var t=e.x.toString()+e.y.toString();return void 0!==g[t]?g[t]:(g[t]=v.length/2,v.push(e.x,e.y),g[t])}var i=this,a={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),void 0!==this.parameters){var o=this.parameters;for(var s in o)void 0!==o[s]&&(a[s]=o[s]);return a}for(var c=[],l=0;l<this.vertices.length;l++){var u=i.vertices[l];c.push(u.x,u.y,u.z)}for(var h=[],p=[],d={},f=[],m={},v=[],g={},l=0;l<this.faces.length;l++){var y=i.faces[l],x=void 0!==i.faceVertexUvs[0][l],b=y.normal.length()>0,_=y.vertexNormals.length>0,M=1!==y.color.r||1!==y.color.g||1!==y.color.b,w=y.vertexColors.length>0,S=0;if(S=e(S,0,0),S=e(S,1,!0),S=e(S,2,!1),S=e(S,3,x),S=e(S,4,b),S=e(S,5,_),S=e(S,6,M),S=e(S,7,w),h.push(S),h.push(y.a,y.b,y.c),h.push(y.materialIndex),x){var L=i.faceVertexUvs[0][l];h.push(n(L[0]),n(L[1]),n(L[2]))}if(b&&h.push(t(y.normal)),_){var T=y.vertexNormals;h.push(t(T[0]),t(T[1]),t(T[2]))}if(M&&h.push(r(y.color)),w){var C=y.vertexColors;h.push(r(C[0]),r(C[1]),r(C[2]))}}return a.data={},a.data.vertices=c,a.data.normals=p,f.length>0&&(a.data.colors=f),v.length>0&&(a.data.uvs=[v]),a.data.faces=h,a},clone:function(){return(new Geometry).copy(this)},copy:function(e){var t,r,n,i,a,o,s=this;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;var c=e.vertices;for(t=0,r=c.length;t<r;t++)s.vertices.push(c[t].clone());var l=e.colors;for(t=0,r=l.length;t<r;t++)s.colors.push(l[t].clone());var u=e.faces;for(t=0,r=u.length;t<r;t++)s.faces.push(u[t].clone());for(t=0,r=e.faceVertexUvs.length;t<r;t++){var h=e.faceVertexUvs[t];for(void 0===s.faceVertexUvs[t]&&(s.faceVertexUvs[t]=[]),n=0,i=h.length;n<i;n++){var p=h[n],d=[];for(a=0,o=p.length;a<o;a++){var f=p[a];d.push(f.clone())}s.faceVertexUvs[t].push(d)}}var m=e.morphTargets;for(t=0,r=m.length;t<r;t++){var v={};if(v.name=m[t].name,void 0!==m[t].vertices)for(v.vertices=[],n=0,i=m[t].vertices.length;n<i;n++)v.vertices.push(m[t].vertices[n].clone());if(void 0!==m[t].normals)for(v.normals=[],n=0,i=m[t].normals.length;n<i;n++)v.normals.push(m[t].normals[n].clone());s.morphTargets.push(v)}var g=e.morphNormals;for(t=0,r=g.length;t<r;t++){var y={};if(void 0!==g[t].vertexNormals)for(y.vertexNormals=[],n=0,i=g[t].vertexNormals.length;n<i;n++){var x=g[t].vertexNormals[n],b={};b.a=x.a.clone(),b.b=x.b.clone(),b.c=x.c.clone(),y.vertexNormals.push(b)}if(void 0!==g[t].faceNormals)for(y.faceNormals=[],n=0,i=g[t].faceNormals.length;n<i;n++)y.faceNormals.push(g[t].faceNormals[n].clone());s.morphNormals.push(y)}var _=e.skinWeights;for(t=0,r=_.length;t<r;t++)s.skinWeights.push(_[t].clone());var M=e.skinIndices;for(t=0,r=M.length;t<r;t++)s.skinIndices.push(M[t].clone());var w=e.lineDistances;for(t=0,r=w.length;t<r;t++)s.lineDistances.push(w[t]);var S=e.boundingBox;null!==S&&(this.boundingBox=S.clone());var L=e.boundingSphere;return null!==L&&(this.boundingSphere=L.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),PlaneGeometry.prototype=Object.create(Geometry.prototype),PlaneGeometry.prototype.constructor=PlaneGeometry,PlaneBufferGeometry.prototype=Object.create(BufferGeometry.prototype),PlaneBufferGeometry.prototype.constructor=PlaneBufferGeometry;var BokehShader={defines:{DEPTH_PACKING:1,PERSPECTIVE_CAMERA:1},uniforms:{tColor:{value:null},tDepth:{value:null},focus:{value:1},aspect:{value:1},aperture:{value:.025},maxblur:{value:1},nearClip:{value:1},farClip:{value:1e3}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#include <common>","varying vec2 vUv;","uniform sampler2D tColor;","uniform sampler2D tDepth;","uniform float maxblur;","uniform float aperture;","uniform float nearClip;","uniform float farClip;","uniform float focus;","uniform float aspect;","#include <packing>","float getDepth( const in vec2 screenPosition ) {","\t#if DEPTH_PACKING == 1","\treturn unpackRGBAToDepth( texture2D( tDepth, screenPosition ) );","\t#else","\treturn texture2D( tDepth, screenPosition ).x;","\t#endif","}","float getViewZ( const in float depth ) {","\t#if PERSPECTIVE_CAMERA == 1","\treturn perspectiveDepthToViewZ( depth, nearClip, farClip );","\t#else","\treturn orthographicDepthToViewZ( depth, nearClip, farClip );","\t#endif","}","void main() {","vec2 aspectcorrect = vec2( 1.0, aspect );","float viewZ = getViewZ( getDepth( vUv ) );","float factor = ( focus + viewZ );","vec2 dofblur = vec2 ( clamp( factor * aperture, -maxblur, maxblur ) );","vec2 dofblur9 = dofblur * 0.9;","vec2 dofblur7 = dofblur * 0.7;","vec2 dofblur4 = dofblur * 0.4;","vec4 col = vec4( 0.0 );","col += texture2D( tColor, vUv.xy );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.4,   0.0  ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur4 );","gl_FragColor = col / 41.0;","gl_FragColor.a = 1.0;","}"].join("\n")},CinematicCamera=function(e,t,r,n){PerspectiveCamera.call(this,e,t,r,n),this.type="CinematicCamera",this.postprocessing={enabled:!0},this.shaderSettings={rings:3,samples:4},this.material_depth=new MeshDepthMaterial,this.setLens(),this.initPostProcessing()};CinematicCamera.prototype=Object.create(PerspectiveCamera.prototype),CinematicCamera.prototype.constructor=CinematicCamera,CinematicCamera.prototype.setLens=function(e,t,r,n){void 0===e&&(e=35),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e),void 0===r&&(r=8),void 0===n&&(n=.019),this.fNumber=r,this.coc=n,this.aperture=e/this.fNumber,this.hyperFocal=e*e/(this.aperture*this.coc)},CinematicCamera.prototype.linearize=function(e){var t=this.far,r=this.near;return-t*r/(e*(t-r)-t)},CinematicCamera.prototype.smoothstep=function(e,t,r){var n=this.saturate((r-e)/(t-e));return n*n*(3-2*n)},CinematicCamera.prototype.saturate=function(e){return Math.max(0,Math.min(1,e))},CinematicCamera.prototype.focusAt=function(e){void 0===e&&(e=20);var t=this.getFocalLength();this.focus=e,this.nearPoint=this.hyperFocal*this.focus/(this.hyperFocal+(this.focus-t)),this.farPoint=this.hyperFocal*this.focus/(this.hyperFocal-(this.focus-t)),this.depthOfField=this.farPoint-this.nearPoint,this.depthOfField<0&&(this.depthOfField=0),this.sdistance=this.smoothstep(this.near,this.far,this.focus),this.ldistance=this.linearize(1-this.sdistance),this.postprocessing.bokeh_uniforms.focalDepth.value=this.ldistance},CinematicCamera.prototype.initPostProcessing=function(){if(this.postprocessing.enabled){this.postprocessing.scene=new Scene,this.postprocessing.camera=new OrthographicCamera(window.innerWidth/-2,window.innerWidth/2,window.innerHeight/2,window.innerHeight/-2,-1e4,1e4),this.postprocessing.scene.add(this.postprocessing.camera);var e={minFilter:LinearFilter,magFilter:LinearFilter,format:RGBFormat};this.postprocessing.rtTextureDepth=new WebGLRenderTarget(window.innerWidth,window.innerHeight,e),this.postprocessing.rtTextureColor=new WebGLRenderTarget(window.innerWidth,window.innerHeight,e);var t=BokehShader;this.postprocessing.bokeh_uniforms=UniformsUtils.clone(t.uniforms),this.postprocessing.bokeh_uniforms.tColor.value=this.postprocessing.rtTextureColor.texture,this.postprocessing.bokeh_uniforms.tDepth.value=this.postprocessing.rtTextureDepth.texture,this.postprocessing.bokeh_uniforms.manualdof.value=0,this.postprocessing.bokeh_uniforms.shaderFocus.value=0,this.postprocessing.bokeh_uniforms.fstop.value=2.8,this.postprocessing.bokeh_uniforms.showFocus.value=1,this.postprocessing.bokeh_uniforms.focalDepth.value=.1,this.postprocessing.bokeh_uniforms.znear.value=this.near,this.postprocessing.bokeh_uniforms.zfar.value=this.near,this.postprocessing.bokeh_uniforms.textureWidth.value=window.innerWidth,this.postprocessing.bokeh_uniforms.textureHeight.value=window.innerHeight,this.postprocessing.materialBokeh=new ShaderMaterial({uniforms:this.postprocessing.bokeh_uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader,defines:{RINGS:this.shaderSettings.rings,SAMPLES:this.shaderSettings.samples}}),this.postprocessing.quad=new Mesh(new PlaneBufferGeometry(window.innerWidth,window.innerHeight),this.postprocessing.materialBokeh),this.postprocessing.quad.position.z=-500,this.postprocessing.scene.add(this.postprocessing.quad)}},CinematicCamera.prototype.renderCinematic=function(e,t){this.postprocessing.enabled&&(t.clear(),e.overrideMaterial=null,t.render(e,camera,this.postprocessing.rtTextureColor,!0),e.overrideMaterial=this.material_depth,t.render(e,camera,this.postprocessing.rtTextureDepth,!0),t.render(this.postprocessing.scene,this.postprocessing.camera))},Object.assign(Spherical.prototype,{set:function(e,t,r){return this.radius=e,this.phi=t,this.theta=r,this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this},makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(e){return this.radius=e.length(),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e.x,e.z),this.phi=Math.acos(_Math.clamp(e.y/this.radius,-1,1))),this}});var OrbitControls=function(e,t){function r(){return 2*Math.PI/60/60*B.autoRotateSpeed}function n(){return Math.pow(.95,B.zoomSpeed)}function i(e){V.theta-=e}function a(e){V.phi-=e}function o(e){B.object.isPerspectiveCamera?F/=e:B.object.isOrthographicCamera?(B.object.zoom=Math.max(B.minZoom,Math.min(B.maxZoom,B.object.zoom*e)),B.object.updateProjectionMatrix(),k=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),B.enableZoom=!1)}function s(e){B.object.isPerspectiveCamera?F*=e:B.object.isOrthographicCamera?(B.object.zoom=Math.max(B.minZoom,Math.min(B.maxZoom,B.object.zoom/e)),B.object.updateProjectionMatrix(),k=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),B.enableZoom=!1)}function c(e){j.set(e.clientX,e.clientY)}function l(e){Z.set(e.clientX,e.clientY)}function u(e){X.set(e.clientX,e.clientY)}function h(e){W.set(e.clientX,e.clientY),H.subVectors(W,j).multiplyScalar(B.rotateSpeed);var t=B.domElement===document?B.domElement.body:B.domElement;i(2*Math.PI*H.x/t.clientWidth),a(2*Math.PI*H.y/t.clientHeight),j.copy(W),B.update()}function p(e){J.set(e.clientX,e.clientY),K.subVectors(J,Z),K.y>0?o(n()):K.y<0&&s(n()),Z.copy(J),B.update()}function d(e){q.set(e.clientX,e.clientY),Y.subVectors(q,X).multiplyScalar(B.panSpeed),ee(Y.x,Y.y),X.copy(q),B.update()}function f(e){e.deltaY<0?s(n()):e.deltaY>0&&o(n()),B.update()}function m(e){switch(e.keyCode){case B.keys.UP:ee(0,B.keyPanSpeed),B.update();break;case B.keys.BOTTOM:ee(0,-B.keyPanSpeed),B.update();break;case B.keys.LEFT:ee(B.keyPanSpeed,0),B.update();break;case B.keys.RIGHT:ee(-B.keyPanSpeed,0),B.update()}}function v(e){j.set(e.touches[0].pageX,e.touches[0].pageY)}function g(e){var t=e.touches[0].pageX-e.touches[1].pageX,r=e.touches[0].pageY-e.touches[1].pageY,n=Math.sqrt(t*t+r*r);Z.set(0,n)}function y(e){X.set(e.touches[0].pageX,e.touches[0].pageY)}function x(e){W.set(e.touches[0].pageX,e.touches[0].pageY),H.subVectors(W,j).multiplyScalar(B.rotateSpeed);var t=B.domElement===document?B.domElement.body:B.domElement;i(2*Math.PI*H.x/t.clientWidth),a(2*Math.PI*H.y/t.clientHeight),j.copy(W),B.update()}function b(e){var t=e.touches[0].pageX-e.touches[1].pageX,r=e.touches[0].pageY-e.touches[1].pageY,i=Math.sqrt(t*t+r*r);J.set(0,i),K.subVectors(J,Z),K.y>0?s(n()):K.y<0&&o(n()),Z.copy(J),B.update()}function _(e){q.set(e.touches[0].pageX,e.touches[0].pageY),Y.subVectors(q,X).multiplyScalar(B.panSpeed),ee(Y.x,Y.y),X.copy(q),B.update()}function M(e){if(!1!==B.enabled){switch(e.preventDefault(),e.button){case B.mouseButtons.ORBIT:if(!1===B.enableRotate)return;c(e),G=N.ROTATE;break;case B.mouseButtons.ZOOM:if(!1===B.enableZoom)return;l(e),G=N.DOLLY;break;case B.mouseButtons.PAN:if(!1===B.enablePan)return;u(e),G=N.PAN}G!==N.NONE&&(document.addEventListener("mousemove",w,!1),document.addEventListener("mouseup",S,!1),B.dispatchEvent(R))}}function w(e){if(!1!==B.enabled)switch(e.preventDefault(),G){case N.ROTATE:if(!1===B.enableRotate)return;h(e);break;case N.DOLLY:if(!1===B.enableZoom)return;p(e);break;case N.PAN:if(!1===B.enablePan)return;d(e)}}function S(e){!1!==B.enabled&&(document.removeEventListener("mousemove",w,!1),document.removeEventListener("mouseup",S,!1),B.dispatchEvent(U),G=N.NONE)}function L(e){!1===B.enabled||!1===B.enableZoom||G!==N.NONE&&G!==N.ROTATE||(e.preventDefault(),e.stopPropagation(),B.dispatchEvent(R),f(e),B.dispatchEvent(U))}function T(e){!1!==B.enabled&&!1!==B.enableKeys&&!1!==B.enablePan&&m(e)}function C(e){if(!1!==B.enabled){switch(e.touches.length){case 1:if(!1===B.enableRotate)return;v(e),G=N.TOUCH_ROTATE;break;case 2:if(!1===B.enableZoom)return;g(e),G=N.TOUCH_DOLLY;break;case 3:if(!1===B.enablePan)return;y(e),G=N.TOUCH_PAN;break;default:G=N.NONE}G!==N.NONE&&B.dispatchEvent(R)}}function A(e){if(!1!==B.enabled)switch(e.preventDefault(),e.stopPropagation(),e.touches.length){case 1:if(!1===B.enableRotate)return;if(G!==N.TOUCH_ROTATE)return;x(e);break;case 2:if(!1===B.enableZoom)return;if(G!==N.TOUCH_DOLLY)return;b(e);break;case 3:if(!1===B.enablePan)return;if(G!==N.TOUCH_PAN)return;_(e);break;default:G=N.NONE}}function E(e){!1!==B.enabled&&(B.dispatchEvent(U),G=N.NONE)}function P(e){!1!==B.enabled&&e.preventDefault()}this.object=e,this.domElement=void 0!==t?t:document,this.enabled=!0,this.target=new Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.25,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.panningMode=ScreenSpacePanning,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={ORBIT:MOUSE.LEFT,ZOOM:MOUSE.MIDDLE,PAN:MOUSE.RIGHT},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return I.phi},this.getAzimuthalAngle=function(){return I.theta},this.saveState=function(){B.target0.copy(B.target),B.position0.copy(B.object.position),B.zoom0=B.object.zoom},this.reset=function(){B.target.copy(B.target0),B.object.position.copy(B.position0),B.object.zoom=B.zoom0,B.object.updateProjectionMatrix(),B.dispatchEvent(D),B.update(),G=N.NONE},this.update=function(){var t=new Vector3,n=(new Quaternion).setFromUnitVectors(e.up,new Vector3(0,1,0)),a=n.clone().inverse(),o=new Vector3,s=new Quaternion;return function(){var e=B.object.position;return t.copy(e).sub(B.target),t.applyQuaternion(n),I.setFromVector3(t),B.autoRotate&&G===N.NONE&&i(r()),I.theta+=V.theta,I.phi+=V.phi,I.theta=Math.max(B.minAzimuthAngle,Math.min(B.maxAzimuthAngle,I.theta)),I.phi=Math.max(B.minPolarAngle,Math.min(B.maxPolarAngle,I.phi)),I.makeSafe(),I.radius*=F,I.radius=Math.max(B.minDistance,Math.min(B.maxDistance,I.radius)),B.target.add(z),t.setFromSpherical(I),t.applyQuaternion(a),e.copy(B.target).add(t),B.object.lookAt(B.target),!0===B.enableDamping?(V.theta*=1-B.dampingFactor,V.phi*=1-B.dampingFactor,z.multiplyScalar(1-B.dampingFactor)):(V.set(0,0,0),z.set(0,0,0)),F=1,!!(k||o.distanceToSquared(B.object.position)>O||8*(1-s.dot(B.object.quaternion))>O)&&(B.dispatchEvent(D),o.copy(B.object.position),s.copy(B.object.quaternion),k=!1,!0)}}(),this.dispose=function(){B.domElement.removeEventListener("contextmenu",P,!1),B.domElement.removeEventListener("mousedown",M,!1),B.domElement.removeEventListener("wheel",L,!1),B.domElement.removeEventListener("touchstart",C,!1),B.domElement.removeEventListener("touchend",E,!1),B.domElement.removeEventListener("touchmove",A,!1),document.removeEventListener("mousemove",w,!1),document.removeEventListener("mouseup",S,!1),window.removeEventListener("keydown",T,!1)};var B=this,D={type:"change"},R={type:"start"},U={type:"end"},N={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5},G=N.NONE,O=1e-6,I=new Spherical,V=new Spherical,F=1,z=new Vector3,k=!1,j=new Vector2,W=new Vector2,H=new Vector2,X=new Vector2,q=new Vector2,Y=new Vector2,Z=new Vector2,J=new Vector2,K=new Vector2,Q=function(){var e=new Vector3;return function(t,r){e.setFromMatrixColumn(r,0),e.multiplyScalar(-t),z.add(e)}}(),$=function(){var e=new Vector3;return function(t,r){switch(B.panningMode){case ScreenSpacePanning:e.setFromMatrixColumn(r,1);break;case HorizontalPanning:e.setFromMatrixColumn(r,0),e.crossVectors(B.object.up,e)}e.multiplyScalar(t),z.add(e)}}(),ee=function(){var e=new Vector3;return function(t,r){var n=B.domElement===document?B.domElement.body:B.domElement;if(B.object.isPerspectiveCamera){var i=B.object.position;e.copy(i).sub(B.target);var a=e.length();a*=Math.tan(B.object.fov/2*Math.PI/180),Q(2*t*a/n.clientHeight,B.object.matrix),$(2*r*a/n.clientHeight,B.object.matrix)}else B.object.isOrthographicCamera?(Q(t*(B.object.right-B.object.left)/B.object.zoom/n.clientWidth,B.object.matrix),$(r*(B.object.top-B.object.bottom)/B.object.zoom/n.clientHeight,B.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),B.enablePan=!1)}}();B.domElement.addEventListener("contextmenu",P,!1),B.domElement.addEventListener("mousedown",M,!1),B.domElement.addEventListener("wheel",L,!1),B.domElement.addEventListener("touchstart",C,!1),B.domElement.addEventListener("touchend",E,!1),B.domElement.addEventListener("touchmove",A,!1),window.addEventListener("keydown",T,!1),this.update()};OrbitControls.prototype=Object.create(EventDispatcher.prototype),OrbitControls.prototype.constructor=OrbitControls,Object.defineProperties(OrbitControls.prototype,{center:{get:function(){return console.warn("OrbitControls: .center has been renamed to .target"),this.target}},noZoom:{get:function(){return console.warn("OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),!this.enableZoom},set:function(e){console.warn("OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),this.enableZoom=!e}},noRotate:{get:function(){return console.warn("OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),!this.enableRotate},set:function(e){console.warn("OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),this.enableRotate=!e}},noPan:{get:function(){return console.warn("OrbitControls: .noPan has been deprecated. Use .enablePan instead."),!this.enablePan},set:function(e){console.warn("OrbitControls: .noPan has been deprecated. Use .enablePan instead."),this.enablePan=!e}},noKeys:{get:function(){return console.warn("OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),!this.enableKeys},set:function(e){console.warn("OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),this.enableKeys=!e}},staticMoving:{get:function(){return console.warn("OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),!this.enableDamping},set:function(e){console.warn("OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),this.enableDamping=!e}},dynamicDampingFactor:{get:function(){return console.warn("OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor},set:function(e){console.warn("OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor=e}}});var ScreenSpacePanning=0,HorizontalPanning=1,Detector={canvas:!!window.CanvasRenderingContext2D,webgl:function(){try{var e=document.createElement("canvas");return!(!window.WebGLRenderingContext||!e.getContext("webgl")&&!e.getContext("experimental-webgl"))}catch(e){return!1}}(),workers:!!window.Worker,fileapi:window.File&&window.FileReader&&window.FileList&&window.Blob,getWebGLErrorMessage:function(){var e=document.createElement("div");return e.id="webgl-error-message",e.style.fontFamily="monospace",e.style.fontSize="13px",e.style.fontWeight="normal",e.style.textAlign="center",e.style.background="#fff",e.style.color="#000",e.style.padding="1.5em",e.style.width="400px",e.style.margin="5em auto 0",this.webgl||(e.innerHTML=window.WebGLRenderingContext?['Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br />','Find out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'].join("\n"):['Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br/>','Find out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'].join("\n")),e},addGetWebGLMessage:function(e){var t,r,n;t=void 0!==(e=e||{}).parent?e.parent:document.body,r=void 0!==e.id?e.id:"oldie",(n=Detector.getWebGLErrorMessage()).id=r,t.appendChild(n)}};InstancedBufferGeometry.prototype=Object.assign(Object.create(BufferGeometry.prototype),{constructor:InstancedBufferGeometry,isInstancedBufferGeometry:!0,copy:function(e){return BufferGeometry.prototype.copy.call(this,e),this.maxInstancedCount=e.maxInstancedCount,this},clone:function(){return(new this.constructor).copy(this)}}),Object.defineProperty(InterleavedBuffer.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(InterleavedBuffer.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setArray:function(e){if(Array.isArray(e))throw new TypeError("BufferAttribute: array should be a Typed Array.");this.count=void 0!==e?e.length/this.stride:0,this.array=e},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.dynamic=e.dynamic,this},copyAt:function(e,t,r){var n=this;e*=this.stride,r*=t.stride;for(var i=0,a=this.stride;i<a;i++)n.array[e+i]=t.array[r+i];return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},clone:function(){return(new this.constructor).copy(this)},onUpload:function(e){return this.onUploadCallback=e,this}}),InstancedInterleavedBuffer.prototype=Object.assign(Object.create(InterleavedBuffer.prototype),{constructor:InstancedInterleavedBuffer,isInstancedInterleavedBuffer:!0,copy:function(e){return InterleavedBuffer.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this}}),Object.defineProperties(InterleavedBufferAttribute.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(InterleavedBufferAttribute.prototype,{isInterleavedBufferAttribute:!0,setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this},setXYZ:function(e,t,r,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=n,this},setXYZW:function(e,t,r,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=n,this.data.array[e+3]=i,this}}),WireframeGeometry.prototype=Object.create(BufferGeometry.prototype),WireframeGeometry.prototype.constructor=WireframeGeometry;var LineSegmentsGeometry=function(){InstancedBufferGeometry.call(this),this.type="LineSegmentsGeometry";new BufferGeometry;var e=[-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],t=[0,1,1,1,0,.5,1,.5,0,.5,1,.5,0,0,1,0],r=[0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5];this.setIndex(r),this.addAttribute("position",new Float32BufferAttribute(e,3)),this.addAttribute("uv",new Float32BufferAttribute(t,2))};LineSegmentsGeometry.prototype=Object.assign(Object.create(InstancedBufferGeometry.prototype),{constructor:LineSegmentsGeometry,isLineSegmentsGeometry:!0,applyMatrix:function(e){var t=this.attributes.instanceStart,r=this.attributes.instanceEnd;return void 0!==t&&(e.applyToBufferAttribute(t),e.applyToBufferAttribute(r),t.data.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},setPositions:function(e){var t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));var r=new InstancedInterleavedBuffer(t,6,1);return this.addAttribute("instanceStart",new InterleavedBufferAttribute(r,3,0)),this.addAttribute("instanceEnd",new InterleavedBufferAttribute(r,3,3)),this.computeBoundingBox(),this.computeBoundingSphere(),this},setColors:function(e){var t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));var r=new InstancedInterleavedBuffer(t,6,1);return this.addAttribute("instanceColorStart",new InterleavedBufferAttribute(r,3,0)),this.addAttribute("instanceColorEnd",new InterleavedBufferAttribute(r,3,3)),this},fromWireframeGeometry:function(e){return this.setPositions(e.attributes.position.array),this},fromEdgesGeometry:function(e){return this.setPositions(e.attributes.position.array),this},fromMesh:function(e){return this.fromWireframeGeometry(new WireframeGeometry(e.geometry)),this},fromLineSegements:function(e){var t=e.geometry;return t.isGeometry?this.setPositions(t.vertices):t.isBufferGeometry&&this.setPositions(t.position.array),this},computeBoundingBox:function(){var e=new Box3;return function(){null===this.boundingBox&&(this.boundingBox=new Box3);var t=this.attributes.instanceStart,r=this.attributes.instanceEnd;void 0!==t&&void 0!==r&&(this.boundingBox.setFromBufferAttribute(t),e.setFromBufferAttribute(r),this.boundingBox.union(e))}}(),computeBoundingSphere:function(){var e=new Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new Sphere),null===this.boundingBox&&this.computeBoundingBox();var t=this.attributes.instanceStart,r=this.attributes.instanceEnd;if(void 0!==t&&void 0!==r){var n=this.boundingSphere.center;this.boundingBox.getCenter(n);for(var i=0,a=0,o=t.count;a<o;a++)e.fromBufferAttribute(t,a),i=Math.max(i,n.distanceToSquared(e)),e.fromBufferAttribute(r,a),i=Math.max(i,n.distanceToSquared(e));this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error("LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}}(),toJSON:function(){},clone:function(){},copy:function(e){return this}});var UniformsLib={common:{diffuse:{value:new Color(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Matrix3},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Color(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new Color(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},uvTransform:{value:new Matrix3}}},alphamap_fragment="#ifdef USE_ALPHAMAP\r\n\r\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\r\n\r\n#endif\r\n",alphamap_pars_fragment="#ifdef USE_ALPHAMAP\r\n\r\n\tuniform sampler2D alphaMap;\r\n\r\n#endif\r\n",alphatest_fragment="#ifdef ALPHATEST\r\n\r\n\tif ( diffuseColor.a < ALPHATEST ) discard;\r\n\r\n#endif\r\n",aomap_fragment="#ifdef USE_AOMAP\r\n\r\n\t// reads channel R, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\r\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\r\n\r\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\r\n\r\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\r\n\r\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\r\n\r\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\r\n\r\n\t#endif\r\n\r\n#endif\r\n",aomap_pars_fragment="#ifdef USE_AOMAP\r\n\r\n\tuniform sampler2D aoMap;\r\n\tuniform float aoMapIntensity;\r\n\r\n#endif",begin_vertex="\r\nvec3 transformed = vec3( position );\r\n",beginnormal_vertex="\r\nvec3 objectNormal = vec3( normal );\r\n",bsdfs='float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\r\n\r\n\tif( decayExponent > 0.0 ) {\r\n\r\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\r\n\r\n\t\t// based upon Frostbite 3 Moving to Physically-based Rendering\r\n\t\t// page 32, equation 26: E[window1]\r\n\t\t// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n\t\t// this is intended to be used on spot and point lights who are represented as luminous intensity\r\n\t\t// but who must be converted to luminous irradiance for surface lighting calculation\r\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\r\n\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\r\n\t\treturn distanceFalloff * maxDistanceCutoffFactor;\r\n\r\n#else\r\n\r\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\r\n\r\n#endif\r\n\r\n\t}\r\n\r\n\treturn 1.0;\r\n\r\n}\r\n\r\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\r\n\r\n\treturn RECIPROCAL_PI * diffuseColor;\r\n\r\n} // validated\r\n\r\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\r\n\r\n\t// Original approximation by Christophe Schlick \'94\r\n\t// float fresnel = pow( 1.0 - dotLH, 5.0 );\r\n\r\n\t// Optimized variant (presented by Epic at SIGGRAPH \'13)\r\n\t// https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\r\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\r\n\r\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\r\n\r\n} // validated\r\n\r\n// Microfacet Models for Refraction through Rough Surfaces - equation (34)\r\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\r\n// alpha is "roughness squared" in Disney’s reparameterization\r\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\r\n\r\n\t// geometry term (normalized) = G(l)⋅G(v) / 4(n⋅l)(n⋅v)\r\n\t// also see #12151\r\n\r\n\tfloat a2 = pow2( alpha );\r\n\r\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\r\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\r\n\r\n\treturn 1.0 / ( gl * gv );\r\n\r\n} // validated\r\n\r\n// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2\r\n// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\r\n\r\n\tfloat a2 = pow2( alpha );\r\n\r\n\t// dotNL and dotNV are explicitly swapped. This is not a mistake.\r\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\r\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\r\n\r\n\treturn 0.5 / max( gv + gl, EPSILON );\r\n\r\n}\r\n\r\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\r\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\r\n// alpha is "roughness squared" in Disney’s reparameterization\r\nfloat D_GGX( const in float alpha, const in float dotNH ) {\r\n\r\n\tfloat a2 = pow2( alpha );\r\n\r\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1\r\n\r\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\r\n\r\n}\r\n\r\n// GGX Distribution, Schlick Fresnel, GGX-Smith Visibility\r\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\r\n\r\n\tfloat alpha = pow2( roughness ); // UE4\'s roughness\r\n\r\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\r\n\r\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\r\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\r\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\r\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\r\n\r\n\tvec3 F = F_Schlick( specularColor, dotLH );\r\n\r\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\r\n\r\n\tfloat D = D_GGX( alpha, dotNH );\r\n\r\n\treturn F * ( G * D );\r\n\r\n} // validated\r\n\r\n// Rect Area Light\r\n\r\n// Real-Time Polygonal-Light Shading with Linearly Transformed Cosines\r\n// by Eric Heitz, Jonathan Dupuy, Stephen Hill and David Neubelt\r\n// code: https://github.com/selfshadow/ltc_code/\r\n\r\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\r\n\r\n\tconst float LUT_SIZE  = 64.0;\r\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\r\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\r\n\r\n\tfloat dotNV = saturate( dot( N, V ) );\r\n\r\n\t// texture parameterized by sqrt( GGX alpha ) and sqrt( 1 - cos( theta ) )\r\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\r\n\r\n\tuv = uv * LUT_SCALE + LUT_BIAS;\r\n\r\n\treturn uv;\r\n\r\n}\r\n\r\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\r\n\r\n\t// Real-Time Area Lighting: a Journey from Research to Production (p.102)\r\n\t// An approximation of the form factor of a horizon-clipped rectangle.\r\n\r\n\tfloat l = length( f );\r\n\r\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\r\n\r\n}\r\n\r\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\r\n\r\n\tfloat x = dot( v1, v2 );\r\n\r\n\tfloat y = abs( x );\r\n\r\n\t// rational polynomial approximation to theta / sin( theta ) / 2PI\r\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\r\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\r\n\tfloat v = a / b;\r\n\r\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\r\n\r\n\treturn cross( v1, v2 ) * theta_sintheta;\r\n\r\n}\r\n\r\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\r\n\r\n\t// bail if point is on back side of plane of light\r\n\t// assumes ccw winding order of light vertices\r\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\r\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\r\n\tvec3 lightNormal = cross( v1, v2 );\r\n\r\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\r\n\r\n\t// construct orthonormal basis around N\r\n\tvec3 T1, T2;\r\n\tT1 = normalize( V - N * dot( V, N ) );\r\n\tT2 = - cross( N, T1 ); // negated from paper; possibly due to a different handedness of world coordinate system\r\n\r\n\t// compute transform\r\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\r\n\r\n\t// transform rect\r\n\tvec3 coords[ 4 ];\r\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\r\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\r\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\r\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\r\n\r\n\t// project rect onto sphere\r\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\r\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\r\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\r\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\r\n\r\n\t// calculate vector form factor\r\n\tvec3 vectorFormFactor = vec3( 0.0 );\r\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\r\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\r\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\r\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\r\n\r\n\t// adjust for horizon clipping\r\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\r\n\r\n\r\n\r\n\treturn vec3( result );\r\n\r\n}\r\n\r\n// End Rect Area Light\r\n\r\n// ref: https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\r\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\r\n\r\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\r\n\r\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\r\n\r\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\r\n\r\n\tvec4 r = roughness * c0 + c1;\r\n\r\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\r\n\r\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\r\n\r\n\treturn specularColor * AB.x + AB.y;\r\n\r\n} // validated\r\n\r\n\r\nfloat G_BlinnPhong_Implicit(  ) {\r\n\r\n\t// geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\r\n\treturn 0.25;\r\n\r\n}\r\n\r\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\r\n\r\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\r\n\r\n}\r\n\r\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\r\n\r\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\r\n\r\n\t//float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\r\n\t//float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\r\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\r\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\r\n\r\n\tvec3 F = F_Schlick( specularColor, dotLH );\r\n\r\n\tfloat G = G_BlinnPhong_Implicit(  );\r\n\r\n\tfloat D = D_BlinnPhong( shininess, dotNH );\r\n\r\n\treturn F * ( G * D );\r\n\r\n} // validated\r\n\r\n// source: http://simonstechblog.blogspot.ca/2011/12/microfacet-brdf.html\r\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\r\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\r\n}\r\n\r\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\r\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\r\n}\r\n',bumpmap_pars_fragment="#ifdef USE_BUMPMAP\r\n\r\n\tuniform sampler2D bumpMap;\r\n\tuniform float bumpScale;\r\n\r\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\r\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\r\n\r\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\r\n\r\n\tvec2 dHdxy_fwd() {\r\n\r\n\t\tvec2 dSTdx = dFdx( vUv );\r\n\t\tvec2 dSTdy = dFdy( vUv );\r\n\r\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\r\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\r\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\r\n\r\n\t\treturn vec2( dBx, dBy );\r\n\r\n\t}\r\n\r\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\r\n\r\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\r\n\r\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\r\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\r\n\t\tvec3 vN = surf_norm;\t\t// normalized\r\n\r\n\t\tvec3 R1 = cross( vSigmaY, vN );\r\n\t\tvec3 R2 = cross( vN, vSigmaX );\r\n\r\n\t\tfloat fDet = dot( vSigmaX, R1 );\r\n\r\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\r\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\r\n\r\n\t}\r\n\r\n#endif\r\n",clipping_planes_fragment="#if NUM_CLIPPING_PLANES > 0\r\n\r\n\tvec4 plane;\r\n\r\n\t#pragma unroll_loop\r\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\r\n\r\n\t\tplane = clippingPlanes[ i ];\r\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\r\n\r\n\t}\r\n\r\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\r\n\r\n\t\tbool clipped = true;\r\n\r\n\t\t#pragma unroll_loop\r\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\r\n\r\n\t\t\tplane = clippingPlanes[ i ];\r\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\r\n\r\n\t\t}\r\n\r\n\t\tif ( clipped ) discard;\r\n\r\n\t#endif\r\n\r\n#endif\r\n",clipping_planes_pars_fragment="#if NUM_CLIPPING_PLANES > 0\r\n\r\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\r\n\t\tvarying vec3 vViewPosition;\r\n\t#endif\r\n\r\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\r\n\r\n#endif\r\n",clipping_planes_pars_vertex="#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\r\n\tvarying vec3 vViewPosition;\r\n#endif\r\n",clipping_planes_vertex="#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\r\n\tvViewPosition = - mvPosition.xyz;\r\n#endif\r\n\r\n",color_fragment="#ifdef USE_COLOR\r\n\r\n\tdiffuseColor.rgb *= vColor;\r\n\r\n#endif",color_pars_fragment="#ifdef USE_COLOR\r\n\r\n\tvarying vec3 vColor;\r\n\r\n#endif\r\n",color_pars_vertex="#ifdef USE_COLOR\r\n\r\n\tvarying vec3 vColor;\r\n\r\n#endif",color_vertex="#ifdef USE_COLOR\r\n\r\n\tvColor.xyz = color.xyz;\r\n\r\n#endif",common="#define PI 3.14159265359\r\n#define PI2 6.28318530718\r\n#define PI_HALF 1.5707963267949\r\n#define RECIPROCAL_PI 0.31830988618\r\n#define RECIPROCAL_PI2 0.15915494\r\n#define LOG2 1.442695\r\n#define EPSILON 1e-6\r\n\r\n#define saturate(a) clamp( a, 0.0, 1.0 )\r\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\r\n\r\nfloat pow2( const in float x ) { return x*x; }\r\nfloat pow3( const in float x ) { return x*x*x; }\r\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\r\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\r\n// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.\r\n// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\r\nhighp float rand( const in vec2 uv ) {\r\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\r\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\r\n\treturn fract(sin(sn) * c);\r\n}\r\n\r\nstruct IncidentLight {\r\n\tvec3 color;\r\n\tvec3 direction;\r\n\tbool visible;\r\n};\r\n\r\nstruct ReflectedLight {\r\n\tvec3 directDiffuse;\r\n\tvec3 directSpecular;\r\n\tvec3 indirectDiffuse;\r\n\tvec3 indirectSpecular;\r\n};\r\n\r\nstruct GeometricContext {\r\n\tvec3 position;\r\n\tvec3 normal;\r\n\tvec3 viewDir;\r\n};\r\n\r\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\r\n\r\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\r\n\r\n}\r\n\r\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\r\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\r\n\r\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\r\n\r\n}\r\n\r\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\r\n\r\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\r\n\r\n\treturn - distance * planeNormal + point;\r\n\r\n}\r\n\r\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\r\n\r\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\r\n\r\n}\r\n\r\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\r\n\r\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\r\n\r\n}\r\n\r\nmat3 transposeMat3( const in mat3 m ) {\r\n\r\n\tmat3 tmp;\r\n\r\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\r\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\r\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\r\n\r\n\treturn tmp;\r\n\r\n}\r\n\r\n// https://en.wikipedia.org/wiki/Relative_luminance\r\nfloat linearToRelativeLuminance( const in vec3 color ) {\r\n\r\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\r\n\r\n\treturn dot( weights, color.rgb );\r\n\r\n}\r\n",cube_uv_reflection_fragment="#ifdef ENVMAP_TYPE_CUBE_UV\r\n\r\n#define cubeUV_textureSize (1024.0)\r\n\r\nint getFaceFromDirection(vec3 direction) {\r\n\tvec3 absDirection = abs(direction);\r\n\tint face = -1;\r\n\tif( absDirection.x > absDirection.z ) {\r\n\t\tif(absDirection.x > absDirection.y )\r\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\r\n\t\telse\r\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\r\n\t}\r\n\telse {\r\n\t\tif(absDirection.z > absDirection.y )\r\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\r\n\t\telse\r\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\r\n\t}\r\n\treturn face;\r\n}\r\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\r\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\r\n\r\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\r\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\r\n\tfloat dxRoughness = dFdx(roughness);\r\n\tfloat dyRoughness = dFdy(roughness);\r\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\r\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\r\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\r\n\t// Clamp the value to the max mip level counts. hard coded to 6 mips\r\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\r\n\tfloat mipLevel = 0.5 * log2(d);\r\n\treturn vec2(floor(mipLevel), fract(mipLevel));\r\n}\r\n\r\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\r\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\r\n\r\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\r\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\r\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\r\n\r\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\r\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\r\n\t// float powScale = exp2(roughnessLevel + mipLevel);\r\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\r\n\t// float scale =  1.0 / exp2(roughnessLevel + 2.0 + mipLevel);\r\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\r\n\t// float mipOffset = 0.75*(1.0 - 1.0/exp2(mipLevel))/exp2(roughnessLevel);\r\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\r\n\r\n\tbool bRes = mipLevel == 0.0;\r\n\tscale =  bRes && (scale < a) ? a : scale;\r\n\r\n\tvec3 r;\r\n\tvec2 offset;\r\n\tint face = getFaceFromDirection(direction);\r\n\r\n\tfloat rcpPowScale = 1.0 / powScale;\r\n\r\n\tif( face == 0) {\r\n\t\tr = vec3(direction.x, -direction.z, direction.y);\r\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\r\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\r\n\t}\r\n\telse if( face == 1) {\r\n\t\tr = vec3(direction.y, direction.x, direction.z);\r\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\r\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\r\n\t}\r\n\telse if( face == 2) {\r\n\t\tr = vec3(direction.z, direction.x, direction.y);\r\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\r\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\r\n\t}\r\n\telse if( face == 3) {\r\n\t\tr = vec3(direction.x, direction.z, direction.y);\r\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\r\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\r\n\t}\r\n\telse if( face == 4) {\r\n\t\tr = vec3(direction.y, direction.x, -direction.z);\r\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\r\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\r\n\t}\r\n\telse {\r\n\t\tr = vec3(direction.z, -direction.x, direction.y);\r\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\r\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\r\n\t}\r\n\tr = normalize(r);\r\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\r\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\r\n\tvec2 base = offset + vec2( texelOffset );\r\n\treturn base + s * ( scale - 2.0 * texelOffset );\r\n}\r\n\r\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\r\n\r\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\r\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\r\n\tfloat r1 = floor(roughnessVal);\r\n\tfloat r2 = r1 + 1.0;\r\n\tfloat t = fract(roughnessVal);\r\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\r\n\tfloat s = mipInfo.y;\r\n\tfloat level0 = mipInfo.x;\r\n\tfloat level1 = level0 + 1.0;\r\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\r\n\r\n\t// round to nearest mipmap if we are not interpolating.\r\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\r\n\r\n\t// Tri linear interpolation.\r\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\r\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\r\n\r\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\r\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\r\n\r\n\tvec4 result = mix(color10, color20, t);\r\n\r\n\treturn vec4(result.rgb, 1.0);\r\n}\r\n\r\n#endif\r\n",defaultnormal_vertex="vec3 transformedNormal = normalMatrix * objectNormal;\r\n\r\n#ifdef FLIP_SIDED\r\n\r\n\ttransformedNormal = - transformedNormal;\r\n\r\n#endif\r\n",displacementmap_pars_vertex="#ifdef USE_DISPLACEMENTMAP\r\n\r\n\tuniform sampler2D displacementMap;\r\n\tuniform float displacementScale;\r\n\tuniform float displacementBias;\r\n\r\n#endif\r\n",displacementmap_vertex="#ifdef USE_DISPLACEMENTMAP\r\n\r\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\r\n\r\n#endif\r\n",emissivemap_fragment="#ifdef USE_EMISSIVEMAP\r\n\r\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\r\n\r\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\r\n\r\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\r\n\r\n#endif\r\n",emissivemap_pars_fragment="#ifdef USE_EMISSIVEMAP\r\n\r\n\tuniform sampler2D emissiveMap;\r\n\r\n#endif\r\n",encodings_fragment="  gl_FragColor = linearToOutputTexel( gl_FragColor );\r\n",encodings_pars_fragment="// For a discussion of what this is, please read this: http://lousodrome.net/blog/light/2013/05/26/gamma-correct-and-hdr-rendering-in-a-32-bits-buffer/\r\n\r\nvec4 LinearToLinear( in vec4 value ) {\r\n\treturn value;\r\n}\r\n\r\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\r\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\r\n}\r\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\r\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\r\n}\r\n\r\nvec4 sRGBToLinear( in vec4 value ) {\r\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\r\n}\r\nvec4 LinearTosRGB( in vec4 value ) {\r\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\r\n}\r\n\r\nvec4 RGBEToLinear( in vec4 value ) {\r\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\r\n}\r\nvec4 LinearToRGBE( in vec4 value ) {\r\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\r\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\r\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\r\n//  return vec4( value.brg, ( 3.0 + 128.0 ) / 256.0 );\r\n}\r\n\r\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\r\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\r\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\r\n}\r\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\r\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\r\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\r\n\tM            = ceil( M * 255.0 ) / 255.0;\r\n\treturn vec4( value.rgb / ( M * maxRange ), M );\r\n}\r\n\r\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\r\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\r\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\r\n}\r\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\r\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\r\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\r\n\tD            = min( floor( D ) / 255.0, 1.0 );\r\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\r\n}\r\n\r\n// LogLuv reference: http://graphicrants.blogspot.ca/2009/04/rgbm-color-encoding.html\r\n\r\n// M matrix, for encoding\r\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\r\nvec4 LinearToLogLuv( in vec4 value )  {\r\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\r\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\r\n\tvec4 vResult;\r\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\r\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\r\n\tvResult.w = fract(Le);\r\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\r\n\treturn vResult;\r\n}\r\n\r\n// Inverse M matrix, for decoding\r\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\r\nvec4 LogLuvToLinear( in vec4 value ) {\r\n\tfloat Le = value.z * 255.0 + value.w;\r\n\tvec3 Xp_Y_XYZp;\r\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\r\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\r\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\r\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\r\n\treturn vec4( max(vRGB, 0.0), 1.0 );\r\n}\r\n",envmap_fragment="#ifdef USE_ENVMAP\r\n\r\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\r\n\r\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\r\n\r\n\t\t// Transforming Normal Vectors with the Inverse Transformation\r\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\r\n\r\n\t\t#ifdef ENVMAP_MODE_REFLECTION\r\n\r\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\r\n\r\n\t\t#else\r\n\r\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\r\n\r\n\t\t#endif\r\n\r\n\t#else\r\n\r\n\t\tvec3 reflectVec = vReflect;\r\n\r\n\t#endif\r\n\r\n\t#ifdef ENVMAP_TYPE_CUBE\r\n\r\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\r\n\r\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\r\n\r\n\t\tvec2 sampleUV;\r\n\r\n\t\treflectVec = normalize( reflectVec );\r\n\r\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\r\n\r\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\r\n\r\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\r\n\r\n\t#elif defined( ENVMAP_TYPE_SPHERE )\r\n\r\n\t\treflectVec = normalize( reflectVec );\r\n\r\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\r\n\r\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 envColor = vec4( 0.0 );\r\n\r\n\t#endif\r\n\r\n\tenvColor = envMapTexelToLinear( envColor );\r\n\r\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\r\n\r\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\r\n\r\n\t#elif defined( ENVMAP_BLENDING_MIX )\r\n\r\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\r\n\r\n\t#elif defined( ENVMAP_BLENDING_ADD )\r\n\r\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\r\n\r\n\t#endif\r\n\r\n#endif\r\n",envmap_pars_fragment="#if defined( USE_ENVMAP ) || defined( PHYSICAL )\r\n\tuniform float reflectivity;\r\n\tuniform float envMapIntensity;\r\n#endif\r\n\r\n#ifdef USE_ENVMAP\r\n\r\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\r\n\t\tvarying vec3 vWorldPosition;\r\n\t#endif\r\n\r\n\t#ifdef ENVMAP_TYPE_CUBE\r\n\t\tuniform samplerCube envMap;\r\n\t#else\r\n\t\tuniform sampler2D envMap;\r\n\t#endif\r\n\tuniform float flipEnvMap;\r\n\tuniform int maxMipLevel;\r\n\r\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\r\n\t\tuniform float refractionRatio;\r\n\t#else\r\n\t\tvarying vec3 vReflect;\r\n\t#endif\r\n\r\n#endif\r\n",envmap_pars_vertex="#ifdef USE_ENVMAP\r\n\r\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\r\n\t\tvarying vec3 vWorldPosition;\r\n\r\n\t#else\r\n\r\n\t\tvarying vec3 vReflect;\r\n\t\tuniform float refractionRatio;\r\n\r\n\t#endif\r\n\r\n#endif\r\n",envmap_vertex="#ifdef USE_ENVMAP\r\n\r\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\r\n\r\n\t\tvWorldPosition = worldPosition.xyz;\r\n\r\n\t#else\r\n\r\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\r\n\r\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\r\n\r\n\t\t#ifdef ENVMAP_MODE_REFLECTION\r\n\r\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\r\n\r\n\t\t#else\r\n\r\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\r\n\r\n\t\t#endif\r\n\r\n\t#endif\r\n\r\n#endif\r\n",fog_vertex="\r\n#ifdef USE_FOG\r\nfogDepth = -mvPosition.z;\r\n#endif",fog_pars_vertex="#ifdef USE_FOG\r\n\r\n  varying float fogDepth;\r\n\r\n#endif\r\n",fog_fragment="#ifdef USE_FOG\r\n\r\n\t#ifdef FOG_EXP2\r\n\r\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\r\n\r\n\t#else\r\n\r\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\r\n\r\n\t#endif\r\n\r\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\r\n\r\n#endif\r\n",fog_pars_fragment="#ifdef USE_FOG\r\n\r\n\tuniform vec3 fogColor;\r\n\tvarying float fogDepth;\r\n\r\n\t#ifdef FOG_EXP2\r\n\r\n\t\tuniform float fogDensity;\r\n\r\n\t#else\r\n\r\n\t\tuniform float fogNear;\r\n\t\tuniform float fogFar;\r\n\r\n\t#endif\r\n\r\n#endif\r\n",gradientmap_pars_fragment="#ifdef TOON\r\n\r\n\tuniform sampler2D gradientMap;\r\n\r\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\r\n\r\n\t\t// dotNL will be from -1.0 to 1.0\r\n\t\tfloat dotNL = dot( normal, lightDirection );\r\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\r\n\r\n\t\t#ifdef USE_GRADIENTMAP\r\n\r\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\r\n\r\n\t\t#else\r\n\r\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\r\n\r\n\t\t#endif\r\n\r\n\r\n\t}\r\n\r\n#endif\r\n",lightmap_fragment="#ifdef USE_LIGHTMAP\r\n\r\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity; // factor of PI should not be present; included here to prevent breakage\r\n\r\n#endif\r\n",lightmap_pars_fragment="#ifdef USE_LIGHTMAP\r\n\r\n\tuniform sampler2D lightMap;\r\n\tuniform float lightMapIntensity;\r\n\r\n#endif",lights_lambert_vertex="vec3 diffuse = vec3( 1.0 );\r\n\r\nGeometricContext geometry;\r\ngeometry.position = mvPosition.xyz;\r\ngeometry.normal = normalize( transformedNormal );\r\ngeometry.viewDir = normalize( -mvPosition.xyz );\r\n\r\nGeometricContext backGeometry;\r\nbackGeometry.position = geometry.position;\r\nbackGeometry.normal = -geometry.normal;\r\nbackGeometry.viewDir = geometry.viewDir;\r\n\r\nvLightFront = vec3( 0.0 );\r\n\r\n#ifdef DOUBLE_SIDED\r\n\tvLightBack = vec3( 0.0 );\r\n#endif\r\n\r\nIncidentLight directLight;\r\nfloat dotNL;\r\nvec3 directLightColor_Diffuse;\r\n\r\n#if NUM_POINT_LIGHTS > 0\r\n\r\n\t#pragma unroll_loop\r\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\r\n\r\n\t\tdotNL = dot( geometry.normal, directLight.direction );\r\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\r\n\r\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\r\n\r\n\t\t#ifdef DOUBLE_SIDED\r\n\r\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\r\n\r\n\t\t#endif\r\n\r\n\t}\r\n\r\n#endif\r\n\r\n#if NUM_SPOT_LIGHTS > 0\r\n\r\n\t#pragma unroll_loop\r\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\r\n\r\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\r\n\r\n\t\tdotNL = dot( geometry.normal, directLight.direction );\r\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\r\n\r\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\r\n\r\n\t\t#ifdef DOUBLE_SIDED\r\n\r\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\r\n\r\n\t\t#endif\r\n\t}\r\n\r\n#endif\r\n\r\n\r\n\r\n#if NUM_DIR_LIGHTS > 0\r\n\r\n\t#pragma unroll_loop\r\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\r\n\r\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\r\n\r\n\t\tdotNL = dot( geometry.normal, directLight.direction );\r\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\r\n\r\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\r\n\r\n\t\t#ifdef DOUBLE_SIDED\r\n\r\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\r\n\r\n\t\t#endif\r\n\r\n\t}\r\n\r\n#endif\r\n\r\n#if NUM_HEMI_LIGHTS > 0\r\n\r\n\t#pragma unroll_loop\r\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\r\n\r\n\t\t#ifdef DOUBLE_SIDED\r\n\r\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\r\n\r\n\t\t#endif\r\n\r\n\t}\r\n\r\n#endif\r\n",lights_pars_begin="uniform vec3 ambientLightColor;\r\n\r\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\r\n\r\n\tvec3 irradiance = ambientLightColor;\r\n\r\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\r\n\r\n\t\tirradiance *= PI;\r\n\r\n\t#endif\r\n\r\n\treturn irradiance;\r\n\r\n}\r\n\r\n#if NUM_DIR_LIGHTS > 0\r\n\r\n\tstruct DirectionalLight {\r\n\t\tvec3 direction;\r\n\t\tvec3 color;\r\n\r\n\t\tint shadow;\r\n\t\tfloat shadowBias;\r\n\t\tfloat shadowRadius;\r\n\t\tvec2 shadowMapSize;\r\n\t};\r\n\r\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\r\n\r\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\r\n\r\n\t\tdirectLight.color = directionalLight.color;\r\n\t\tdirectLight.direction = directionalLight.direction;\r\n\t\tdirectLight.visible = true;\r\n\r\n\t}\r\n\r\n#endif\r\n\r\n\r\n#if NUM_POINT_LIGHTS > 0\r\n\r\n\tstruct PointLight {\r\n\t\tvec3 position;\r\n\t\tvec3 color;\r\n\t\tfloat distance;\r\n\t\tfloat decay;\r\n\r\n\t\tint shadow;\r\n\t\tfloat shadowBias;\r\n\t\tfloat shadowRadius;\r\n\t\tvec2 shadowMapSize;\r\n\t\tfloat shadowCameraNear;\r\n\t\tfloat shadowCameraFar;\r\n\t};\r\n\r\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\r\n\r\n\t// directLight is an out parameter as having it as a return value caused compiler errors on some devices\r\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\r\n\r\n\t\tvec3 lVector = pointLight.position - geometry.position;\r\n\t\tdirectLight.direction = normalize( lVector );\r\n\r\n\t\tfloat lightDistance = length( lVector );\r\n\r\n\t\tdirectLight.color = pointLight.color;\r\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\r\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\r\n\r\n\t}\r\n\r\n#endif\r\n\r\n\r\n#if NUM_SPOT_LIGHTS > 0\r\n\r\n\tstruct SpotLight {\r\n\t\tvec3 position;\r\n\t\tvec3 direction;\r\n\t\tvec3 color;\r\n\t\tfloat distance;\r\n\t\tfloat decay;\r\n\t\tfloat coneCos;\r\n\t\tfloat penumbraCos;\r\n\r\n\t\tint shadow;\r\n\t\tfloat shadowBias;\r\n\t\tfloat shadowRadius;\r\n\t\tvec2 shadowMapSize;\r\n\t};\r\n\r\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\r\n\r\n\t// directLight is an out parameter as having it as a return value caused compiler errors on some devices\r\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\r\n\r\n\t\tvec3 lVector = spotLight.position - geometry.position;\r\n\t\tdirectLight.direction = normalize( lVector );\r\n\r\n\t\tfloat lightDistance = length( lVector );\r\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\r\n\r\n\t\tif ( angleCos > spotLight.coneCos ) {\r\n\r\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\r\n\r\n\t\t\tdirectLight.color = spotLight.color;\r\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\r\n\t\t\tdirectLight.visible = true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdirectLight.color = vec3( 0.0 );\r\n\t\t\tdirectLight.visible = false;\r\n\r\n\t\t}\r\n\t}\r\n\r\n#endif\r\n\r\n\r\n#if NUM_RECT_AREA_LIGHTS > 0\r\n\r\n\tstruct RectAreaLight {\r\n\t\tvec3 color;\r\n\t\tvec3 position;\r\n\t\tvec3 halfWidth;\r\n\t\tvec3 halfHeight;\r\n\t};\r\n\r\n\t// Pre-computed values of LinearTransformedCosine approximation of BRDF\r\n\t// BRDF approximation Texture is 64x64\r\n\tuniform sampler2D ltc_1; // RGBA Float\r\n\tuniform sampler2D ltc_2; // RGBA Float\r\n\r\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\r\n\r\n#endif\r\n\r\n\r\n#if NUM_HEMI_LIGHTS > 0\r\n\r\n\tstruct HemisphereLight {\r\n\t\tvec3 direction;\r\n\t\tvec3 skyColor;\r\n\t\tvec3 groundColor;\r\n\t};\r\n\r\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\r\n\r\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\r\n\r\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\r\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\r\n\r\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\r\n\r\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\r\n\r\n\t\t\tirradiance *= PI;\r\n\r\n\t\t#endif\r\n\r\n\t\treturn irradiance;\r\n\r\n\t}\r\n\r\n#endif\r\n",lights_pars_maps="#if defined( USE_ENVMAP ) && defined( PHYSICAL )\r\n\r\n\tvec3 getLightProbeIndirectIrradiance(  const in GeometricContext geometry, const in int maxMIPLevel ) {\r\n\r\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\r\n\r\n\t\t#ifdef ENVMAP_TYPE_CUBE\r\n\r\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\r\n\r\n\t\t\t// TODO: replace with properly filtered cubemaps and access the irradiance LOD level, be it the last LOD level\r\n\t\t\t// of a specular cubemap, or just the default level of a specially created irradiance cubemap.\r\n\r\n\t\t\t#ifdef TEXTURE_LOD_EXT\r\n\r\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\r\n\r\n\t\t\t#else\r\n\r\n\t\t\t\t// force the bias high to get the last LOD level as it is the most blurred.\r\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\r\n\r\n\t\t\t#endif\r\n\r\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\r\n\r\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\r\n\r\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\r\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\r\n\r\n\t\t#else\r\n\r\n\t\t\tvec4 envMapColor = vec4( 0.0 );\r\n\r\n\t\t#endif\r\n\r\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\r\n\r\n\t}\r\n\r\n\t// taken from here: http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\r\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\r\n\r\n\t\t//float envMapWidth = pow( 2.0, maxMIPLevelScalar );\r\n\t\t//float desiredMIPLevel = log2( envMapWidth * sqrt( 3.0 ) ) - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\r\n\r\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\r\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\r\n\r\n\t\t// clamp to allowable LOD ranges.\r\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\r\n\r\n\t}\r\n\r\n\tvec3 getLightProbeIndirectRadiance(  const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\r\n\r\n\t\t#ifdef ENVMAP_MODE_REFLECTION\r\n\r\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\r\n\r\n\t\t#else\r\n\r\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\r\n\r\n\t\t#endif\r\n\r\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\r\n\r\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\r\n\r\n\t\t#ifdef ENVMAP_TYPE_CUBE\r\n\r\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\r\n\r\n\t\t\t#ifdef TEXTURE_LOD_EXT\r\n\r\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\r\n\r\n\t\t\t#else\r\n\r\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\r\n\r\n\t\t\t#endif\r\n\r\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\r\n\r\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\r\n\r\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\r\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\r\n\r\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\r\n\r\n\t\t\tvec2 sampleUV;\r\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\r\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\r\n\r\n\t\t\t#ifdef TEXTURE_LOD_EXT\r\n\r\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\r\n\r\n\t\t\t#else\r\n\r\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\r\n\r\n\t\t\t#endif\r\n\r\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\r\n\r\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\r\n\r\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\r\n\r\n\t\t\t#ifdef TEXTURE_LOD_EXT\r\n\r\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\r\n\r\n\t\t\t#else\r\n\r\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\r\n\r\n\t\t\t#endif\r\n\r\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\r\n\r\n\t\t#endif\r\n\r\n\t\treturn envMapColor.rgb * envMapIntensity;\r\n\r\n\t}\r\n\r\n#endif\r\n",lights_phong_fragment="BlinnPhongMaterial material;\r\nmaterial.diffuseColor = diffuseColor.rgb;\r\nmaterial.specularColor = specular;\r\nmaterial.specularShininess = shininess;\r\nmaterial.specularStrength = specularStrength;\r\n",lights_phong_pars_fragment="varying vec3 vViewPosition;\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n\tvarying vec3 vNormal;\r\n\r\n#endif\r\n\r\n\r\nstruct BlinnPhongMaterial {\r\n\r\n\tvec3\tdiffuseColor;\r\n\tvec3\tspecularColor;\r\n\tfloat\tspecularShininess;\r\n\tfloat\tspecularStrength;\r\n\r\n};\r\n\r\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\r\n\r\n\t#ifdef TOON\r\n\r\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\r\n\r\n\t#else\r\n\r\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\r\n\t\tvec3 irradiance = dotNL * directLight.color;\r\n\r\n\t#endif\r\n\r\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\r\n\r\n\t\tirradiance *= PI; // punctual light\r\n\r\n\t#endif\r\n\r\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\r\n\r\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\r\n\r\n}\r\n\r\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\r\n\r\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\r\n\r\n}\r\n\r\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\r\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\r\n\r\n#define Material_LightProbeLOD( material )\t(0)\r\n",lights_physical_fragment="PhysicalMaterial material;\r\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\r\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\r\n#ifdef STANDARD\r\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\r\n#else\r\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\r\n\tmaterial.clearCoat = saturate( clearCoat ); // Burley clearcoat model\r\n\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\r\n#endif\r\n",lights_physical_pars_fragment="struct PhysicalMaterial {\r\n\r\n\tvec3\tdiffuseColor;\r\n\tfloat\tspecularRoughness;\r\n\tvec3\tspecularColor;\r\n\r\n\t#ifndef STANDARD\r\n\t\tfloat clearCoat;\r\n\t\tfloat clearCoatRoughness;\r\n\t#endif\r\n\r\n};\r\n\r\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\r\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\r\n\r\n// Clear coat directional hemishperical reflectance (this approximation should be improved)\r\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\r\n\r\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\r\n\r\n}\r\n\r\n#if NUM_RECT_AREA_LIGHTS > 0\r\n\r\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\r\n\r\n\t\tvec3 normal = geometry.normal;\r\n\t\tvec3 viewDir = geometry.viewDir;\r\n\t\tvec3 position = geometry.position;\r\n\t\tvec3 lightPos = rectAreaLight.position;\r\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\r\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\r\n\t\tvec3 lightColor = rectAreaLight.color;\r\n\t\tfloat roughness = material.specularRoughness;\r\n\r\n\t\tvec3 rectCoords[ 4 ];\r\n\t\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight; // counterclockwise\r\n\t\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\r\n\t\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\r\n\t\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\r\n\r\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\r\n\r\n\t\tvec4 t1 = texture2D( ltc_1, uv );\r\n\t\tvec4 t2 = texture2D( ltc_2, uv );\r\n\r\n\t\tmat3 mInv = mat3(\r\n\t\t\tvec3( t1.x, 0, t1.y ),\r\n\t\t\tvec3(    0, 1,    0 ),\r\n\t\t\tvec3( t1.z, 0, t1.w )\r\n\t\t);\r\n\r\n\t\t// LTC Fresnel Approximation by Stephen Hill\r\n\t\t// http://blog.selfshadow.com/publications/s2016-advances/s2016_ltc_fresnel.pdf\r\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\r\n\r\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\r\n\r\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\r\n\r\n\t}\r\n\r\n#endif\r\n\r\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\r\n\r\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\r\n\r\n\tvec3 irradiance = dotNL * directLight.color;\r\n\r\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\r\n\r\n\t\tirradiance *= PI; // punctual light\r\n\r\n\t#endif\r\n\r\n\t#ifndef STANDARD\r\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\r\n\t#else\r\n\t\tfloat clearCoatDHR = 0.0;\r\n\t#endif\r\n\r\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\r\n\r\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\r\n\r\n\t#ifndef STANDARD\r\n\r\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\r\n\r\n\t#endif\r\n\r\n}\r\n\r\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\r\n\r\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\r\n\r\n}\r\n\r\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\r\n\r\n\t#ifndef STANDARD\r\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\r\n\t\tfloat dotNL = dotNV;\r\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\r\n\t#else\r\n\t\tfloat clearCoatDHR = 0.0;\r\n\t#endif\r\n\r\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\r\n\r\n\t#ifndef STANDARD\r\n\r\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\r\n\r\n\t#endif\r\n\r\n}\r\n\r\n#define RE_Direct\t\t\t\tRE_Direct_Physical\r\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\r\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\r\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\r\n\r\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\r\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\r\n\r\n// ref: https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\r\n\r\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\r\n\r\n}\r\n",lights_fragment_begin="\r\n\r\nGeometricContext geometry;\r\n\r\ngeometry.position = - vViewPosition;\r\ngeometry.normal = normal;\r\ngeometry.viewDir = normalize( vViewPosition );\r\n\r\nIncidentLight directLight;\r\n\r\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\r\n\r\n\tPointLight pointLight;\r\n\r\n\t#pragma unroll_loop\r\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\tpointLight = pointLights[ i ];\r\n\r\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\r\n\r\n\t\t#ifdef USE_SHADOWMAP\r\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\r\n\t\t#endif\r\n\r\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\r\n\r\n\t}\r\n\r\n#endif\r\n\r\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\r\n\r\n\tSpotLight spotLight;\r\n\r\n\t#pragma unroll_loop\r\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\r\n\r\n\t\tspotLight = spotLights[ i ];\r\n\r\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\r\n\r\n\t\t#ifdef USE_SHADOWMAP\r\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\r\n\t\t#endif\r\n\r\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\r\n\r\n\t}\r\n\r\n#endif\r\n\r\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\r\n\r\n\tDirectionalLight directionalLight;\r\n\r\n\t#pragma unroll_loop\r\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\r\n\r\n\t\tdirectionalLight = directionalLights[ i ];\r\n\r\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\r\n\r\n\t\t#ifdef USE_SHADOWMAP\r\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\r\n\t\t#endif\r\n\r\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\r\n\r\n\t}\r\n\r\n#endif\r\n\r\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\r\n\r\n\tRectAreaLight rectAreaLight;\r\n\r\n\t#pragma unroll_loop\r\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\r\n\r\n\t\trectAreaLight = rectAreaLights[ i ];\r\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\r\n\r\n\t}\r\n\r\n#endif\r\n\r\n#if defined( RE_IndirectDiffuse )\r\n\r\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\r\n\r\n\t#if ( NUM_HEMI_LIGHTS > 0 )\r\n\r\n\t\t#pragma unroll_loop\r\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n#endif\r\n\r\n#if defined( RE_IndirectSpecular )\r\n\r\n\tvec3 radiance = vec3( 0.0 );\r\n\tvec3 clearCoatRadiance = vec3( 0.0 );\r\n\r\n#endif\r\n",lights_fragment_maps="#if defined( RE_IndirectDiffuse )\r\n\r\n\t#ifdef USE_LIGHTMAP\r\n\r\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\r\n\r\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\r\n\r\n\t\t\tlightMapIrradiance *= PI; // factor of PI should not be present; included here to prevent breakage\r\n\r\n\t\t#endif\r\n\r\n\t\tirradiance += lightMapIrradiance;\r\n\r\n\t#endif\r\n\r\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\r\n\r\n\t\tirradiance += getLightProbeIndirectIrradiance(  geometry, maxMipLevel );\r\n\r\n\t#endif\r\n\r\n#endif\r\n\r\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\r\n\r\n\tradiance += getLightProbeIndirectRadiance(  geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\r\n\r\n\t#ifndef STANDARD\r\n\t\tclearCoatRadiance += getLightProbeIndirectRadiance(  geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\r\n\t#endif\r\n\r\n#endif\r\n",lights_fragment_end="#if defined( RE_IndirectDiffuse )\r\n\r\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\r\n\r\n#endif\r\n\r\n#if defined( RE_IndirectSpecular )\r\n\r\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\r\n\r\n#endif\r\n",logdepthbuf_fragment="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\r\n\r\n\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\r\n\r\n#endif",logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\r\n\r\n\tuniform float logDepthBufFC;\r\n\r\n\t#ifdef USE_LOGDEPTHBUF_EXT\r\n\r\n\t\tvarying float vFragDepth;\r\n\r\n\t#endif\r\n\r\n#endif\r\n",logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\r\n\r\n\t#ifdef USE_LOGDEPTHBUF_EXT\r\n\r\n\t\tvarying float vFragDepth;\r\n\r\n\t#endif\r\n\r\n\tuniform float logDepthBufFC;\r\n\r\n#endif",logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\r\n\r\n\t#ifdef USE_LOGDEPTHBUF_EXT\r\n\r\n\t\tvFragDepth = 1.0 + gl_Position.w;\r\n\r\n\t#else\r\n\r\n\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\r\n\r\n\t\tgl_Position.z *= gl_Position.w;\r\n\r\n\t#endif\r\n\r\n#endif\r\n",map_fragment="#ifdef USE_MAP\r\n\r\n\tvec4 texelColor = texture2D( map, vUv );\r\n\r\n\ttexelColor = mapTexelToLinear( texelColor );\r\n\tdiffuseColor *= texelColor;\r\n\r\n#endif\r\n",map_pars_fragment="#ifdef USE_MAP\r\n\r\n\tuniform sampler2D map;\r\n\r\n#endif\r\n",map_particle_fragment="#ifdef USE_MAP\r\n\r\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\r\n\tvec4 mapTexel = texture2D( map, uv );\r\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\r\n\r\n#endif\r\n",map_particle_pars_fragment="#ifdef USE_MAP\r\n\r\n\tuniform mat3 uvTransform;\r\n\tuniform sampler2D map;\r\n\r\n#endif\r\n",metalnessmap_fragment="float metalnessFactor = metalness;\r\n\r\n#ifdef USE_METALNESSMAP\r\n\r\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\r\n\r\n\t// reads channel B, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\r\n\tmetalnessFactor *= texelMetalness.b;\r\n\r\n#endif\r\n",metalnessmap_pars_fragment="#ifdef USE_METALNESSMAP\r\n\r\n\tuniform sampler2D metalnessMap;\r\n\r\n#endif",morphnormal_vertex="#ifdef USE_MORPHNORMALS\r\n\r\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\r\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\r\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\r\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\r\n\r\n#endif\r\n",morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\r\n\r\n\t#ifndef USE_MORPHNORMALS\r\n\r\n\tuniform float morphTargetInfluences[ 8 ];\r\n\r\n\t#else\r\n\r\n\tuniform float morphTargetInfluences[ 4 ];\r\n\r\n\t#endif\r\n\r\n#endif",morphtarget_vertex="#ifdef USE_MORPHTARGETS\r\n\r\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\r\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\r\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\r\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\r\n\r\n\t#ifndef USE_MORPHNORMALS\r\n\r\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\r\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\r\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\r\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\r\n\r\n\t#endif\r\n\r\n#endif\r\n",normal_fragment_begin="#ifdef FLAT_SHADED\r\n\r\n\t// Workaround for Adreno/Nexus5 not able able to do dFdx( vViewPosition ) ...\r\n\r\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\r\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\r\n\tvec3 normal = normalize( cross( fdx, fdy ) );\r\n\r\n#else\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\r\n\t#ifdef DOUBLE_SIDED\r\n\r\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\r\n\r\n\t#endif\r\n\r\n#endif\r\n",normal_fragment_maps="#ifdef USE_NORMALMAP\r\n\r\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\r\n\r\n#elif defined( USE_BUMPMAP )\r\n\r\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n#endif\r\n",normalmap_pars_fragment="#ifdef USE_NORMALMAP\r\n\r\n\tuniform sampler2D normalMap;\r\n\tuniform vec2 normalScale;\r\n\r\n\t// Per-Pixel Tangent Space Normal Mapping\r\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\r\n\r\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\r\n\r\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\r\n\r\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\r\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\r\n\t\tvec2 st0 = dFdx( vUv.st );\r\n\t\tvec2 st1 = dFdy( vUv.st );\r\n\r\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\r\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\r\n\t\tvec3 N = normalize( surf_norm );\r\n\r\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\r\n\t\tmapN.xy = normalScale * mapN.xy;\r\n\t\tmat3 tsn = mat3( S, T, N );\r\n\t\treturn normalize( tsn * mapN );\r\n\r\n\t}\r\n\r\n#endif\r\n",packing="vec3 packNormalToRGB( const in vec3 normal ) {\r\n\treturn normalize( normal ) * 0.5 + 0.5;\r\n}\r\n\r\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\r\n\treturn 2.0 * rgb.xyz - 1.0;\r\n}\r\n\r\nconst float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)\r\nconst float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)\r\n\r\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\r\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\r\n\r\nconst float ShiftRight8 = 1. / 256.;\r\n\r\nvec4 packDepthToRGBA( const in float v ) {\r\n\tvec4 r = vec4( fract( v * PackFactors ), v );\r\n\tr.yzw -= r.xyz * ShiftRight8; // tidy overflow\r\n\treturn r * PackUpscale;\r\n}\r\n\r\nfloat unpackRGBAToDepth( const in vec4 v ) {\r\n\treturn dot( v, UnpackFactors );\r\n}\r\n\r\n// NOTE: viewZ/eyeZ is < 0 when in front of the camera per OpenGL conventions\r\n\r\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\r\n\treturn ( viewZ + near ) / ( near - far );\r\n}\r\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\r\n\treturn linearClipZ * ( near - far ) - near;\r\n}\r\n\r\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\r\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\r\n}\r\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\r\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\r\n}\r\n",premultiplied_alpha_fragment="#ifdef PREMULTIPLIED_ALPHA\r\n\r\n\t// Get get normal blending with premultipled, use with CustomBlending, OneFactor, OneMinusSrcAlphaFactor, AddEquation.\r\n\tgl_FragColor.rgb *= gl_FragColor.a;\r\n\r\n#endif\r\n",project_vertex="vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\r\n\r\ngl_Position = projectionMatrix * mvPosition;\r\n",dithering_fragment="#if defined( DITHERING )\r\n\r\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\r\n\r\n#endif\r\n",dithering_pars_fragment="#if defined( DITHERING )\r\n\r\n\t// based on https://www.shadertoy.com/view/MslGR8\r\n\tvec3 dithering( vec3 color ) {\r\n\t\t//Calculate grid position\r\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\r\n\r\n\t\t//Shift the individual colors differently, thus making it even harder to see the dithering pattern\r\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\r\n\r\n\t\t//modify shift acording to grid position.\r\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\r\n\r\n\t\t//shift the color by dither_shift\r\n\t\treturn color + dither_shift_RGB;\r\n\t}\r\n\r\n#endif\r\n",roughnessmap_fragment="float roughnessFactor = roughness;\r\n\r\n#ifdef USE_ROUGHNESSMAP\r\n\r\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\r\n\r\n\t// reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\r\n\troughnessFactor *= texelRoughness.g;\r\n\r\n#endif\r\n",roughnessmap_pars_fragment="#ifdef USE_ROUGHNESSMAP\r\n\r\n\tuniform sampler2D roughnessMap;\r\n\r\n#endif",shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\r\n\r\n\t#if NUM_DIR_LIGHTS > 0\r\n\r\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\r\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\r\n\r\n\t#endif\r\n\r\n\t#if NUM_SPOT_LIGHTS > 0\r\n\r\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\r\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\r\n\r\n\t#endif\r\n\r\n\t#if NUM_POINT_LIGHTS > 0\r\n\r\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\r\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\r\n\r\n\t#endif\r\n\r\n\t\r\n\r\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\r\n\r\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\r\n\r\n\t}\r\n\r\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\r\n\r\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\r\n\r\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\r\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\r\n\r\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\r\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\r\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\r\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\r\n\r\n\t\tvec2 f = fract( uv * size + 0.5 );\r\n\r\n\t\tfloat a = mix( lb, lt, f.y );\r\n\t\tfloat b = mix( rb, rt, f.y );\r\n\t\tfloat c = mix( a, b, f.x );\r\n\r\n\t\treturn c;\r\n\r\n\t}\r\n\r\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\r\n\r\n\t\tfloat shadow = 1.0;\r\n\r\n\t\tshadowCoord.xyz /= shadowCoord.w;\r\n\t\tshadowCoord.z += shadowBias;\r\n\r\n\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\r\n\t\t// if ( all( something, something ) ) using this instead\r\n\r\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\r\n\t\tbool inFrustum = all( inFrustumVec );\r\n\r\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\r\n\r\n\t\tbool frustumTest = all( frustumTestVec );\r\n\r\n\t\tif ( frustumTest ) {\r\n\r\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\r\n\r\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\r\n\r\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\r\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\r\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\r\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\r\n\r\n\t\t\tshadow = (\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\r\n\t\t\t) * ( 1.0 / 9.0 );\r\n\r\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\r\n\r\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\r\n\r\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\r\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\r\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\r\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\r\n\r\n\t\t\tshadow = (\r\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\r\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\r\n\t\t\t) * ( 1.0 / 9.0 );\r\n\r\n\t\t#else // no percentage-closer filtering:\r\n\r\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\r\n\r\n\t\t#endif\r\n\r\n\t\t}\r\n\r\n\t\treturn shadow;\r\n\r\n\t}\r\n\r\n\t// cubeToUV() maps a 3D direction vector suitable for cube texture mapping to a 2D\r\n\t// vector suitable for 2D texture mapping. This code uses the following layout for the\r\n\t// 2D texture:\r\n\t//\r\n\t// xzXZ\r\n\t//  y Y\r\n\t//\r\n\t// Y - Positive y direction\r\n\t// y - Negative y direction\r\n\t// X - Positive x direction\r\n\t// x - Negative x direction\r\n\t// Z - Positive z direction\r\n\t// z - Negative z direction\r\n\t//\r\n\t// Source and test bed:\r\n\t// https://gist.github.com/tschw/da10c43c467ce8afd0c4\r\n\r\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\r\n\r\n\t\t// Number of texels to avoid at the edge of each square\r\n\r\n\t\tvec3 absV = abs( v );\r\n\r\n\t\t// Intersect unit cube\r\n\r\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\r\n\t\tabsV *= scaleToCube;\r\n\r\n\t\t// Apply scale to avoid seams\r\n\r\n\t\t// two texels less per square (one texel will do for NEAREST)\r\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\r\n\r\n\t\t// Unwrap\r\n\r\n\t\t// space: -1 ... 1 range for each square\r\n\t\t//\r\n\t\t// #X##\t\tdim    := ( 4 , 2 )\r\n\t\t//  # #\t\tcenter := ( 1 , 1 )\r\n\r\n\t\tvec2 planar = v.xy;\r\n\r\n\t\tfloat almostATexel = 1.5 * texelSizeY;\r\n\t\tfloat almostOne = 1.0 - almostATexel;\r\n\r\n\t\tif ( absV.z >= almostOne ) {\r\n\r\n\t\t\tif ( v.z > 0.0 )\r\n\t\t\t\tplanar.x = 4.0 - v.x;\r\n\r\n\t\t} else if ( absV.x >= almostOne ) {\r\n\r\n\t\t\tfloat signX = sign( v.x );\r\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\r\n\r\n\t\t} else if ( absV.y >= almostOne ) {\r\n\r\n\t\t\tfloat signY = sign( v.y );\r\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\r\n\t\t\tplanar.y = v.z * signY - 2.0;\r\n\r\n\t\t}\r\n\r\n\t\t// Transform to UV space\r\n\r\n\t\t// scale := 0.5 / dim\r\n\t\t// translate := ( center + 0.5 ) / dim\r\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\r\n\r\n\t}\r\n\r\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\r\n\r\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\r\n\r\n\t\t// for point lights, the uniform @vShadowCoord is re-purposed to hold\r\n\t\t// the vector from the light to the world-space position of the fragment.\r\n\t\tvec3 lightToPosition = shadowCoord.xyz;\r\n\r\n\t\t// dp = normalized distance from light to fragment position\r\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear ); // need to clamp?\r\n\t\tdp += shadowBias;\r\n\r\n\t\t// bd3D = base direction 3D\r\n\t\tvec3 bd3D = normalize( lightToPosition );\r\n\r\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\r\n\r\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\r\n\r\n\t\t\treturn (\r\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\r\n\t\t\t) * ( 1.0 / 9.0 );\r\n\r\n\t\t#else // no percentage-closer filtering\r\n\r\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\r\n\r\n\t\t#endif\r\n\r\n\t}\r\n\r\n#endif\r\n",shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\r\n\r\n\t#if NUM_DIR_LIGHTS > 0\r\n\r\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\r\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\r\n\r\n\t#endif\r\n\r\n\t#if NUM_SPOT_LIGHTS > 0\r\n\r\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\r\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\r\n\r\n\t#endif\r\n\r\n\t#if NUM_POINT_LIGHTS > 0\r\n\r\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\r\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\r\n\r\n\t#endif\r\n\r\n\t\r\n\r\n#endif\r\n",shadowmap_vertex="#ifdef USE_SHADOWMAP\r\n\r\n\t#if NUM_DIR_LIGHTS > 0\r\n\r\n\t#pragma unroll_loop\r\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\r\n\r\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\r\n\r\n\t}\r\n\r\n\t#endif\r\n\r\n\t#if NUM_SPOT_LIGHTS > 0\r\n\r\n\t#pragma unroll_loop\r\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\r\n\r\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\r\n\r\n\t}\r\n\r\n\t#endif\r\n\r\n\t#if NUM_POINT_LIGHTS > 0\r\n\r\n\t#pragma unroll_loop\r\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\r\n\r\n\t}\r\n\r\n\t#endif\r\n\r\n\t\r\n\r\n#endif\r\n",shadowmask_pars_fragment="float getShadowMask() {\r\n\r\n\tfloat shadow = 1.0;\r\n\r\n\t#ifdef USE_SHADOWMAP\r\n\r\n\t#if NUM_DIR_LIGHTS > 0\r\n\r\n\tDirectionalLight directionalLight;\r\n\r\n\t#pragma unroll_loop\r\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\r\n\r\n\t\tdirectionalLight = directionalLights[ i ];\r\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\r\n\r\n\t}\r\n\r\n\t#endif\r\n\r\n\t#if NUM_SPOT_LIGHTS > 0\r\n\r\n\tSpotLight spotLight;\r\n\r\n\t#pragma unroll_loop\r\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\r\n\r\n\t\tspotLight = spotLights[ i ];\r\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\r\n\r\n\t}\r\n\r\n\t#endif\r\n\r\n\t#if NUM_POINT_LIGHTS > 0\r\n\r\n\tPointLight pointLight;\r\n\r\n\t#pragma unroll_loop\r\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\tpointLight = pointLights[ i ];\r\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\r\n\r\n\t}\r\n\r\n\t#endif\r\n\r\n\t\r\n\r\n\t#endif\r\n\r\n\treturn shadow;\r\n\r\n}\r\n",skinbase_vertex="#ifdef USE_SKINNING\r\n\r\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\r\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\r\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\r\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\r\n\r\n#endif",skinning_pars_vertex="#ifdef USE_SKINNING\r\n\r\n\tuniform mat4 bindMatrix;\r\n\tuniform mat4 bindMatrixInverse;\r\n\r\n\t#ifdef BONE_TEXTURE\r\n\r\n\t\tuniform sampler2D boneTexture;\r\n\t\tuniform int boneTextureSize;\r\n\r\n\t\tmat4 getBoneMatrix( const in float i ) {\r\n\r\n\t\t\tfloat j = i * 4.0;\r\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\r\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\r\n\r\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\r\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\r\n\r\n\t\t\ty = dy * ( y + 0.5 );\r\n\r\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\r\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\r\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\r\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\r\n\r\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\r\n\r\n\t\t\treturn bone;\r\n\r\n\t\t}\r\n\r\n\t#else\r\n\r\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\r\n\r\n\t\tmat4 getBoneMatrix( const in float i ) {\r\n\r\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\r\n\t\t\treturn bone;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n#endif\r\n",skinning_vertex="#ifdef USE_SKINNING\r\n\r\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\r\n\r\n\tvec4 skinned = vec4( 0.0 );\r\n\tskinned += boneMatX * skinVertex * skinWeight.x;\r\n\tskinned += boneMatY * skinVertex * skinWeight.y;\r\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\r\n\tskinned += boneMatW * skinVertex * skinWeight.w;\r\n\r\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\r\n\r\n#endif\r\n",skinnormal_vertex="#ifdef USE_SKINNING\r\n\r\n\tmat4 skinMatrix = mat4( 0.0 );\r\n\tskinMatrix += skinWeight.x * boneMatX;\r\n\tskinMatrix += skinWeight.y * boneMatY;\r\n\tskinMatrix += skinWeight.z * boneMatZ;\r\n\tskinMatrix += skinWeight.w * boneMatW;\r\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\r\n\r\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\r\n\r\n#endif\r\n",specularmap_fragment="float specularStrength;\r\n\r\n#ifdef USE_SPECULARMAP\r\n\r\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\tspecularStrength = texelSpecular.r;\r\n\r\n#else\r\n\r\n\tspecularStrength = 1.0;\r\n\r\n#endif",specularmap_pars_fragment="#ifdef USE_SPECULARMAP\r\n\r\n\tuniform sampler2D specularMap;\r\n\r\n#endif",tonemapping_fragment="#if defined( TONE_MAPPING )\r\n\r\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\r\n\r\n#endif\r\n",tonemapping_pars_fragment="#ifndef saturate\r\n\t#define saturate(a) clamp( a, 0.0, 1.0 )\r\n#endif\r\n\r\nuniform float toneMappingExposure;\r\nuniform float toneMappingWhitePoint;\r\n\r\n// exposure only\r\nvec3 LinearToneMapping( vec3 color ) {\r\n\r\n\treturn toneMappingExposure * color;\r\n\r\n}\r\n\r\n// source: https://www.cs.utah.edu/~reinhard/cdrom/\r\nvec3 ReinhardToneMapping( vec3 color ) {\r\n\r\n\tcolor *= toneMappingExposure;\r\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\r\n\r\n}\r\n\r\n// source: http://filmicgames.com/archives/75\r\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\r\nvec3 Uncharted2ToneMapping( vec3 color ) {\r\n\r\n\t// John Hable's filmic operator from Uncharted 2 video game\r\n\tcolor *= toneMappingExposure;\r\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\r\n\r\n}\r\n\r\n// source: http://filmicgames.com/archives/75\r\nvec3 OptimizedCineonToneMapping( vec3 color ) {\r\n\r\n\t// optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\r\n\tcolor *= toneMappingExposure;\r\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\r\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\r\n\r\n}\r\n",uv_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\r\n\r\n\tvarying vec2 vUv;\r\n\r\n#endif",uv_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\r\n\r\n\tvarying vec2 vUv;\r\n\tuniform mat3 uvTransform;\r\n\r\n#endif\r\n",uv_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\r\n\r\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\r\n\r\n#endif",uv2_pars_fragment="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\r\n\r\n\tvarying vec2 vUv2;\r\n\r\n#endif",uv2_pars_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\r\n\r\n\tattribute vec2 uv2;\r\n\tvarying vec2 vUv2;\r\n\r\n#endif",uv2_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\r\n\r\n\tvUv2 = uv2;\r\n\r\n#endif",worldpos_vertex="#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\r\n\r\n\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\r\n\r\n#endif\r\n",cube_frag="uniform samplerCube tCube;\r\nuniform float tFlip;\r\nuniform float opacity;\r\n\r\nvarying vec3 vWorldPosition;\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\r\n\tgl_FragColor.a *= opacity;\r\n\r\n}\r\n",cube_vert="varying vec3 vWorldPosition;\r\n\r\n#include <common>\r\n\r\nvoid main() {\r\n\r\n\tvWorldPosition = transformDirection( position, modelMatrix );\r\n\r\n\t#include <begin_vertex>\r\n\t#include <project_vertex>\r\n\r\n\tgl_Position.z = gl_Position.w; // set z to camera.far\r\n\r\n}\r\n",depth_frag="#if DEPTH_PACKING == 3200\r\n\r\n\tuniform float opacity;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <uv_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\t#include <clipping_planes_fragment>\r\n\r\n\tvec4 diffuseColor = vec4( 1.0 );\r\n\r\n\t#if DEPTH_PACKING == 3200\r\n\r\n\t\tdiffuseColor.a = opacity;\r\n\r\n\t#endif\r\n\r\n\t#include <map_fragment>\r\n\t#include <alphamap_fragment>\r\n\t#include <alphatest_fragment>\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\r\n\t#if DEPTH_PACKING == 3200\r\n\r\n\t\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\r\n\r\n\t#elif DEPTH_PACKING == 3201\r\n\r\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\r\n\r\n\t#endif\r\n\r\n}\r\n",depth_vert="#include <common>\r\n#include <uv_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\r\n\t#include <skinbase_vertex>\r\n\r\n\t#ifdef USE_DISPLACEMENTMAP\r\n\r\n\t\t#include <beginnormal_vertex>\r\n\t\t#include <morphnormal_vertex>\r\n\t\t#include <skinnormal_vertex>\r\n\r\n\t#endif\r\n\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <displacementmap_vertex>\r\n\t#include <project_vertex>\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\r\n}\r\n",distanceRGBA_frag="#define DISTANCE\r\n\r\nuniform vec3 referencePosition;\r\nuniform float nearDistance;\r\nuniform float farDistance;\r\nvarying vec3 vWorldPosition;\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <uv_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main () {\r\n\r\n\t#include <clipping_planes_fragment>\r\n\r\n\tvec4 diffuseColor = vec4( 1.0 );\r\n\r\n\t#include <map_fragment>\r\n\t#include <alphamap_fragment>\r\n\t#include <alphatest_fragment>\r\n\r\n\tfloat dist = length( vWorldPosition - referencePosition );\r\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\r\n\tdist = saturate( dist ); // clamp to [ 0, 1 ]\r\n\r\n\tgl_FragColor = packDepthToRGBA( dist );\r\n\r\n}\r\n",distanceRGBA_vert="#define DISTANCE\r\n\r\nvarying vec3 vWorldPosition;\r\n\r\n#include <common>\r\n#include <uv_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\r\n\t#include <skinbase_vertex>\r\n\r\n\t#ifdef USE_DISPLACEMENTMAP\r\n\r\n\t\t#include <beginnormal_vertex>\r\n\t\t#include <morphnormal_vertex>\r\n\t\t#include <skinnormal_vertex>\r\n\r\n\t#endif\r\n\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <displacementmap_vertex>\r\n\t#include <project_vertex>\r\n\t#include <worldpos_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\r\n\tvWorldPosition = worldPosition.xyz;\r\n\r\n}\r\n",equirect_frag="uniform sampler2D tEquirect;\r\n\r\nvarying vec3 vWorldPosition;\r\n\r\n#include <common>\r\n\r\nvoid main() {\r\n\r\n\tvec3 direction = normalize( vWorldPosition );\r\n\r\n\tvec2 sampleUV;\r\n\r\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\r\n\r\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\r\n\r\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\r\n\r\n}\r\n",equirect_vert="varying vec3 vWorldPosition;\r\n\r\n#include <common>\r\n\r\nvoid main() {\r\n\r\n\tvWorldPosition = transformDirection( position, modelMatrix );\r\n\r\n\t#include <begin_vertex>\r\n\t#include <project_vertex>\r\n\r\n}\r\n",linedashed_frag="uniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\nuniform float dashSize;\r\nuniform float totalSize;\r\n\r\nvarying float vLineDistance;\r\n\r\n#include <common>\r\n#include <color_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\t#include <clipping_planes_fragment>\r\n\r\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\r\n\r\n\t\tdiscard;\r\n\r\n\t}\r\n\r\n\tvec3 outgoingLight = vec3( 0.0 );\r\n\tvec4 diffuseColor = vec4( diffuse, opacity );\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <color_fragment>\r\n\r\n\toutgoingLight = diffuseColor.rgb; // simple shader\r\n\r\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n\t#include <premultiplied_alpha_fragment>\r\n\t#include <tonemapping_fragment>\r\n\t#include <encodings_fragment>\r\n\t#include <fog_fragment>\r\n\r\n}\r\n",linedashed_vert="uniform float scale;\r\nattribute float lineDistance;\r\n\r\nvarying float vLineDistance;\r\n\r\n#include <common>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <color_vertex>\r\n\r\n\tvLineDistance = scale * lineDistance;\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\t#include <fog_vertex>\r\n\r\n}\r\n",meshbasic_frag="uniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n\tvarying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <uv2_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <envmap_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <specularmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\t#include <clipping_planes_fragment>\r\n\r\n\tvec4 diffuseColor = vec4( diffuse, opacity );\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <map_fragment>\r\n\t#include <color_fragment>\r\n\t#include <alphamap_fragment>\r\n\t#include <alphatest_fragment>\r\n\t#include <specularmap_fragment>\r\n\r\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\r\n\r\n\t// accumulation (baked indirect lighting only)\r\n\t#ifdef USE_LIGHTMAP\r\n\r\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\r\n\r\n\t#else\r\n\r\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\r\n\r\n\t#endif\r\n\r\n\t// modulation\r\n\t#include <aomap_fragment>\r\n\r\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\r\n\r\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\r\n\r\n\t#include <envmap_fragment>\r\n\r\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n\t#include <premultiplied_alpha_fragment>\r\n\t#include <tonemapping_fragment>\r\n\t#include <encodings_fragment>\r\n\t#include <fog_fragment>\r\n\r\n}\r\n",meshbasic_vert="#include <common>\r\n#include <uv_pars_vertex>\r\n#include <uv2_pars_vertex>\r\n#include <envmap_pars_vertex>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\t#include <uv2_vertex>\r\n\t#include <color_vertex>\r\n\t#include <skinbase_vertex>\r\n\r\n\t#ifdef USE_ENVMAP\r\n\r\n\t#include <beginnormal_vertex>\r\n\t#include <morphnormal_vertex>\r\n\t#include <skinnormal_vertex>\r\n\t#include <defaultnormal_vertex>\r\n\r\n\t#endif\r\n\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <project_vertex>\r\n\t#include <logdepthbuf_vertex>\r\n\r\n\t#include <worldpos_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\t#include <envmap_vertex>\r\n\t#include <fog_vertex>\r\n\r\n}\r\n",meshlambert_frag="uniform vec3 diffuse;\r\nuniform vec3 emissive;\r\nuniform float opacity;\r\n\r\nvarying vec3 vLightFront;\r\n\r\n#ifdef DOUBLE_SIDED\r\n\r\n\tvarying vec3 vLightBack;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <dithering_pars_fragment>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <uv2_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <emissivemap_pars_fragment>\r\n#include <envmap_pars_fragment>\r\n#include <bsdfs>\r\n#include <lights_pars_begin>\r\n#include <lights_pars_maps>\r\n#include <fog_pars_fragment>\r\n#include <shadowmap_pars_fragment>\r\n#include <shadowmask_pars_fragment>\r\n#include <specularmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\t#include <clipping_planes_fragment>\r\n\r\n\tvec4 diffuseColor = vec4( diffuse, opacity );\r\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\r\n\tvec3 totalEmissiveRadiance = emissive;\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <map_fragment>\r\n\t#include <color_fragment>\r\n\t#include <alphamap_fragment>\r\n\t#include <alphatest_fragment>\r\n\t#include <specularmap_fragment>\r\n\t#include <emissivemap_fragment>\r\n\r\n\t// accumulation\r\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\r\n\r\n\t#include <lightmap_fragment>\r\n\r\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\r\n\r\n\t#ifdef DOUBLE_SIDED\r\n\r\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\r\n\r\n\t#else\r\n\r\n\t\treflectedLight.directDiffuse = vLightFront;\r\n\r\n\t#endif\r\n\r\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\r\n\r\n\t// modulation\r\n\t#include <aomap_fragment>\r\n\r\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\r\n\r\n\t#include <envmap_fragment>\r\n\r\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n\t#include <tonemapping_fragment>\r\n\t#include <encodings_fragment>\r\n\t#include <fog_fragment>\r\n\t#include <premultiplied_alpha_fragment>\r\n\t#include <dithering_fragment>\r\n\r\n}\r\n",meshlambert_vert="#define LAMBERT\r\n\r\nvarying vec3 vLightFront;\r\n\r\n#ifdef DOUBLE_SIDED\r\n\r\n\tvarying vec3 vLightBack;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <uv_pars_vertex>\r\n#include <uv2_pars_vertex>\r\n#include <envmap_pars_vertex>\r\n#include <bsdfs>\r\n#include <lights_pars_begin>\r\n#include <lights_pars_maps>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\t#include <uv2_vertex>\r\n\t#include <color_vertex>\r\n\r\n\t#include <beginnormal_vertex>\r\n\t#include <morphnormal_vertex>\r\n\t#include <skinbase_vertex>\r\n\t#include <skinnormal_vertex>\r\n\t#include <defaultnormal_vertex>\r\n\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <project_vertex>\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\r\n\t#include <worldpos_vertex>\r\n\t#include <envmap_vertex>\r\n\t#include <lights_lambert_vertex>\r\n\t#include <shadowmap_vertex>\r\n\t#include <fog_vertex>\r\n\r\n}\r\n",meshphong_frag="#define PHONG\r\n\r\nuniform vec3 diffuse;\r\nuniform vec3 emissive;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <dithering_pars_fragment>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <uv2_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <emissivemap_pars_fragment>\r\n#include <envmap_pars_fragment>\r\n#include <gradientmap_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <bsdfs>\r\n#include <lights_pars_begin>\r\n#include <lights_pars_maps>\r\n#include <lights_phong_pars_fragment>\r\n#include <shadowmap_pars_fragment>\r\n#include <bumpmap_pars_fragment>\r\n#include <normalmap_pars_fragment>\r\n#include <specularmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\t#include <clipping_planes_fragment>\r\n\r\n\tvec4 diffuseColor = vec4( diffuse, opacity );\r\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\r\n\tvec3 totalEmissiveRadiance = emissive;\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <map_fragment>\r\n\t#include <color_fragment>\r\n\t#include <alphamap_fragment>\r\n\t#include <alphatest_fragment>\r\n\t#include <specularmap_fragment>\r\n\t#include <normal_fragment_begin>\r\n\t#include <normal_fragment_maps>\r\n\t#include <emissivemap_fragment>\r\n\r\n\t// accumulation\r\n\t#include <lights_phong_fragment>\r\n\t#include <lights_fragment_begin>\r\n\t#include <lights_fragment_maps>\r\n\t#include <lights_fragment_end>\r\n\r\n\t// modulation\r\n\t#include <aomap_fragment>\r\n\r\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\r\n\r\n\t#include <envmap_fragment>\r\n\r\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n\t#include <tonemapping_fragment>\r\n\t#include <encodings_fragment>\r\n\t#include <fog_fragment>\r\n\t#include <premultiplied_alpha_fragment>\r\n\t#include <dithering_fragment>\r\n\r\n}\r\n",meshphong_vert="#define PHONG\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n\tvarying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <uv_pars_vertex>\r\n#include <uv2_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <envmap_pars_vertex>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\t#include <uv2_vertex>\r\n\t#include <color_vertex>\r\n\r\n\t#include <beginnormal_vertex>\r\n\t#include <morphnormal_vertex>\r\n\t#include <skinbase_vertex>\r\n\t#include <skinnormal_vertex>\r\n\t#include <defaultnormal_vertex>\r\n\r\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\r\n\r\n\tvNormal = normalize( transformedNormal );\r\n\r\n#endif\r\n\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <displacementmap_vertex>\r\n\t#include <project_vertex>\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\r\n\tvViewPosition = - mvPosition.xyz;\r\n\r\n\t#include <worldpos_vertex>\r\n\t#include <envmap_vertex>\r\n\t#include <shadowmap_vertex>\r\n\t#include <fog_vertex>\r\n\r\n}\r\n",meshphysical_frag="#define PHYSICAL\r\n\r\nuniform vec3 diffuse;\r\nuniform vec3 emissive;\r\nuniform float roughness;\r\nuniform float metalness;\r\nuniform float opacity;\r\n\r\n#ifndef STANDARD\r\n\tuniform float clearCoat;\r\n\tuniform float clearCoatRoughness;\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n\tvarying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <dithering_pars_fragment>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <uv2_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <emissivemap_pars_fragment>\r\n#include <envmap_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <bsdfs>\r\n#include <cube_uv_reflection_fragment>\r\n#include <lights_pars_begin>\r\n#include <lights_pars_maps>\r\n#include <lights_physical_pars_fragment>\r\n#include <shadowmap_pars_fragment>\r\n#include <bumpmap_pars_fragment>\r\n#include <normalmap_pars_fragment>\r\n#include <roughnessmap_pars_fragment>\r\n#include <metalnessmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\t#include <clipping_planes_fragment>\r\n\r\n\tvec4 diffuseColor = vec4( diffuse, opacity );\r\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\r\n\tvec3 totalEmissiveRadiance = emissive;\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <map_fragment>\r\n\t#include <color_fragment>\r\n\t#include <alphamap_fragment>\r\n\t#include <alphatest_fragment>\r\n\t#include <roughnessmap_fragment>\r\n\t#include <metalnessmap_fragment>\r\n\t#include <normal_fragment_begin>\r\n\t#include <normal_fragment_maps>\r\n\t#include <emissivemap_fragment>\r\n\r\n\t// accumulation\r\n\t#include <lights_physical_fragment>\r\n\t#include <lights_fragment_begin>\r\n\t#include <lights_fragment_maps>\r\n\t#include <lights_fragment_end>\r\n\r\n\t// modulation\r\n\t#include <aomap_fragment>\r\n\r\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\r\n\r\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n\t#include <tonemapping_fragment>\r\n\t#include <encodings_fragment>\r\n\t#include <fog_fragment>\r\n\t#include <premultiplied_alpha_fragment>\r\n\t#include <dithering_fragment>\r\n\r\n}\r\n",meshphysical_vert="#define PHYSICAL\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n\tvarying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <uv_pars_vertex>\r\n#include <uv2_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\t#include <uv2_vertex>\r\n\t#include <color_vertex>\r\n\r\n\t#include <beginnormal_vertex>\r\n\t#include <morphnormal_vertex>\r\n\t#include <skinbase_vertex>\r\n\t#include <skinnormal_vertex>\r\n\t#include <defaultnormal_vertex>\r\n\r\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\r\n\r\n\tvNormal = normalize( transformedNormal );\r\n\r\n#endif\r\n\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <displacementmap_vertex>\r\n\t#include <project_vertex>\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\r\n\tvViewPosition = - mvPosition.xyz;\r\n\r\n\t#include <worldpos_vertex>\r\n\t#include <shadowmap_vertex>\r\n\t#include <fog_vertex>\r\n\r\n}\r\n",normal_frag="#define NORMAL\r\n\r\nuniform float opacity;\r\n\r\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\r\n\r\n\tvarying vec3 vViewPosition;\r\n\r\n#endif\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n\tvarying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <packing>\r\n#include <uv_pars_fragment>\r\n#include <bumpmap_pars_fragment>\r\n#include <normalmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <normal_fragment_begin>\r\n\t#include <normal_fragment_maps>\r\n\r\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\r\n\r\n}\r\n",normal_vert="#define NORMAL\r\n\r\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\r\n\r\n\tvarying vec3 vViewPosition;\r\n\r\n#endif\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n\tvarying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <uv_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\r\n\t#include <beginnormal_vertex>\r\n\t#include <morphnormal_vertex>\r\n\t#include <skinbase_vertex>\r\n\t#include <skinnormal_vertex>\r\n\t#include <defaultnormal_vertex>\r\n\r\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\r\n\r\n\tvNormal = normalize( transformedNormal );\r\n\r\n#endif\r\n\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <displacementmap_vertex>\r\n\t#include <project_vertex>\r\n\t#include <logdepthbuf_vertex>\r\n\r\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\r\n\r\n\tvViewPosition = - mvPosition.xyz;\r\n\r\n#endif\r\n\r\n}\r\n",points_frag="uniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <color_pars_fragment>\r\n#include <map_particle_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <shadowmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\t#include <clipping_planes_fragment>\r\n\r\n\tvec3 outgoingLight = vec3( 0.0 );\r\n\tvec4 diffuseColor = vec4( diffuse, opacity );\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <map_particle_fragment>\r\n\t#include <color_fragment>\r\n\t#include <alphatest_fragment>\r\n\r\n\toutgoingLight = diffuseColor.rgb;\r\n\r\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n\t#include <premultiplied_alpha_fragment>\r\n\t#include <tonemapping_fragment>\r\n\t#include <encodings_fragment>\r\n\t#include <fog_fragment>\r\n\r\n}\r\n",points_vert="uniform float size;\r\nuniform float scale;\r\n\r\n#include <common>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <color_vertex>\r\n\t#include <begin_vertex>\r\n\t#include <project_vertex>\r\n\r\n\t#ifdef USE_SIZEATTENUATION\r\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\r\n\t#else\r\n\t\tgl_PointSize = size;\r\n\t#endif\r\n\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\t#include <worldpos_vertex>\r\n\t#include <shadowmap_vertex>\r\n\t#include <fog_vertex>\r\n\r\n}\r\n",shadow_frag="uniform vec3 color;\r\nuniform float opacity;\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <fog_pars_fragment>\r\n#include <bsdfs>\r\n#include <lights_pars_begin>\r\n#include <shadowmap_pars_fragment>\r\n#include <shadowmask_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\r\n\r\n\t#include <fog_fragment>\r\n\r\n}\r\n",shadow_vert="#include <fog_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <begin_vertex>\r\n\t#include <project_vertex>\r\n\t#include <worldpos_vertex>\r\n\t#include <shadowmap_vertex>\r\n\t#include <fog_vertex>\r\n\r\n}\r\n",ShaderChunk={alphamap_fragment:alphamap_fragment,alphamap_pars_fragment:alphamap_pars_fragment,alphatest_fragment:alphatest_fragment,aomap_fragment:aomap_fragment,aomap_pars_fragment:aomap_pars_fragment,begin_vertex:begin_vertex,beginnormal_vertex:beginnormal_vertex,bsdfs:bsdfs,bumpmap_pars_fragment:bumpmap_pars_fragment,clipping_planes_fragment:clipping_planes_fragment,clipping_planes_pars_fragment:clipping_planes_pars_fragment,clipping_planes_pars_vertex:clipping_planes_pars_vertex,clipping_planes_vertex:clipping_planes_vertex,color_fragment:color_fragment,color_pars_fragment:color_pars_fragment,color_pars_vertex:color_pars_vertex,color_vertex:color_vertex,common:common,cube_uv_reflection_fragment:cube_uv_reflection_fragment,defaultnormal_vertex:defaultnormal_vertex,displacementmap_pars_vertex:displacementmap_pars_vertex,displacementmap_vertex:displacementmap_vertex,emissivemap_fragment:emissivemap_fragment,emissivemap_pars_fragment:emissivemap_pars_fragment,encodings_fragment:encodings_fragment,encodings_pars_fragment:encodings_pars_fragment,envmap_fragment:envmap_fragment,envmap_pars_fragment:envmap_pars_fragment,envmap_pars_vertex:envmap_pars_vertex,envmap_vertex:envmap_vertex,fog_vertex:fog_vertex,fog_pars_vertex:fog_pars_vertex,fog_fragment:fog_fragment,fog_pars_fragment:fog_pars_fragment,gradientmap_pars_fragment:gradientmap_pars_fragment,lightmap_fragment:lightmap_fragment,lightmap_pars_fragment:lightmap_pars_fragment,lights_lambert_vertex:lights_lambert_vertex,lights_pars_begin:lights_pars_begin,lights_pars_maps:lights_pars_maps,lights_phong_fragment:lights_phong_fragment,lights_phong_pars_fragment:lights_phong_pars_fragment,lights_physical_fragment:lights_physical_fragment,lights_physical_pars_fragment:lights_physical_pars_fragment,lights_fragment_begin:lights_fragment_begin,lights_fragment_maps:lights_fragment_maps,lights_fragment_end:lights_fragment_end,logdepthbuf_fragment:logdepthbuf_fragment,logdepthbuf_pars_fragment:logdepthbuf_pars_fragment,logdepthbuf_pars_vertex:logdepthbuf_pars_vertex,logdepthbuf_vertex:logdepthbuf_vertex,map_fragment:map_fragment,map_pars_fragment:map_pars_fragment,map_particle_fragment:map_particle_fragment,map_particle_pars_fragment:map_particle_pars_fragment,metalnessmap_fragment:metalnessmap_fragment,metalnessmap_pars_fragment:metalnessmap_pars_fragment,morphnormal_vertex:morphnormal_vertex,morphtarget_pars_vertex:morphtarget_pars_vertex,morphtarget_vertex:morphtarget_vertex,normal_fragment_begin:normal_fragment_begin,normal_fragment_maps:normal_fragment_maps,normalmap_pars_fragment:normalmap_pars_fragment,packing:packing,premultiplied_alpha_fragment:premultiplied_alpha_fragment,project_vertex:project_vertex,dithering_fragment:dithering_fragment,dithering_pars_fragment:dithering_pars_fragment,roughnessmap_fragment:roughnessmap_fragment,roughnessmap_pars_fragment:roughnessmap_pars_fragment,shadowmap_pars_fragment:shadowmap_pars_fragment,shadowmap_pars_vertex:shadowmap_pars_vertex,shadowmap_vertex:shadowmap_vertex,shadowmask_pars_fragment:shadowmask_pars_fragment,skinbase_vertex:skinbase_vertex,skinning_pars_vertex:skinning_pars_vertex,skinning_vertex:skinning_vertex,skinnormal_vertex:skinnormal_vertex,specularmap_fragment:specularmap_fragment,specularmap_pars_fragment:specularmap_pars_fragment,tonemapping_fragment:tonemapping_fragment,tonemapping_pars_fragment:tonemapping_pars_fragment,uv_pars_fragment:uv_pars_fragment,uv_pars_vertex:uv_pars_vertex,uv_vertex:uv_vertex,uv2_pars_fragment:uv2_pars_fragment,uv2_pars_vertex:uv2_pars_vertex,uv2_vertex:uv2_vertex,worldpos_vertex:worldpos_vertex,cube_frag:cube_frag,cube_vert:cube_vert,depth_frag:depth_frag,depth_vert:depth_vert,distanceRGBA_frag:distanceRGBA_frag,distanceRGBA_vert:distanceRGBA_vert,equirect_frag:equirect_frag,equirect_vert:equirect_vert,linedashed_frag:linedashed_frag,linedashed_vert:linedashed_vert,meshbasic_frag:meshbasic_frag,meshbasic_vert:meshbasic_vert,meshlambert_frag:meshlambert_frag,meshlambert_vert:meshlambert_vert,meshphong_frag:meshphong_frag,meshphong_vert:meshphong_vert,meshphysical_frag:meshphysical_frag,meshphysical_vert:meshphysical_vert,normal_frag:normal_frag,normal_vert:normal_vert,points_frag:points_frag,points_vert:points_vert,shadow_frag:shadow_frag,shadow_vert:shadow_vert},ShaderLib={basic:{uniforms:UniformsUtils.merge([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.fog]),vertexShader:ShaderChunk.meshbasic_vert,fragmentShader:ShaderChunk.meshbasic_frag},lambert:{uniforms:UniformsUtils.merge([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)}}]),vertexShader:ShaderChunk.meshlambert_vert,fragmentShader:ShaderChunk.meshlambert_frag},phong:{uniforms:UniformsUtils.merge([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.gradientmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},specular:{value:new Color(1118481)},shininess:{value:30}}]),vertexShader:ShaderChunk.meshphong_vert,fragmentShader:ShaderChunk.meshphong_frag},standard:{uniforms:UniformsUtils.merge([UniformsLib.common,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.roughnessmap,UniformsLib.metalnessmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},points:{uniforms:UniformsUtils.merge([UniformsLib.points,UniformsLib.fog]),vertexShader:ShaderChunk.points_vert,fragmentShader:ShaderChunk.points_frag},dashed:{uniforms:UniformsUtils.merge([UniformsLib.common,UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ShaderChunk.linedashed_vert,fragmentShader:ShaderChunk.linedashed_frag},depth:{uniforms:UniformsUtils.merge([UniformsLib.common,UniformsLib.displacementmap]),vertexShader:ShaderChunk.depth_vert,fragmentShader:ShaderChunk.depth_frag},normal:{uniforms:UniformsUtils.merge([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,{opacity:{value:1}}]),vertexShader:ShaderChunk.normal_vert,fragmentShader:ShaderChunk.normal_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ShaderChunk.cube_vert,fragmentShader:ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ShaderChunk.equirect_vert,fragmentShader:ShaderChunk.equirect_frag},distanceRGBA:{uniforms:UniformsUtils.merge([UniformsLib.common,UniformsLib.displacementmap,{referencePosition:{value:new Vector3},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ShaderChunk.distanceRGBA_vert,fragmentShader:ShaderChunk.distanceRGBA_frag},shadow:{uniforms:UniformsUtils.merge([UniformsLib.lights,UniformsLib.fog,{color:{value:new Color(0)},opacity:{value:1}}]),vertexShader:ShaderChunk.shadow_vert,fragmentShader:ShaderChunk.shadow_frag}};ShaderLib.physical={uniforms:UniformsUtils.merge([ShaderLib.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},UniformsLib.line={linewidth:{value:1},resolution:{value:new Vector2(1,1)},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}},ShaderLib.line={uniforms:UniformsUtils.merge([UniformsLib.common,UniformsLib.fog,UniformsLib.line]),vertexShader:"\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\tvarying vec2 vUv;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\tvUv = uv;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec2 ndcStart = clipStart.xy / clipStart.w;\n\t\t\tvec2 ndcEnd = clipEnd.xy / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd - ndcStart;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t// perpendicular to dir\n\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\n\t\t\t// undo aspect ratio adjustment\n\t\t\tdir.x /= aspect;\n\t\t\toffset.x /= aspect;\n\n\t\t\t// sign flip\n\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t// endcaps\n\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\toffset += - dir;\n\n\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\toffset += dir;\n\n\t\t\t}\n\n\t\t\t// adjust for linewidth\n\t\t\toffset *= linewidth;\n\n\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\toffset /= resolution.y;\n\n\t\t\t// select end\n\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t// back to clip space\n\t\t\toffset *= clip.w;\n\n\t\t\tclip.xy += offset;\n\n\t\t\tgl_Position = clip;\n\n\t\t\t#include <logdepthbuf_vertex>\n\n\t\t\t#include <worldpos_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t",fragmentShader:"\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashSize;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < 0.5 || vUv.y > 0.5 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\tif ( vUv.y < 0.5 || vUv.y > 0.5 ) {\n\n\t\t\t\tfloat a = vUv.x - 0.5;\n\t\t\t\tfloat b = vUv.y - 0.5;\n\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\tif ( len2 > 0.25 ) discard;\n\n\t\t\t}\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, diffuseColor.a );\n\n\t\t\t#include <premultiplied_alpha_fragment>\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <encodings_fragment>\n\t\t\t#include <fog_fragment>\n\n\t\t}\n\t\t"};var LineMaterial=function(e){ShaderMaterial.call(this,{type:"LineMaterial",uniforms:UniformsUtils.clone(ShaderLib.line.uniforms),vertexShader:ShaderLib.line.vertexShader,fragmentShader:ShaderLib.line.fragmentShader}),this.dashed=!1,Object.defineProperties(this,{color:{enumerable:!0,get:function(){return this.uniforms.diffuse.value},set:function(e){this.uniforms.diffuse.value=e}},linewidth:{enumerable:!0,get:function(){return this.uniforms.linewidth.value},set:function(e){this.uniforms.linewidth.value=e}},dashScale:{enumerable:!0,get:function(){return this.uniforms.dashScale.value},set:function(e){this.uniforms.dashScale.value=e}},dashSize:{enumerable:!0,get:function(){return this.uniforms.dashSize.value},set:function(e){this.uniforms.dashSize.value=e}},gapSize:{enumerable:!0,get:function(){return this.uniforms.gapSize.value},set:function(e){this.uniforms.gapSize.value=e}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(e){this.uniforms.resolution.value.copy(e)}}}),this.setValues(e)};LineMaterial.prototype=Object.create(ShaderMaterial.prototype),LineMaterial.prototype.constructor=LineMaterial,LineMaterial.prototype.isLineMaterial=!0,LineMaterial.prototype.copy=function(e){return ShaderMaterial.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.resolution=e.resolution,this};var Wireframe=function(e,t){Mesh.call(this),this.type="Wireframe",this.geometry=void 0!==e?e:new LineSegmentsGeometry,this.material=void 0!==t?t:new LineMaterial({color:16777215*Math.random()})};Wireframe.prototype=Object.assign(Object.create(Mesh.prototype),{constructor:Wireframe,isWireframe:!0,computeLineDistances:function(){var e=new Vector3,t=new Vector3;return function(){for(var r=this.geometry,n=r.attributes.instanceStart,i=r.attributes.instanceEnd,a=new Float32Array(2*n.data.count),o=0,s=0,c=n.data.count;o<c;o++,s+=2)e.fromBufferAttribute(n,o),t.fromBufferAttribute(i,o),a[s]=0===s?0:a[s-1],a[s+1]=a[s]+e.distanceTo(t);var l=new InstancedInterleavedBuffer(a,2,1);return r.addAttribute("instanceDistanceStart",new InterleavedBufferAttribute(l,1,0)),r.addAttribute("instanceDistanceEnd",new InterleavedBufferAttribute(l,1,1)),this}}(),copy:function(e){return this}});var WireframeGeometry2=function(e){LineSegmentsGeometry.call(this),this.type="WireframeGeometry2",this.fromWireframeGeometry(new WireframeGeometry(e))};WireframeGeometry2.prototype=Object.assign(Object.create(LineSegmentsGeometry.prototype),{constructor:WireframeGeometry2,isWireframeGeometry2:!0,copy:function(e){return this}});var Cache={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}},DefaultLoadingManager=new LoadingManager,loading={};Object.assign(FileLoader.prototype,{load:function(e,t,r,n){var i=this;void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var a=this,o=Cache.get(e);if(void 0!==o)return a.manager.itemStart(e),setTimeout(function(){t&&t(o),a.manager.itemEnd(e)},0),o;if(void 0!==loading[e])return void loading[e].push({onLoad:t,onProgress:r,onError:n});var s=e.match(/^data:(.*?)(;base64)?,(.*)$/);if(s){var c=s[1],l=!!s[2],u=s[3];u=window.decodeURIComponent(u),l&&(u=window.atob(u));try{var h,p=(this.responseType||"").toLowerCase();switch(p){case"arraybuffer":case"blob":for(var d=new Uint8Array(u.length),f=0;f<u.length;f++)d[f]=u.charCodeAt(f);h="blob"===p?new Blob([d.buffer],{type:c}):d.buffer;break;case"document":var m=new DOMParser;h=m.parseFromString(u,c);break;case"json":h=JSON.parse(u);break;default:h=u}window.setTimeout(function(){t&&t(h),a.manager.itemEnd(e)},0)}catch(t){window.setTimeout(function(){n&&n(t),a.manager.itemEnd(e),a.manager.itemError(e)},0)}}else{loading[e]=[],loading[e].push({onLoad:t,onProgress:r,onError:n});var v=new XMLHttpRequest;v.open("GET",e,!0),v.addEventListener("load",function(t){var r=this.response;Cache.add(e,r);var n=loading[e];if(delete loading[e],200===this.status){for(var i=0,o=n.length;i<o;i++)(s=n[i]).onLoad&&s.onLoad(r);a.manager.itemEnd(e)}else if(0===this.status){console.warn("FileLoader: HTTP Status 0 received.");for(var i=0,o=n.length;i<o;i++)(s=n[i]).onLoad&&s.onLoad(r);a.manager.itemEnd(e)}else{for(var i=0,o=n.length;i<o;i++){var s=n[i];s.onError&&s.onError(t)}a.manager.itemEnd(e),a.manager.itemError(e)}},!1),v.addEventListener("progress",function(t){for(var r=loading[e],n=0,i=r.length;n<i;n++){var a=r[n];a.onProgress&&a.onProgress(t)}},!1),v.addEventListener("error",function(t){var r=loading[e];delete loading[e];for(var n=0,i=r.length;n<i;n++){var o=r[n];o.onError&&o.onError(t)}a.manager.itemEnd(e),a.manager.itemError(e)},!1),void 0!==this.responseType&&(v.responseType=this.responseType),void 0!==this.withCredentials&&(v.withCredentials=this.withCredentials),v.overrideMimeType&&v.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(var g in i.requestHeader)v.setRequestHeader(g,i.requestHeader[g]);v.send(null)}return a.manager.itemStart(e),v},setPath:function(e){return this.path=e,this},setResponseType:function(e){return this.responseType=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setMimeType:function(e){return this.mimeType=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}});var PDBLoader=function(e){this.manager=void 0!==e?e:DefaultLoadingManager};PDBLoader.prototype={constructor:PDBLoader,load:function(e,t,r,n){var i=this;new FileLoader(i.manager).load(e,function(e){t(i.parse(e))},r,n)},parse:function(e){function t(e){return e.replace(/^\s\s*/,"").replace(/\s\s*$/,"")}function r(e,t){return"s"+Math.min(e,t)+"e"+Math.max(e,t)}function n(e,t){var n=parseInt(d[f].substr(e,t));if(n){var i=r(v,n);void 0===p[i]&&(h.push([v-1,n-1,1]),p[i]=h.length-1)}}for(var i,a,o,s,c,l={h:[255,255,255],he:[217,255,255],li:[204,128,255],be:[194,255,0],b:[255,181,181],c:[144,144,144],n:[48,80,248],o:[255,13,13],f:[144,224,80],ne:[179,227,245],na:[171,92,242],mg:[138,255,0],al:[191,166,166],si:[240,200,160],p:[255,128,0],s:[255,255,48],cl:[31,240,31],ar:[128,209,227],k:[143,64,212],ca:[61,255,0],sc:[230,230,230],ti:[191,194,199],v:[166,166,171],cr:[138,153,199],mn:[156,122,199],fe:[224,102,51],co:[240,144,160],ni:[80,208,80],cu:[200,128,51],zn:[125,128,176],ga:[194,143,143],ge:[102,143,143],as:[189,128,227],se:[255,161,0],br:[166,41,41],kr:[92,184,209],rb:[112,46,176],sr:[0,255,0],y:[148,255,255],zr:[148,224,224],nb:[115,194,201],mo:[84,181,181],tc:[59,158,158],ru:[36,143,143],rh:[10,125,140],pd:[0,105,133],ag:[192,192,192],cd:[255,217,143],in:[166,117,115],sn:[102,128,128],sb:[158,99,181],te:[212,122,0],i:[148,0,148],xe:[66,158,176],cs:[87,23,143],ba:[0,201,0],la:[112,212,255],ce:[255,255,199],pr:[217,255,199],nd:[199,255,199],pm:[163,255,199],sm:[143,255,199],eu:[97,255,199],gd:[69,255,199],tb:[48,255,199],dy:[31,255,199],ho:[0,255,156],er:[0,230,117],tm:[0,212,82],yb:[0,191,56],lu:[0,171,36],hf:[77,194,255],ta:[77,166,255],w:[33,148,214],re:[38,125,171],os:[38,102,150],ir:[23,84,135],pt:[208,208,224],au:[255,209,35],hg:[184,184,208],tl:[166,84,77],pb:[87,89,97],bi:[158,79,181],po:[171,92,0],at:[117,79,69],rn:[66,130,150],fr:[66,0,102],ra:[0,125,0],ac:[112,171,250],th:[0,186,255],pa:[0,161,255],u:[0,143,255],np:[0,128,255],pu:[0,107,255],am:[84,92,242],cm:[120,92,227],bk:[138,79,227],cf:[161,54,212],es:[179,31,212],fm:[179,31,186],md:[179,13,166],no:[189,13,135],lr:[199,0,102],rf:[204,0,89],db:[209,0,79],sg:[217,0,69],bh:[224,0,56],hs:[230,0,46],mt:[235,0,38],ds:[235,0,38],rg:[235,0,38],cn:[235,0,38],uut:[235,0,38],uuq:[235,0,38],uup:[235,0,38],uuh:[235,0,38],uus:[235,0,38],uuo:[235,0,38]},u=[],h=[],p={},d=e.split("\n"),f=0,m=d.length;f<m;f++)if("ATOM"===d[f].substr(0,4)||"HETATM"===d[f].substr(0,6))i=parseFloat(d[f].substr(30,7)),a=parseFloat(d[f].substr(38,7)),o=parseFloat(d[f].substr(46,7)),s=parseInt(d[f].substr(6,5))-1,""===(c=t(d[f].substr(76,2)).toLowerCase())&&(c=t(d[f].substr(12,2)).toLowerCase()),u[s]=[i,a,o,l[c],function(e){return e.charAt(0).toUpperCase()+e.substr(1).toLowerCase()}(c)];else if("CONECT"===d[f].substr(0,6)){var v=parseInt(d[f].substr(6,5));n(11,5),n(16,5),n(21,5),n(26,5)}return function(){var e,t,r={geometryAtoms:new BufferGeometry,geometryBonds:new BufferGeometry,json:{atoms:u,bonds:h}},n=r.geometryAtoms,i=r.geometryBonds,a=[],o=[],s=[];for(e=0,t=u.length;e<t;e++)if(u&&u.length>2){var c=u[e],l=c[0],p=c[1],d=c[2];a.push(l,p,d);var f=c[3][0]/255,m=c[3][1]/255,v=c[3][2]/255;o.push(f,m,v)}for(e=0,t=h.length;e<t;e++){if(g&&h.length>1)var g=h[e],y=g[0],x=g[1];s.push(a[3*y+0]),s.push(a[3*y+1]),s.push(a[3*y+2]),s.push(a[3*x+0]),s.push(a[3*x+1]),s.push(a[3*x+2])}return n.addAttribute("position",new Float32BufferAttribute(a,3)),n.addAttribute("color",new Float32BufferAttribute(o,3)),i.addAttribute("position",new Float32BufferAttribute(s,3)),r}()}},Object.assign(Frustum.prototype,{set:function(e,t,r,n,i,a){var o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(r),o[3].copy(n),o[4].copy(i),o[5].copy(a),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){for(var t=this.planes,r=0;r<6;r++)t[r].copy(e.planes[r]);return this},setFromMatrix:function(e){var t=this.planes,r=e.elements,n=r[0],i=r[1],a=r[2],o=r[3],s=r[4],c=r[5],l=r[6],u=r[7],h=r[8],p=r[9],d=r[10],f=r[11],m=r[12],v=r[13],g=r[14],y=r[15];return t[0].setComponents(o-n,u-s,f-h,y-m).normalize(),t[1].setComponents(o+n,u+s,f+h,y+m).normalize(),t[2].setComponents(o+i,u+c,f+p,y+v).normalize(),t[3].setComponents(o-i,u-c,f-p,y-v).normalize(),t[4].setComponents(o-a,u-l,f-d,y-g).normalize(),t[5].setComponents(o+a,u+l,f+d,y+g).normalize(),this},intersectsObject:function(){var e=new Sphere;return function(t){var r=t.geometry;return null===r.boundingSphere&&r.computeBoundingSphere(),e.copy(r.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSprite:function(){var e=new Sphere;return function(t){return e.center.set(0,0,0),e.radius=.7071067811865476,e.applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSphere:function(e){for(var t=this.planes,r=e.center,n=-e.radius,i=0;i<6;i++)if(t[i].distanceToPoint(r)<n)return!1;return!0},intersectsBox:function(){var e=new Vector3,t=new Vector3;return function(r){for(var n=this.planes,i=0;i<6;i++){var a=n[i];e.x=a.normal.x>0?r.min.x:r.max.x,t.x=a.normal.x>0?r.max.x:r.min.x,e.y=a.normal.y>0?r.min.y:r.max.y,t.y=a.normal.y>0?r.max.y:r.min.y,e.z=a.normal.z>0?r.min.z:r.max.z,t.z=a.normal.z>0?r.max.z:r.min.z;var o=a.distanceToPoint(e),s=a.distanceToPoint(t);if(o<0&&s<0)return!1}return!0}}(),containsPoint:function(e){for(var t=this.planes,r=0;r<6;r++)if(t[r].distanceToPoint(e)<0)return!1;return!0}}),Light.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Light,isLight:!0,copy:function(e){return Object3D.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){var t=Object3D.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}),LineBasicMaterial.prototype=Object.create(Material.prototype),LineBasicMaterial.prototype.constructor=LineBasicMaterial,LineBasicMaterial.prototype.isLineBasicMaterial=!0,LineBasicMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this},Line.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Line,isLine:!0,computeLineDistances:function(){var e=new Vector3,t=new Vector3;return function(){var r=this.geometry;if(r.isBufferGeometry)if(null===r.index){for(var n=r.attributes.position,i=[0],a=1,o=n.count;a<o;a++)e.fromBufferAttribute(n,a-1),t.fromBufferAttribute(n,a),i[a]=i[a-1],i[a]+=e.distanceTo(t);r.addAttribute("lineDistance",new Float32BufferAttribute(i,1))}else console.error("Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(r.isGeometry){var s=r.vertices;(i=r.lineDistances)[0]=0;for(var a=1,o=s.length;a<o;a++)i[a]=i[a-1],i[a]+=s[a-1].distanceTo(s[a])}return this}}(),raycast:function(){var e=new Matrix4,t=new Ray,r=new Sphere;return function(n,i){var a=this,o=n.linePrecision,s=o*o,c=this.geometry,l=this.matrixWorld;if(null===c.boundingSphere&&c.computeBoundingSphere(),r.copy(c.boundingSphere),r.applyMatrix4(l),!1!==n.ray.intersectsSphere(r)){e.getInverse(l),t.copy(n.ray).applyMatrix4(e);var u=new Vector3,h=new Vector3,p=new Vector3,d=new Vector3,f=this&&this.isLineSegments?2:1;if(c.isBufferGeometry){var m=c.index,v=c.attributes.position.array;if(null!==m)for(var g=m.array,y=0,x=g.length-1;y<x;y+=f){var b=g[y],_=g[y+1];u.fromArray(v,3*b),h.fromArray(v,3*_),(S=t.distanceSqToSegment(u,h,d,p))>s||(d.applyMatrix4(a.matrixWorld),(L=n.ray.origin.distanceTo(d))<n.near||L>n.far||i.push({distance:L,point:p.clone().applyMatrix4(a.matrixWorld),index:y,face:null,faceIndex:null,object:a}))}else for(var y=0,x=v.length/3-1;y<x;y+=f)u.fromArray(v,3*y),h.fromArray(v,3*y+3),(S=t.distanceSqToSegment(u,h,d,p))>s||(d.applyMatrix4(a.matrixWorld),(L=n.ray.origin.distanceTo(d))<n.near||L>n.far||i.push({distance:L,point:p.clone().applyMatrix4(a.matrixWorld),index:y,face:null,faceIndex:null,object:a}))}else if(c.isGeometry)for(var M=c.vertices,w=M.length,y=0;y<w-1;y+=f){var S=t.distanceSqToSegment(M[y],M[y+1],d,p);if(!(S>s)){d.applyMatrix4(a.matrixWorld);var L=n.ray.origin.distanceTo(d);L<n.near||L>n.far||i.push({distance:L,point:p.clone().applyMatrix4(a.matrixWorld),index:y,face:null,faceIndex:null,object:a})}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),PointsMaterial.prototype=Object.create(Material.prototype),PointsMaterial.prototype.constructor=PointsMaterial,PointsMaterial.prototype.isPointsMaterial=!0,PointsMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this},Points.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Points,isPoints:!0,raycast:function(){var e=new Matrix4,t=new Ray,r=new Sphere;return function(n,i){function a(e,r){var a=t.distanceSqToPoint(e);if(a<h){t.closestPointToPoint(e,d),d.applyMatrix4(c);var s=n.ray.origin.distanceTo(d);if(s<n.near||s>n.far)return;i.push({distance:s,distanceToRay:Math.sqrt(a),point:d.clone(),index:r,face:null,object:o})}}var o=this,s=this.geometry,c=this.matrixWorld,l=n.params.Points.threshold;if(null===s.boundingSphere&&s.computeBoundingSphere(),r.copy(s.boundingSphere),r.applyMatrix4(c),r.radius+=l,!1!==n.ray.intersectsSphere(r)){e.getInverse(c),t.copy(n.ray).applyMatrix4(e);var u=l/((this.scale.x+this.scale.y+this.scale.z)/3),h=u*u,p=new Vector3,d=new Vector3;if(s.isBufferGeometry){var f=s.index,m=s.attributes.position.array;if(null!==f)for(var v=f.array,g=0,y=v.length;g<y;g++){var x=v[g];p.fromArray(m,3*x),a(p,x)}else for(var g=0,b=m.length/3;g<b;g++)p.fromArray(m,3*g),a(p,g)}else for(var _=s.vertices,g=0,b=_.length;g<b;g++)a(_[g],g)}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),SpriteMaterial.prototype=Object.create(Material.prototype),SpriteMaterial.prototype.constructor=SpriteMaterial,SpriteMaterial.prototype.isSpriteMaterial=!0,SpriteMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.rotation=e.rotation,this},Sprite.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Sprite,isSprite:!0,raycast:function(){var e=new Vector3,t=new Vector3,r=new Vector3;return function(n,i){t.setFromMatrixPosition(this.matrixWorld),n.ray.closestPointToPoint(t,e),r.setFromMatrixScale(this.matrixWorld);var a=r.x*r.y/4;if(!(t.distanceToSquared(e)>a)){var o=n.ray.origin.distanceTo(e);o<n.near||o>n.far||i.push({distance:o,point:e.clone(),face:null,object:this})}}}(),clone:function(){return new this.constructor(this.material).copy(this)},copy:function(e){return Object3D.prototype.copy.call(this,e),void 0!==e.center&&this.center.copy(e.center),this}}),LineSegments.prototype=Object.assign(Object.create(Line.prototype),{constructor:LineSegments,isLineSegments:!0,computeLineDistances:function(){var e=new Vector3,t=new Vector3;return function(){var r=this.geometry;if(r.isBufferGeometry)if(null===r.index){for(var n=r.attributes.position,i=[],a=0,o=n.count;a<o;a+=2)e.fromBufferAttribute(n,a),t.fromBufferAttribute(n,a+1),i[a]=0===a?0:i[a-1],i[a+1]=i[a]+e.distanceTo(t);r.addAttribute("lineDistance",new Float32BufferAttribute(i,1))}else console.warn("LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(r.isGeometry)for(var s=r.vertices,i=r.lineDistances,a=0,o=s.length;a<o;a+=2)e.copy(s[a]),t.copy(s[a+1]),i[a]=0===a?0:i[a-1],i[a+1]=i[a]+e.distanceTo(t);return this}}()});var RenderableObject=function(){this.id=0,this.object=null,this.z=0,this.renderOrder=0},RenderableFace=function(){this.id=0,this.v1=new RenderableVertex,this.v2=new RenderableVertex,this.v3=new RenderableVertex,this.normalModel=new Vector3,this.vertexNormalsModel=[new Vector3,new Vector3,new Vector3],this.vertexNormalsLength=0,this.color=new Color,this.material=null,this.uvs=[new Vector2,new Vector2,new Vector2],this.z=0,this.renderOrder=0},RenderableVertex=function(){this.position=new Vector3,this.positionWorld=new Vector3,this.positionScreen=new Vector4,this.visible=!0};RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)};var RenderableLine=function(){this.id=0,this.v1=new RenderableVertex,this.v2=new RenderableVertex,this.vertexColors=[new Color,new Color],this.material=null,this.z=0,this.renderOrder=0},RenderableSprite=function(){this.id=0,this.object=null,this.x=0,this.y=0,this.z=0,this.rotation=0,this.scale=new Vector2,this.material=null,this.renderOrder=0},Projector=function(){function e(r){if(!1!==r.visible){if(r instanceof Light)B.lights.push(r);else if(r instanceof Mesh||r instanceof Line||r instanceof Points){if(!1===r.material.visible)return;if(!0===r.frustumCulled&&!1===z.intersectsObject(r))return;t(r)}else if(r instanceof Sprite){if(!1===r.material.visible)return;if(!0===r.frustumCulled&&!1===z.intersectsSprite(r))return;t(r)}for(var n=r.children,i=0,a=n.length;i<a;i++)e(n[i])}}function t(e){(u=n()).id=e.id,u.object=e,D.setFromMatrixPosition(e.matrixWorld),D.applyMatrix4(I),u.z=D.z,u.renderOrder=e.renderOrder,B.objects.push(u)}function r(e,t,r){var n=1/e.w;e.z*=n,e.z>=-1&&e.z<=1&&((y=s()).id=t.id,y.x=e.x*n,y.y=e.y*n,y.z=e.z,y.renderOrder=t.renderOrder,y.object=t,y.rotation=t.rotation,y.scale.x=t.scale.x*Math.abs(y.x-(e.x+r.projectionMatrix.elements[0])/(e.w+r.projectionMatrix.elements[12])),y.scale.y=t.scale.y*Math.abs(y.y-(e.y+r.projectionMatrix.elements[5])/(e.w+r.projectionMatrix.elements[13])),y.material=t.material,B.elements.push(y))}function n(){if(h===M){var e=new RenderableObject;return _.push(e),M++,h++,e}return _[h++]}function i(){if(d===S){var e=new RenderableVertex;return w.push(e),S++,d++,e}return w[d++]}function a(){if(m===T){var e=new RenderableFace;return L.push(e),T++,m++,e}return L[m++]}function o(){if(g===A){var e=new RenderableLine;return C.push(e),A++,g++,e}return C[g++]}function s(){if(x===P){var e=new RenderableSprite;return E.push(e),P++,x++,e}return E[x++]}function c(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id!==t.id?e.id-t.id:0}function l(e,t){var r=0,n=1,i=e.z+e.w,a=t.z+t.w,o=-e.z+e.w,s=-t.z+t.w;return i>=0&&a>=0&&o>=0&&s>=0||!(i<0&&a<0||o<0&&s<0)&&(i<0?r=Math.max(r,i/(i-a)):a<0&&(n=Math.min(n,i/(i-a))),o<0?r=Math.max(r,o/(o-s)):s<0&&(n=Math.min(n,o/(o-s))),!(n<r)&&(e.lerp(t,r),t.lerp(e,1-n),!0))}var u,h,p,d,f,m,v,g,y,x,b,_=[],M=0,w=[],S=0,L=[],T=0,C=[],A=0,E=[],P=0,B={objects:[],lights:[],elements:[]},D=new Vector3,R=new Vector4,U=new Box3(new Vector3(-1,-1,-1),new Vector3(1,1,1)),N=new Box3,G=new Array(3),O=new Matrix4,I=new Matrix4,V=new Matrix4,F=new Matrix3,z=new Frustum,k=new Vector4,j=new Vector4;this.projectVector=function(e,t){console.warn("Projector: .projectVector() is now vector.project()."),e.project(t)},this.unprojectVector=function(e,t){console.warn("Projector: .unprojectVector() is now vector.unproject()."),e.unproject(t)},this.pickingRay=function(){console.error("Projector: .pickingRay() is now raycaster.setFromCamera().")};var W=new function(){function e(e){M=(_=e).material,S.getNormalMatrix(_.matrixWorld),g.length=0,y.length=0,x.length=0}function t(e){var t=e.position,r=e.positionWorld,n=e.positionScreen;r.copy(t).applyMatrix4(b),n.copy(r).applyMatrix4(I);var i=1/n.w;n.x*=i,n.y*=i,n.z*=i,e.visible=n.x>=-1&&n.x<=1&&n.y>=-1&&n.y<=1&&n.z>=-1&&n.z<=1}function r(e,r,n){(p=i()).position.set(e,r,n),t(p)}function n(e,t,r){g.push(e,t,r)}function s(e,t,r){y.push(e,t,r)}function c(e,t){x.push(e,t)}function u(e,t,r){return!0===e.visible||!0===t.visible||!0===r.visible||(G[0]=e.positionScreen,G[1]=t.positionScreen,G[2]=r.positionScreen,U.intersectsBox(N.setFromPoints(G)))}function h(e,t,r){return(r.positionScreen.x-e.positionScreen.x)*(t.positionScreen.y-e.positionScreen.y)-(r.positionScreen.y-e.positionScreen.y)*(t.positionScreen.x-e.positionScreen.x)<0}function d(e,t){var r=w[e],n=w[t];r.positionScreen.copy(r.position).applyMatrix4(V),n.positionScreen.copy(n.position).applyMatrix4(V),!0===l(r.positionScreen,n.positionScreen)&&(r.positionScreen.multiplyScalar(1/r.positionScreen.w),n.positionScreen.multiplyScalar(1/n.positionScreen.w),(v=o()).id=_.id,v.v1.copy(r),v.v2.copy(n),v.z=Math.max(r.positionScreen.z,n.positionScreen.z),v.renderOrder=_.renderOrder,v.material=_.material,_.material.vertexColors===VertexColors&&(v.vertexColors[0].fromArray(y,3*e),v.vertexColors[1].fromArray(y,3*t)),B.elements.push(v))}function m(e,t,r){var n=arguments,i=w[e],o=w[t],s=w[r];if(!1!==u(i,o,s)&&(M.side===DoubleSide||!0===h(i,o,s))){(f=a()).id=_.id,f.v1.copy(i),f.v2.copy(o),f.v3.copy(s),f.z=(i.positionScreen.z+o.positionScreen.z+s.positionScreen.z)/3,f.renderOrder=_.renderOrder,f.normalModel.fromArray(g,3*e),f.normalModel.applyMatrix3(S).normalize();for(var c=0;c<3;c++){var l=f.vertexNormalsModel[c];l.fromArray(g,3*n[c]),l.applyMatrix3(S).normalize(),f.uvs[c].fromArray(x,2*n[c])}f.vertexNormalsLength=3,f.material=_.material,B.elements.push(f)}}var g=[],y=[],x=[],_=null,M=null,S=new Matrix3;return{setObject:e,projectVertex:t,checkTriangleVisibility:u,checkBackfaceCulling:h,pushVertex:r,pushNormal:n,pushColor:s,pushUv:c,pushLine:d,pushTriangle:m}};this.projectScene=function(t,n,s,u){m=0,g=0,x=0,B.elements.length=0,!0===t.autoUpdate&&t.updateMatrixWorld(),null===n.parent&&n.updateMatrixWorld(),O.copy(n.matrixWorldInverse),I.multiplyMatrices(n.projectionMatrix,O),z.setFromMatrix(I),h=0,B.objects.length=0,B.lights.length=0,e(t),!0===s&&B.objects.sort(c);for(var p=B.objects,y=0,_=p.length;y<_;y++){var M=p[y].object,S=M.geometry;if(W.setObject(M),b=M.matrixWorld,d=0,M instanceof Mesh){if(S instanceof BufferGeometry){var L=S.attributes,T=S.groups;if(void 0===L.position)continue;for(var C=0,A=(_e=L.position.array).length;C<A;C+=3)W.pushVertex(_e[C],_e[C+1],_e[C+2]);if(void 0!==L.normal)for(var E=L.normal.array,C=0,A=E.length;C<A;C+=3)W.pushNormal(E[C],E[C+1],E[C+2]);if(void 0!==L.uv)for(var P=L.uv.array,C=0,A=P.length;C<A;C+=2)W.pushUv(P[C],P[C+1]);if(null!==S.index){var U=S.index.array;if(T.length>0)for(var N=0;N<T.length;N++)for(var G=T[N],C=G.start,A=G.start+G.count;C<A;C+=3)W.pushTriangle(U[C],U[C+1],U[C+2]);else for(var C=0,A=U.length;C<A;C+=3)W.pushTriangle(U[C],U[C+1],U[C+2])}else for(var C=0,A=_e.length/3;C<A;C+=3)W.pushTriangle(C,C+1,C+2)}else if(S instanceof Geometry){var H=S.vertices,X=S.faces,q=S.faceVertexUvs[0];F.getNormalMatrix(b);for(var Y=M.material,Z=Array.isArray(Y),J=0,K=H.length;J<K;J++){be=H[J];if(D.copy(be),!0===Y.morphTargets)for(var Q=S.morphTargets,$=M.morphTargetInfluences,ee=0,te=Q.length;ee<te;ee++){var re=$[ee];if(0!==re){var ne=Q[ee].vertices[J];D.x+=(ne.x-be.x)*re,D.y+=(ne.y-be.y)*re,D.z+=(ne.z-be.z)*re}}W.pushVertex(D.x,D.y,D.z)}for(var ie=0,ae=X.length;ie<ae;ie++){var oe=X[ie];if(void 0!==(Y=!0===Z?M.material[oe.materialIndex]:M.material)){var se=Y.side,ce=w[oe.a],le=w[oe.b],ue=w[oe.c];if(!1!==W.checkTriangleVisibility(ce,le,ue)){var he=W.checkBackfaceCulling(ce,le,ue);if(se!==DoubleSide){if(se===FrontSide&&!1===he)continue;if(se===BackSide&&!0===he)continue}(f=a()).id=M.id,f.v1.copy(ce),f.v2.copy(le),f.v3.copy(ue),f.normalModel.copy(oe.normal),!1!==he||se!==BackSide&&se!==DoubleSide||f.normalModel.negate(),f.normalModel.applyMatrix3(F).normalize();for(var pe=oe.vertexNormals,de=0,fe=Math.min(pe.length,3);de<fe;de++){var me=f.vertexNormalsModel[de];me.copy(pe[de]),!1!==he||se!==BackSide&&se!==DoubleSide||me.negate(),me.applyMatrix3(F).normalize()}f.vertexNormalsLength=pe.length;var ve=q[ie];if(void 0!==ve)for(var ge=0;ge<3;ge++)f.uvs[ge].copy(ve[ge]);f.color=oe.color,f.material=Y,f.z=(ce.positionScreen.z+le.positionScreen.z+ue.positionScreen.z)/3,f.renderOrder=M.renderOrder,B.elements.push(f)}}}}}else if(M instanceof Line){if(V.multiplyMatrices(I,b),S instanceof BufferGeometry){if(void 0!==(L=S.attributes).position){for(var C=0,A=(_e=L.position.array).length;C<A;C+=3)W.pushVertex(_e[C],_e[C+1],_e[C+2]);if(void 0!==L.color)for(var ye=L.color.array,C=0,A=ye.length;C<A;C+=3)W.pushColor(ye[C],ye[C+1],ye[C+2]);if(null!==S.index)for(var C=0,A=(U=S.index.array).length;C<A;C+=2)W.pushLine(U[C],U[C+1]);else for(var xe=M instanceof LineSegments?2:1,C=0,A=_e.length/3-1;C<A;C+=xe)W.pushLine(C,C+1)}}else if(S instanceof Geometry){if(0===(H=M.geometry.vertices).length)continue;(ce=i()).positionScreen.copy(H[0]).applyMatrix4(V);for(var xe=M instanceof LineSegments?2:1,J=1,K=H.length;J<K;J++)(ce=i()).positionScreen.copy(H[J]).applyMatrix4(V),(J+1)%xe>0||(le=w[d-2],k.copy(ce.positionScreen),j.copy(le.positionScreen),!0===l(k,j)&&(k.multiplyScalar(1/k.w),j.multiplyScalar(1/j.w),(v=o()).id=M.id,v.v1.positionScreen.copy(k),v.v2.positionScreen.copy(j),v.z=Math.max(k.z,j.z),v.renderOrder=M.renderOrder,v.material=M.material,M.material.vertexColors===VertexColors&&(v.vertexColors[0].copy(M.geometry.colors[J]),v.vertexColors[1].copy(M.geometry.colors[J-1])),B.elements.push(v)))}}else if(M instanceof Points){if(V.multiplyMatrices(I,b),S instanceof Geometry)for(var J=0,K=(H=M.geometry.vertices).length;J<K;J++){var be=H[J];R.set(be.x,be.y,be.z,1),R.applyMatrix4(V),r(R,M,n)}else if(S instanceof BufferGeometry&&void 0!==(L=S.attributes).position)for(var _e=L.position.array,C=0,A=_e.length;C<A;C+=3)R.set(_e[C],_e[C+1],_e[C+2],1),R.applyMatrix4(V),r(R,M,n)}else M instanceof Sprite&&(R.set(b.elements[12],b.elements[13],b.elements[14],1),R.applyMatrix4(I),r(R,M,n))}return!0===u&&B.elements.sort(c),B}};Object.assign(Box2.prototype,{set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){var t=this;this.makeEmpty();for(var r=0,n=e.length;r<n;r++)t.expandByPoint(e[r]);return this},setFromCenterAndSize:function(){var e=new Vector2;return function(t,r){var n=e.copy(r).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(e){return void 0===e&&(console.warn("Box2: .getCenter() target is now required"),e=new Vector2),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){return void 0===e&&(console.warn("Box2: .getSize() target is now required"),e=new Vector2),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y},getParameter:function(e,t){return void 0===t&&(console.warn("Box2: .getParameter() target is now required"),t=new Vector2),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)},clampPoint:function(e,t){return void 0===t&&(console.warn("Box2: .clampPoint() target is now required"),t=new Vector2),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new Vector2;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}),CompressedTexture.prototype=Object.create(Texture.prototype),CompressedTexture.prototype.constructor=CompressedTexture,CompressedTexture.prototype.isCompressedTexture=!0,DataTexture.prototype=Object.create(Texture.prototype),DataTexture.prototype.constructor=DataTexture,DataTexture.prototype.isDataTexture=!0;var SpriteCanvasMaterial=function(e){Material.call(this),this.type="SpriteCanvasMaterial",this.color=new Color(16777215),this.program=function(){},this.setValues(e)};SpriteCanvasMaterial.prototype=Object.create(Material.prototype),SpriteCanvasMaterial.prototype.constructor=SpriteCanvasMaterial,SpriteCanvasMaterial.prototype.isSpriteCanvasMaterial=!0,SpriteCanvasMaterial.prototype.clone=function(){var e=new SpriteCanvasMaterial;return e.copy(this),e.color.copy(this.color),e.program=this.program,e};var CanvasRenderer=function(e){function t(){ve.setRGB(0,0,0),ge.setRGB(0,0,0),ye.setRGB(0,0,0);for(var e=0,t=M.length;e<t;e++){var r=M[e],n=r.color;r.isAmbientLight?ve.add(n):r.isDirectionalLight?ge.add(n):r.isPointLight&&ye.add(n)}}function r(e,t,r){for(var n=0,i=M.length;n<i;n++){var a=M[n];if(he.copy(a.color),a.isDirectionalLight){o=xe.setFromMatrixPosition(a.matrixWorld).normalize();if((s=t.dot(o))<=0)continue;s*=a.intensity,r.add(he.multiplyScalar(s))}else if(a.isPointLight){var o=xe.setFromMatrixPosition(a.matrixWorld),s=t.dot(xe.subVectors(o,e).normalize());if(s<=0)continue;if(0==(s*=0==a.distance?1:1-Math.min(e.distanceTo(o)/a.distance,1)))continue;s*=a.intensity,r.add(he.multiplyScalar(s))}}}function n(e,t,r){p(r.opacity),d(r.blending);var n=t.scale.x*W,i=t.scale.y*H,a=Math.sqrt(n*n+i*i);if(me.min.set(e.x-a,e.y-a),me.max.set(e.x+a,e.y+a),r.isSpriteMaterial){var o=r.map;if(null!==o){var s=pe[o.id];if(void 0!==s&&s.version===o.version||(s=l(o),pe[o.id]=s),void 0!==s.canvas){y(s.canvas);var c=o.image,u=c.width*o.offset.x,h=c.height*o.offset.y,f=c.width*o.repeat.x,m=c.height*o.repeat.y,v=n/f,x=i/m;K.save(),K.translate(e.x,e.y),0!==r.rotation&&K.rotate(r.rotation),K.translate(-n/2,-i/2),K.scale(v,x),K.translate(-u,-h),K.fillRect(u,h,f,m),K.restore()}}else y(r.color.getStyle()),K.save(),K.translate(e.x,e.y),0!==r.rotation&&K.rotate(r.rotation),K.scale(n,-i),K.fillRect(-.5,-.5,1,1),K.restore()}else r.isSpriteCanvasMaterial?(g(r.color.getStyle()),y(r.color.getStyle()),K.save(),K.translate(e.x,e.y),0!==r.rotation&&K.rotate(r.rotation),K.scale(n,i),r.program(K),K.restore()):r.isPointsMaterial&&(y(r.color.getStyle()),K.save(),K.translate(e.x,e.y),0!==r.rotation&&K.rotate(r.rotation),K.scale(n*r.size,-i*r.size),K.fillRect(-.5,-.5,1,1),K.restore())}function i(e,t,r,n){if(p(n.opacity),d(n.blending),K.beginPath(),K.moveTo(e.positionScreen.x,e.positionScreen.y),K.lineTo(t.positionScreen.x,t.positionScreen.y),n.isLineBasicMaterial){if(f(n.linewidth),m(n.linecap),v(n.linejoin),n.vertexColors!==VertexColors)g(n.color.getStyle());else{var i=r.vertexColors[0].getStyle(),a=r.vertexColors[1].getStyle();if(i===a)g(i);else{try{var o=K.createLinearGradient(e.positionScreen.x,e.positionScreen.y,t.positionScreen.x,t.positionScreen.y);o.addColorStop(0,i),o.addColorStop(1,a)}catch(e){o=i}g(o)}}n.isLineDashedMaterial&&x([n.dashSize,n.gapSize]),K.stroke(),me.expandByScalar(2*n.linewidth),n.isLineDashedMaterial&&x([])}}function a(e,t,n,i,a,l,h,f){V.info.render.vertices+=3,V.info.render.faces++,p(f.opacity),d(f.blending),T=e.positionScreen.x,C=e.positionScreen.y,A=t.positionScreen.x,E=t.positionScreen.y,P=n.positionScreen.x,B=n.positionScreen.y,o(T,C,A,E,P,B),(f.isMeshLambertMaterial||f.isMeshPhongMaterial||f.isMeshStandardMaterial)&&null===f.map?(le.copy(f.color),ue.copy(f.emissive),f.vertexColors===FaceColors&&le.multiply(h.color),ce.copy(ve),be.copy(e.positionWorld).add(t.positionWorld).add(n.positionWorld).divideScalar(3),r(be,h.normalModel,ce),ce.multiply(le).add(ue),!0===f.wireframe?s(ce,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):c(ce)):f.isMeshBasicMaterial||f.isMeshLambertMaterial||f.isMeshPhongMaterial||f.isMeshStandardMaterial?null!==f.map?f.map.mapping===UVMapping&&(D=h.uvs,u(T,C,A,E,P,B,D[i].x,D[i].y,D[a].x,D[a].y,D[l].x,D[l].y,f.map)):null!==f.envMap?f.envMap.mapping===SphericalReflectionMapping&&(_e.copy(h.vertexNormalsModel[i]).applyMatrix3(Me),R=.5*_e.x+.5,U=.5*_e.y+.5,_e.copy(h.vertexNormalsModel[a]).applyMatrix3(Me),N=.5*_e.x+.5,G=.5*_e.y+.5,_e.copy(h.vertexNormalsModel[l]).applyMatrix3(Me),O=.5*_e.x+.5,I=.5*_e.y+.5,u(T,C,A,E,P,B,R,U,N,G,O,I,f.envMap)):(ce.copy(f.color),f.vertexColors===FaceColors&&ce.multiply(h.color),!0===f.wireframe?s(ce,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):c(ce)):f.isMeshNormalMaterial?(_e.copy(h.normalModel).applyMatrix3(Me),ce.setRGB(_e.x,_e.y,_e.z).multiplyScalar(.5).addScalar(.5),!0===f.wireframe?s(ce,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):c(ce)):(ce.setRGB(1,1,1),!0===f.wireframe?s(ce,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):c(ce))}function o(e,t,r,n,i,a){K.beginPath(),K.moveTo(e,t),K.lineTo(r,n),K.lineTo(i,a),K.closePath()}function s(e,t,r,n){f(t),m(r),v(n),g(e.getStyle()),K.stroke(),me.expandByScalar(2*t)}function c(e){y(e.getStyle()),K.fill()}function l(e){if(0===e.version||e instanceof CompressedTexture||e instanceof DataTexture)return{canvas:void 0,version:e.version};var t=e.image;if(!1===t.complete)return{canvas:void 0,version:0};var r=e.wrapS===RepeatWrapping||e.wrapS===MirroredRepeatWrapping,n=e.wrapT===RepeatWrapping||e.wrapT===MirroredRepeatWrapping,i=e.wrapS===MirroredRepeatWrapping,a=e.wrapT===MirroredRepeatWrapping,o=document.createElement("canvas");o.width=t.width*(i?2:1),o.height=t.height*(a?2:1);var s=o.getContext("2d");s.setTransform(1,0,0,-1,0,t.height),s.drawImage(t,0,0),!0===i&&(s.setTransform(-1,0,0,-1,t.width,t.height),s.drawImage(t,-t.width,0)),!0===a&&(s.setTransform(1,0,0,1,0,0),s.drawImage(t,0,t.height)),!0===i&&!0===a&&(s.setTransform(-1,0,0,1,t.width,0),s.drawImage(t,-t.width,t.height));var c="no-repeat";!0===r&&!0===n?c="repeat":!0===r?c="repeat-x":!0===n&&(c="repeat-y");var l=K.createPattern(o,c);return e.onUpdate&&e.onUpdate(e),{canvas:l,version:e.version}}function u(e,t,r,n,i,a,o,s,c,u,h,p,d){var f=pe[d.id];if(void 0!==f&&f.version===d.version||(f=l(d),pe[d.id]=f),void 0===f.canvas)return y("rgba( 0, 0, 0, 1)"),void K.fill();y(f.canvas);var m,v,g,x,b,_,M,w,S=d.offset.x/d.repeat.x,L=d.offset.y/d.repeat.y,T=d.image.width*d.repeat.x,C=d.image.height*d.repeat.y;c=(c+S)*T,u=(u+L)*C,h=(h+S)*T,p=(p+L)*C,r-=e,n-=t,i-=e,a-=t,0!==(M=(c-=o=(o+S)*T)*(p-=s=(s+L)*C)-(h-=o)*(u-=s))&&(b=e-(m=(p*r-u*i)*(w=1/M))*o-(g=(c*i-h*r)*w)*s,_=t-(v=(p*n-u*a)*w)*o-(x=(c*a-h*n)*w)*s,K.save(),K.transform(m,v,g,x,b,_),K.fill(),K.restore())}function h(e,t,r){var n,i=t.x-e.x,a=t.y-e.y,o=i*i+a*a;0!==o&&(i*=n=r/Math.sqrt(o),a*=n,t.x+=i,t.y+=a,e.x-=i,e.y-=a)}function p(e){ee!==e&&(K.globalAlpha=e,ee=e)}function d(e){te!==e&&(e===NormalBlending?K.globalCompositeOperation="source-over":e===AdditiveBlending?K.globalCompositeOperation="lighter":e===SubtractiveBlending?K.globalCompositeOperation="darker":e===MultiplyBlending&&(K.globalCompositeOperation="multiply"),te=e)}function f(e){ie!==e&&(K.lineWidth=e,ie=e)}function m(e){ae!==e&&(K.lineCap=e,ae=e)}function v(e){oe!==e&&(K.lineJoin=e,oe=e)}function g(e){re!==e&&(K.strokeStyle=e,re=e)}function y(e){ne!==e&&(K.fillStyle=e,ne=e)}function x(e){se.length!==e.length&&(K.setLineDash(e),se=e)}console.log("CanvasRenderer",REVISION),e=e||{};var b,_,M,w,S,L,T,C,A,E,P,B,D,R,U,N,G,O,I,V=this,F=new Projector,z=void 0!==e.canvas?e.canvas:document.createElement("canvas"),k=z.width,j=z.height,W=Math.floor(k/2),H=Math.floor(j/2),X=0,q=0,Y=k,Z=j,J=1,K=z.getContext("2d",{alpha:!0===e.alpha}),Q=new Color(0),$=!0===e.alpha?0:1,ee=1,te=0,re=null,ne=null,ie=null,ae=null,oe=null,se=[],ce=new Color,le=new Color,ue=new Color,he=new Color,pe={},de=new Box2,fe=new Box2,me=new Box2,ve=new Color,ge=new Color,ye=new Color,xe=new Vector3,be=new Vector3,_e=new Vector3,Me=new Matrix3;void 0===K.setLineDash&&(K.setLineDash=function(){}),this.domElement=z,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.info={render:{vertices:0,faces:0}},this.getContext=function(){return K},this.getContextAttributes=function(){return K.getContextAttributes()},this.getPixelRatio=function(){return J},this.setPixelRatio=function(e){void 0!==e&&(J=e)},this.setSize=function(e,t,r){k=e*J,j=t*J,z.width=k,z.height=j,W=Math.floor(k/2),H=Math.floor(j/2),!1!==r&&(z.style.width=e+"px",z.style.height=t+"px"),de.min.set(-W,-H),de.max.set(W,H),fe.min.set(-W,-H),fe.max.set(W,H),ee=1,te=0,re=null,ne=null,ie=null,ae=null,oe=null,this.setViewport(0,0,e,t)},this.setViewport=function(e,t,r,n){X=e*J,q=t*J,Y=r*J,Z=n*J},this.setScissor=function(){},this.setScissorTest=function(){},this.setClearColor=function(e,t){Q.set(e),$=void 0!==t?t:1,fe.min.set(-W,-H),fe.max.set(W,H)},this.setClearColorHex=function(e,t){console.warn("CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(e,t)},this.getClearColor=function(){return Q},this.getClearAlpha=function(){return $},this.getMaxAnisotropy=function(){return 0},this.clear=function(){!1===fe.isEmpty()&&(fe.intersect(de),fe.expandByScalar(2),fe.min.x=fe.min.x+W,fe.min.y=-fe.min.y+H,fe.max.x=fe.max.x+W,fe.max.y=-fe.max.y+H,$<1&&K.clearRect(0|fe.min.x,0|fe.max.y,fe.max.x-fe.min.x|0,fe.min.y-fe.max.y|0),$>0&&(p(1),d(NormalBlending),y("rgba("+Math.floor(255*Q.r)+","+Math.floor(255*Q.g)+","+Math.floor(255*Q.b)+","+$+")"),K.fillRect(0|fe.min.x,0|fe.max.y,fe.max.x-fe.min.x|0,fe.min.y-fe.max.y|0)),fe.makeEmpty())},this.clearColor=function(){},this.clearDepth=function(){},this.clearStencil=function(){},this.render=function(e,r){if(void 0===r.isCamera)return void console.error("CanvasRenderer.render: camera is not an instance of Camera.");var o=e.background;o&&o.isColor?(p(1),d(NormalBlending),y(o.getStyle()),K.fillRect(0,0,k,j)):!0===this.autoClear&&this.clear(),V.info.render.vertices=0,V.info.render.faces=0,K.setTransform(Y/k,0,0,-Z/j,X,j-q),K.translate(W,H),b=F.projectScene(e,r,this.sortObjects,this.sortElements),_=b.elements,M=b.lights,Me.getNormalMatrix(r.matrixWorldInverse),t();for(var s=0,c=_.length;s<c;s++){var l=_[s],u=l.material;if(void 0!==u&&0!==u.opacity){if(me.makeEmpty(),l instanceof RenderableSprite)(w=l).x*=W,w.y*=H,n(w,l,u);else if(l instanceof RenderableLine)w=l.v1,S=l.v2,w.positionScreen.x*=W,w.positionScreen.y*=H,S.positionScreen.x*=W,S.positionScreen.y*=H,me.setFromPoints([w.positionScreen,S.positionScreen]),!0===de.intersectsBox(me)&&i(w,S,l,u);else if(l instanceof RenderableFace){if(w=l.v1,S=l.v2,L=l.v3,w.positionScreen.z<-1||w.positionScreen.z>1)continue;if(S.positionScreen.z<-1||S.positionScreen.z>1)continue;if(L.positionScreen.z<-1||L.positionScreen.z>1)continue;w.positionScreen.x*=W,w.positionScreen.y*=H,S.positionScreen.x*=W,S.positionScreen.y*=H,L.positionScreen.x*=W,L.positionScreen.y*=H,u.overdraw>0&&(h(w.positionScreen,S.positionScreen,u.overdraw),h(S.positionScreen,L.positionScreen,u.overdraw),h(L.positionScreen,w.positionScreen,u.overdraw)),me.setFromPoints([w.positionScreen,S.positionScreen,L.positionScreen]),!0===de.intersectsBox(me)&&a(w,S,L,0,1,2,l,u)}fe.union(me)}}K.setTransform(1,0,0,1,0,0)}};MeshLambertMaterial.prototype=Object.create(Material.prototype),MeshLambertMaterial.prototype.constructor=MeshLambertMaterial,MeshLambertMaterial.prototype.isMeshLambertMaterial=!0,MeshLambertMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},MeshPhongMaterial.prototype=Object.create(Material.prototype),MeshPhongMaterial.prototype.constructor=MeshPhongMaterial,MeshPhongMaterial.prototype.isMeshPhongMaterial=!0,MeshPhongMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};var SoftwareRenderer=function(e){function t(e,t){d=Math.floor(e/I),f=Math.floor(t/I);var n=1<<N;m=n*(h=d*I)/2,v=-n*(p=f*I)/2,g=V/2,y=n*h/2+.5,x=n*p/2+.5,b=V/2+.5,C.width=h,C.height=p,A.fillStyle=E?"rgba(0, 0, 0, 0)":D.getStyle(),A.fillRect(0,0,h,p),_=A.getImageData(0,0,h,p),M=_.data,w=new Int32Array(M.length/4),S=d*f,L=new Int32Array(S),T=new Uint8Array(S);for(var i=0,a=w.length;i<a;i++)w[i]=V;for(i=0;i<S;i++)T[i]=R;r(D)}function r(e){for(var t=h*p*4,r=0;r<t;r+=4)M[r]=255*e.r|0,M[r+1]=255*e.g|0,M[r+2]=255*e.b|0,M[r+3]=E?0:255;A.fillStyle=E?"rgba(0, 0, 0, 0)":e.getStyle(),A.fillRect(0,0,h,p)}function n(e,t){var r=0,n=0,i=255*e.color.r,a=255*e.color.g,o=255*e.color.b,s=new Uint8Array(768);if(t){for(;r<204;)s[n++]=Math.min(r*i/204,255),s[n++]=Math.min(r*a/204,255),s[n++]=Math.min(r*o/204,255),++r;for(;r<256;)s[n++]=Math.min(i+(r-204)*(255-i)/82,255),s[n++]=Math.min(a+(r-204)*(255-a)/82,255),s[n++]=Math.min(o+(r-204)*(255-o)/82,255),++r}else for(;r<256;)s[n++]=Math.min(r*i/255,255),s[n++]=Math.min(r*a/255,255),s[n++]=Math.min(r*o/255,255),++r;return s}function i(e,t,r,n,i,a,o,s,c){var l=4*r,u=B[c.map.id];if(u.data){var h=u.width,p=c.transparent,d=h-1,f=u.data,m=4*((a*h&d)*h+(i*h&d));if(p){var v=f[m],g=f[m+1],y=f[m+2],x=f[m+3]*c.opacity/255,b=e[l],_=e[l+1],M=e[l+2];e[l]=v*x+b*(1-x),e[l+1]=g*x+_*(1-x),e[l+2]=y*x+M*(1-x),e[l+3]=(c.opacity<<8)-1,255==e[l+3]&&(t[r]=n)}else e[l]=f[m],e[l+1]=f[m+1],e[l+2]=f[m+2],e[l+3]=(c.opacity<<8)-1,t[r]=n}}function a(e,t,r,n,i,a,o,s,c){var l=4*r,u=B[c.map.id];if(u.data){var h=u.width,p=c.transparent,d=3*(o>0?~~o:0),f=h-1,m=u.data,v=4*((a*h&f)*h+(i*h&f));if(p){var g=c.palette[d]*m[v],y=c.palette[d+1]*m[v+1],x=c.palette[d+2]*m[v+2],b=m[v+3]*c.opacity/256,_=e[l],M=e[l+1],w=e[l+2];e[l]=g*b+_*(1-b),e[l+1]=y*b+M*(1-b),e[l+2]=x*b+w*(1-b),e[l+3]=(c.opacity<<8)-1,255==e[l+3]&&(t[r]=n)}else e[l]=c.palette[d]*m[v]>>8,e[l+1]=c.palette[d+1]*m[v+1]>>8,e[l+2]=c.palette[d+2]*m[v+2]>>8,e[l+3]=(c.opacity<<8)-1,t[r]=n}}function o(e){var t=e.id,r=P[t];if(r&&e.map&&!B[e.map.id]&&delete P[t],void 0===P[t]||!0===e.needsUpdate){if(e instanceof MeshBasicMaterial||e instanceof MeshLambertMaterial||e instanceof MeshPhongMaterial||e instanceof SpriteMaterial){e instanceof MeshLambertMaterial?e.palette||(e.palette=n(e,!1)):e instanceof MeshPhongMaterial&&(e.palette||(e.palette=n(e,!0)));if(e.map){var o=new SoftwareRenderer.Texture;if(o.fromImage(e.map.image),!o.data)return;B[e.map.id]=o,r=e instanceof MeshBasicMaterial||e instanceof SpriteMaterial?i:a}else s=e.vertexColors===FaceColors?["var colorOffset = offset * 4;","buffer[ colorOffset ] = face.color.r * 255;","buffer[ colorOffset + 1 ] = face.color.g * 255;","buffer[ colorOffset + 2 ] = face.color.b * 255;","buffer[ colorOffset + 3 ] = material.opacity * 255;","depthBuf[ offset ] = depth;"].join("\n"):["var colorOffset = offset * 4;","buffer[ colorOffset ] = material.color.r * 255;","buffer[ colorOffset + 1 ] = material.color.g * 255;","buffer[ colorOffset + 2 ] = material.color.b * 255;","buffer[ colorOffset + 3 ] = material.opacity * 255;","depthBuf[ offset ] = depth;"].join("\n"),r=new Function("buffer, depthBuf, offset, depth, u, v, n, face, material",s)}else if(e instanceof LineBasicMaterial){s=["var colorOffset = offset * 4;","buffer[ colorOffset ] = material.color.r * (color1.r+color2.r) * 0.5 * 255;","buffer[ colorOffset + 1 ] = material.color.g * (color1.g+color2.g) * 0.5 * 255;","buffer[ colorOffset + 2 ] = material.color.b * (color1.b+color2.b) * 0.5 * 255;","buffer[ colorOffset + 3 ] = 255;","depthBuf[ offset ] = depth;"].join("\n");r=new Function("buffer, depthBuf, offset, depth, color1, color2, material",s)}else{var s=["var colorOffset = offset * 4;","buffer[ colorOffset ] = u * 255;","buffer[ colorOffset + 1 ] = v * 255;","buffer[ colorOffset + 2 ] = 0;","buffer[ colorOffset + 3 ] = 255;","depthBuf[ offset ] = depth;"].join("\n");r=new Function("buffer, depthBuf, offset, depth, u, v, n, face, material",s)}P[t]=r,e.needsUpdate=!1}return r}function s(e,t,r,n,i,a,o,c,u){if(!(e.z<-1||e.z>1||t.z<-1||t.z>1||r.z<-1||r.z>1)){var f=1<<N,_=e.x*m+y|0,S=t.x*m+y|0,C=r.x*m+y|0,A=e.y*v+x|0,E=t.y*v+x|0,P=r.y*v+x|0,B=c.vertexNormalsModel&&c.vertexNormalsModel.length,D=n&&i&&a,V=Math.max(Math.sqrt((_-S)*(_-S)+(A-E)*(A-E)),Math.sqrt((S-C)*(S-C)+(E-P)*(E-P)),Math.sqrt((C-_)*(C-_)+(P-A)*(P-A)));if(!(c instanceof RenderableSprite)&&V>100*f){var F,z,k,q={vertexNormalsModel:[],color:c.color};if(D){le===ce.length?(F=new Vector2,ce.push(F),++le,z=new Vector2,ce.push(z),++le,k=new Vector2,ce.push(k),++le):(F=ce[le],z=ce[++le],k=ce[++le],++le);var Y;Y=(1+t.z)*(t.w/e.w)/(1+e.z),F.copy(n).multiplyScalar(Y).add(i).multiplyScalar(1/(Y+1)),Y=(1+r.z)*(r.w/t.w)/(1+t.z),z.copy(i).multiplyScalar(Y).add(a).multiplyScalar(1/(Y+1)),Y=(1+e.z)*(e.w/r.w)/(1+r.z),k.copy(a).multiplyScalar(Y).add(n).multiplyScalar(1/(Y+1))}var Z,J,K;ae===ie.length?(Z=new Vector4,ie.push(Z),++ae,J=new Vector4,ie.push(J),++ae,K=new Vector4,ie.push(K),++ae):(Z=ie[ae],J=ie[++ae],K=ie[++ae],++ae),Z.copy(e).add(t).multiplyScalar(.5),J.copy(t).add(r).multiplyScalar(.5),K.copy(r).add(e).multiplyScalar(.5);var Q,$,ee;return B&&(se===oe.length?(Q=new Vector3,oe.push(Q),++se,$=new Vector3,oe.push($),++se,ee=new Vector3,oe.push(ee),++se):(Q=oe[se],$=oe[++se],ee=oe[++se],++se),Q.copy(c.vertexNormalsModel[0]).add(c.vertexNormalsModel[1]).normalize(),$.copy(c.vertexNormalsModel[1]).add(c.vertexNormalsModel[2]).normalize(),ee.copy(c.vertexNormalsModel[2]).add(c.vertexNormalsModel[0]).normalize()),B&&(q.vertexNormalsModel[0]=c.vertexNormalsModel[0],q.vertexNormalsModel[1]=Q,q.vertexNormalsModel[2]=ee),s(e,Z,K,n,F,k,o,q,u),B&&(q.vertexNormalsModel[0]=c.vertexNormalsModel[1],q.vertexNormalsModel[1]=$,q.vertexNormalsModel[2]=Q),s(t,J,Z,i,z,F,o,q,u),B&&(q.vertexNormalsModel[0]=Q,q.vertexNormalsModel[1]=$,q.vertexNormalsModel[2]=ee),s(Z,J,K,F,z,k,o,q,u),B&&(q.vertexNormalsModel[0]=c.vertexNormalsModel[2],q.vertexNormalsModel[1]=ee,q.vertexNormalsModel[2]=$),void s(r,K,J,a,k,z,o,q,u)}var te,re,ne,ue,he,pe,de=e.z*g+b|0,fe=t.z*g+b|0,me=r.z*g+b|0,D=!1;n&&i&&a&&(D=!0,te=n.x,re=1-n.y,ne=i.x,ue=1-i.y,he=a.x,pe=1-a.y);var ve,ge,ye,xe,be,_e;B&&(ve=c.vertexNormalsModel[0],ge=c.vertexNormalsModel[1],ye=c.vertexNormalsModel[2],xe=255*ve.z,be=255*ge.z,_e=255*ye.z);var Me=_-S,we=E-A,Se=S-C,Le=P-E,Te=C-_,Ce=A-P,Ae=Math.max(Math.min(_,S,C)+G>>N,0),Ee=Math.min(Math.max(_,S,C)+G>>N,h),Pe=Math.max(Math.min(A,E,P)+G>>N,0),Be=Math.min(Math.max(A,E,P)+G>>N,p);j=Math.min(Ae,j),H=Math.max(Ee,H),W=Math.min(Pe,W),X=Math.max(Be,X);var De=I,Re=(Ae&=~(De-1))<<N,Ue=(Pe&=~(De-1))<<N,Ne=we*(Re-_)+Me*(Ue-A),Ge=Le*(Re-S)+Se*(Ue-E),Oe=Ce*(Re-C)+Te*(Ue-P);(we>0||0==we&&Me>0)&&Ne++,(Le>0||0==Le&&Se>0)&&Ge++,(Ce>0||0==Ce&&Te>0)&&Oe++,Ne=Ne-1>>N,Ge=Ge-1>>N,Oe=Oe-1>>N;var Ie=de-fe,Ve=me-de,Fe=1/(Me*Ce-Te*we),ze=Fe*(Ie*Ce-Ve*we),ke=Fe*(Ie*Te-Me*Ve),je=de+(Re-_)*ze+(Ue-A)*ke|0;ze=ze*f|0,ke=ke*f|0;var We,He,Xe,qe;if(D){var Ye=te-ne,Ze=he-te,Je=Fe*(Ye*Ce-Ze*we),Ke=Fe*(Ye*Te-Me*Ze),Qe=re-ue,$e=pe-re;Xe=te+(Re-_)*Je+(Ue-A)*Ke,qe=re+(Re-_)*(We=Fe*(Qe*Ce-$e*we))+(Ue-A)*(He=Fe*(Qe*Te-Me*$e)),Je*=f,Ke*=f,We*=f,He*=f}var et,tt;if(B){var rt=xe-be,nt=_e-xe,it=Fe*(rt*Ce-nt*we);tt=xe+(Re-_)*it+(Ue-A)*(et=Fe*(rt*Te-Me*nt)),it*=f,et*=f}var at=De-1,ot=0,st=0,ct=0,lt=0,ut=0,ht=0,pt=0,dt=0;Me>=0?st-=at*Me:ot-=at*Me,we>=0?st-=at*we:ot-=at*we,Se>=0?lt-=at*Se:ct-=at*Se,Le>=0?lt-=at*Le:ct-=at*Le,Te>=0?ht-=at*Te:ut-=at*Te,Ce>=0?ht-=at*Ce:ut-=at*Ce,ze>=0?dt+=at*ze:pt+=at*ze,ke>=0?dt+=at*ke:pt+=at*ke;var ft,mt,vt=h-De,gt=Ne,yt=Ge,xt=Oe,bt=je,_t=-De,Mt=_t*we,wt=_t*Le,St=_t*Ce,Lt=_t*ze;D&&(ft=_t*Je,mt=_t*We);var Tt;B&&(Tt=_t*it);for(var Ct=Ae,At=Pe;At<Be;At+=De){for(;Ct>=Ae&&Ct<Ee&&gt>=st&&yt>=lt&&xt>=ht;)Ct+=_t,gt+=Mt,yt+=wt,xt+=St,bt+=Lt,D&&(Xe+=ft,qe+=mt),B&&(tt+=Tt);for(_t=-_t,Mt=-Mt,wt=-wt,St=-St,Lt=-Lt,D&&(ft=-ft,mt=-mt),B&&(Tt=-Tt);;){if(Ct+=_t,gt+=Mt,yt+=wt,xt+=St,bt+=Lt,D&&(Xe+=ft,qe+=mt),B&&(tt+=Tt),Ct<Ae||Ct>=Ee)break;if(gt<st){if(Mt<0)break}else if(yt<lt){if(wt<0)break}else if(xt<ht){if(St<0)break}else{var Et=Ct>>O,Pt=At>>O,Bt=Et+Pt*d,Dt=bt+pt;if(!(L[Bt]<Dt)){var Rt=T[Bt];Rt&U&&l(Et,Pt),T[Bt]=Rt&~(R|U);var Ut=Ct+At*h;if(gt>=ot&&yt>=ct&&xt>=ut){var Nt=bt+dt;L[Bt]=Math.min(L[Bt],Nt);var Gt=gt,Ot=yt,It=bt;D&&(kt=Xe,jt=qe);B&&(Ht=tt);for(Xt=0;Xt<De;Xt++){var Vt=Gt,Ft=Ot,zt=It;D&&(qt=kt,Yt=jt);B&&(Jt=Ht);for(Kt=0;Kt<De;Kt++)(Qt=zt)<w[Ut]&&o(M,w,Ut,Qt,qt,Yt,Jt,c,u),Vt+=we,Ft+=Le,zt+=ze,D&&(qt+=Je,Yt+=We),B&&(Jt+=it),Ut++;Gt+=Me,Ot+=Se,It+=ke,D&&(kt+=Ke,jt+=He),B&&(Ht+=et),Ut+=vt}}else{var kt,jt,Gt=gt,Ot=yt,Wt=xt,It=bt;D&&(kt=Xe,jt=qe);var Ht;B&&(Ht=tt);for(var Xt=0;Xt<De;Xt++){var qt,Yt,Vt=Gt,Ft=Ot,Zt=Wt,zt=It;D&&(qt=kt,Yt=jt);var Jt;B&&(Jt=Ht);for(var Kt=0;Kt<De;Kt++){if((Vt|Ft|Zt)>=0){var Qt=zt;Qt<w[Ut]&&o(M,w,Ut,Qt,qt,Yt,Jt,c,u)}Vt+=we,Ft+=Le,Zt+=Ce,zt+=ze,D&&(qt+=Je,Yt+=We),B&&(Jt+=it),Ut++}Gt+=Me,Ot+=Se,Wt+=Te,It+=ke,D&&(kt+=Ke,jt+=He),B&&(Ht+=et),Ut+=vt}}}}}gt+=De*Me,yt+=De*Se,xt+=De*Te,bt+=De*ke,D&&(Xe+=De*Ke,qe+=De*He),B&&(tt+=De*et)}}}function c(e,r,n,i,a,o){if(F||(F=!0,I=1<<(O=0),t(C.width,C.height)),!(e.z<-1||e.z>1||r.z<-1||r.z>1)){var s=Math.floor(.5*(o.linewidth-1)),c=e.x*m+y|0,u=r.x*m+y|0,f=e.y*v+x|0,_=r.y*v+x|0,S=e.z*g+b|0,A=r.z*g+b|0,E=c-u,P=f-_,B=S-A,D=Math.max(Math.min(c,u)+G>>N,0),V=Math.min(Math.max(c,u)+G>>N,h),q=Math.max(Math.min(f,_)+G>>N,0),Y=Math.min(Math.max(f,_)+G>>N,p),Z=Math.max(Math.min(S,A)+G>>N,0),J=Math.max(S,A)+G>>N;j=Math.min(D,j),H=Math.max(V,H),W=Math.min(q,W),X=Math.max(Y,X);var K,Q,$,ee,te,re=Math.sqrt(P*P+E*E),ne=E/re,ie=P/re,ae=B/re;for(k.set(ne,ie,ae),k.cross(z),k.normalize();re>0;){K=(K=u+re*ne)+G>>N,Q=(Q=_+re*ie)+G>>N,te=A+re*ae+G>>N;for(var oe=-s;oe<=s;++oe)if($=Math.floor(K+k.x*oe),ee=Math.floor(Q+k.y*oe),!(j>=$||H<=$||W>=ee||X<=ee)){var se=$>>O,ce=ee>>O,le=se+ce*d;if(!(L[le]<Z)){L[le]=Math.min(L[le],J);var ue=T[le];ue&U&&l(se,ce),T[le]=ue&~(R|U);var he=$+ee*h;te<w[he]&&a(M,w,he,te,n,i,o)}}--re}}}function l(e,t){for(var r=e*I+t*I*h,n=4*r,i=h-I,a=4*i,o=0;o<I;o++){for(var s=0;s<I;s++)w[r++]=V,M[n++]=255*D.r|0,M[n++]=255*D.g|0,M[n++]=255*D.b|0,M[n++]=E?0:255;r+=i,n+=a}}function u(){for(var e=0,t=0;t<f;t++)for(var r=0;r<d;r++)T[e]&U&&(l(r,t),T[e]=R),e++}console.log("SoftwareRenderer",REVISION);var h,p,d,f,m,v,g,y,x,b,_,M,w,S,L,T,C=void 0!==(e=e||{}).canvas?e.canvas:document.createElement("canvas"),A=C.getContext("2d",{alpha:!0===e.alpha}),E=e.alpha,P={},B={},D=new Color(0),R=1,U=2,N=4,G=(1<<N)-1,O=3,I=1<<O,V=1<<24,F=!1,z=new Vector3(0,0,1),k=new Vector3,j=1/0,W=1/0,H=0,X=0,q=1/0,Y=1/0,Z=0,J=0,K=new Projector,Q=new Vector4,$=new Vector4,ee=new Vector4,te=new Vector2,re=new Vector2,ne=new Vector2,ie=[],ae=0,oe=[],se=0,ce=[],le=0;this.domElement=C,this.autoClear=!0,this.setClearColor=function(e){D.set(e),r(D)},this.setPixelRatio=function(){},this.setSize=function(e,t){d=Math.floor(e/I),f=Math.floor(t/I);var n=1<<N;m=n*(h=d*I)/2,v=-n*(p=f*I)/2,g=V/2,y=n*h/2+.5,x=n*p/2+.5,b=V/2+.5,C.width=h,C.height=p,A.fillStyle=E?"rgba(0, 0, 0, 0)":D.getStyle(),A.fillRect(0,0,h,p),_=A.getImageData(0,0,h,p),M=_.data,w=new Int32Array(M.length/4),S=d*f,L=new Int32Array(S),T=new Uint8Array(S);for(var i=0,a=w.length;i<a;i++)w[i]=V;for(i=0;i<S;i++)T[i]=R;r(D)},this.setSize(C.width,C.height),this.clear=function(){j=1/0,W=1/0,H=0,X=0,ae=0,se=0,le=0;for(var e=0;e<S;e++)L[e]=V,T[e]=T[e]&R?R:U},this.render=function(e,t){this.clear();var n=e.background;n&&n.isColor&&r(n);for(var i=K.projectScene(e,t,!1,!1).elements,a=0,l=i.length;a<l;a++){var h=i[a],p=h.material;if(m=o(p))if(h instanceof RenderableFace)h.uvs?s(h.v1.positionScreen,h.v2.positionScreen,h.v3.positionScreen,h.uvs[0],h.uvs[1],h.uvs[2],m,h,p):s(h.v1.positionScreen,h.v2.positionScreen,h.v3.positionScreen,null,null,null,m,h,p);else if(h instanceof RenderableSprite){var d=.5*h.scale.x,f=.5*h.scale.y;Q.copy(h),Q.x-=d,Q.y+=f,$.copy(h),$.x-=d,$.y-=f,ee.copy(h),ee.x+=d,ee.y+=f,p.map?(te.set(0,1),re.set(0,0),ne.set(1,1),s(Q,$,ee,te,re,ne,m,h,p)):s(Q,$,ee,null,null,null,m,h,p),Q.copy(h),Q.x+=d,Q.y+=f,$.copy(h),$.x-=d,$.y-=f,ee.copy(h),ee.x+=d,ee.y-=f,p.map?(te.set(1,1),re.set(0,0),ne.set(1,0),s(Q,$,ee,te,re,ne,m,h,p)):s(Q,$,ee,null,null,null,m,h,p)}else if(h instanceof RenderableLine){var m=o(p);c(h.v1.positionScreen,h.v2.positionScreen,h.vertexColors[0],h.vertexColors[1],m,p)}}u();var v=Math.min(j,q),g=Math.min(W,Y),y=Math.max(H,Z)-v,x=Math.max(X,J)-g;v!==1/0&&A.putImageData(_,0,0,v,g,y,x),q=j,Y=W,Z=H,J=X}};SoftwareRenderer.Texture=function(){var e;this.fromImage=function(t){if(!(!t||t.width<=0||t.height<=0)){void 0===e&&(e=document.createElement("canvas"));var r=t.width>t.height?t.width:t.height;r=_Math.ceilPowerOfTwo(r),e.width==r&&e.height==r||(e.width=r,e.height=r);var n=e.getContext("2d");n.clearRect(0,0,r,r),n.drawImage(t,0,0,r,r);var i=n.getImageData(0,0,r,r);this.data=i.data,this.width=r,this.height=r,this.srcUrl=t.src}}};var DigitalGlitch={uniforms:{tDiffuse:{value:null},tDisp:{value:null},byp:{value:0},amount:{value:.08},angle:{value:.02},seed:{value:.02},seed_x:{value:.02},seed_y:{value:.02},distortion_x:{value:.5},distortion_y:{value:.6},col_s:{value:.05}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform int byp;","uniform sampler2D tDiffuse;","uniform sampler2D tDisp;","uniform float amount;","uniform float angle;","uniform float seed;","uniform float seed_x;","uniform float seed_y;","uniform float distortion_x;","uniform float distortion_y;","uniform float col_s;","varying vec2 vUv;","float rand(vec2 co){","return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);","}","void main() {","if(byp<1) {","vec2 p = vUv;","float xs = floor(gl_FragCoord.x / 0.5);","float ys = floor(gl_FragCoord.y / 0.5);","vec4 normal = texture2D (tDisp, p*seed*seed);","if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {","if(seed_x>0.){","p.y = 1. - (p.y + distortion_y);","}","else {","p.y = distortion_y;","}","}","if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {","if(seed_y>0.){","p.x=distortion_x;","}","else {","p.x = 1. - (p.x + distortion_x);","}","}","p.x+=normal.x*seed_x*(seed/5.);","p.y+=normal.y*seed_y*(seed/5.);","vec2 offset = amount * vec2( cos(angle), sin(angle));","vec4 cr = texture2D(tDiffuse, p + offset);","vec4 cga = texture2D(tDiffuse, p);","vec4 cb = texture2D(tDiffuse, p - offset);","gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);","vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);","gl_FragColor = gl_FragColor+ snow;","}","else {","gl_FragColor=texture2D (tDiffuse, vUv);","}","}"].join("\n")},FilmShader={uniforms:{tDiffuse:{value:null},time:{value:0},nIntensity:{value:.5},sIntensity:{value:.05},sCount:{value:4096},grayscale:{value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#include <common>","uniform float time;","uniform bool grayscale;","uniform float nIntensity;","uniform float sIntensity;","uniform float sCount;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 cTextureScreen = texture2D( tDiffuse, vUv );","float dx = rand( vUv + time );","vec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx, 0.0, 1.0 );","vec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );","cResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;","cResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );","if( grayscale ) {","cResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );","}","gl_FragColor =  vec4( cResult, cTextureScreen.a );","}"].join("\n")};Object.assign(Clock.prototype,{start:function(){this.startTime=("undefined"==typeof performance?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var t=("undefined"==typeof performance?Date:performance).now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}),InstancedBufferAttribute.prototype=Object.assign(Object.create(BufferAttribute.prototype),{constructor:InstancedBufferAttribute,isInstancedBufferAttribute:!0,copy:function(e){return BufferAttribute.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this}});var Earcut={triangulate:function(e,t,r){r=r||2;var n=t&&t.length,i=n?t[0]*r:e.length,a=linkedList(e,0,i,r,!0),o=[];if(!a)return o;var s,c,l,u,h,p,d;if(n&&(a=eliminateHoles(e,t,a,r)),e.length>80*r){s=l=e[0],c=u=e[1];for(var f=r;f<i;f+=r)h=e[f],p=e[f+1],h<s&&(s=h),p<c&&(c=p),h>l&&(l=h),p>u&&(u=p);d=0!==(d=Math.max(l-s,u-c))?1/d:0}return earcutLinked(a,o,r,s,c,d),o}},ShapeUtils={area:function(e){for(var t=e.length,r=0,n=t-1,i=0;i<t;n=i++)r+=e[n].x*e[i].y-e[i].x*e[n].y;return.5*r},isClockWise:function(e){return ShapeUtils.area(e)<0},triangulateShape:function(e,t){var r=[],n=[],i=[];removeDupEndPts(e),addContour(r,e);var a=e.length;t.forEach(removeDupEndPts);for(s=0;s<t.length;s++)n.push(a),a+=t[s].length,addContour(r,t[s]);for(var o=Earcut.triangulate(r,n),s=0;s<o.length;s+=3)i.push(o.slice(s,s+3));return i}};BoxGeometry.prototype=Object.create(Geometry.prototype),BoxGeometry.prototype.constructor=BoxGeometry,BoxBufferGeometry.prototype=Object.create(BufferGeometry.prototype),BoxBufferGeometry.prototype.constructor=BoxBufferGeometry,SphereGeometry.prototype=Object.create(Geometry.prototype),SphereGeometry.prototype.constructor=SphereGeometry,SphereBufferGeometry.prototype=Object.create(BufferGeometry.prototype),SphereBufferGeometry.prototype.constructor=SphereBufferGeometry,AmbientLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:AmbientLight,isAmbientLight:!0}),Object.assign(LightShadow.prototype,{copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var e={};return 0!==this.bias&&(e.bias=this.bias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}),PointLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:PointLight,isPointLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}),SpotLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:SpotLightShadow,isSpotLightShadow:!0,update:function(e){var t=this.camera,r=2*_Math.RAD2DEG*e.angle,n=this.mapSize.width/this.mapSize.height,i=e.distance||t.far;r===t.fov&&n===t.aspect&&i===t.far||(t.fov=r,t.aspect=n,t.far=i,t.updateProjectionMatrix())}}),SpotLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:SpotLight,isSpotLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),Object.assign(BufferGeometryLoader.prototype,{load:function(e,t,r,n){var i=this;new FileLoader(i.manager).load(e,function(e){t(i.parse(JSON.parse(e)))},r,n)},parse:function(e){var t=new BufferGeometry,r=e.data.index;if(void 0!==r){o=new TYPED_ARRAYS[r.type](r.array);t.setIndex(new BufferAttribute(o,1))}var n=e.data.attributes;for(var i in n){var a=n[i],o=new TYPED_ARRAYS[a.type](a.array);t.addAttribute(i,new BufferAttribute(o,a.itemSize,a.normalized))}var s=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==s)for(var c=0,l=s.length;c!==l;++c){var u=s[c];t.addGroup(u.start,u.count,u.materialIndex)}var h=e.data.boundingSphere;if(void 0!==h){var p=new Vector3;void 0!==h.center&&p.fromArray(h.center),t.boundingSphere=new Sphere(p,h.radius)}return t}});var TYPED_ARRAYS={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};Object.assign(ImageLoader.prototype,{crossOrigin:"Anonymous",load:function(e,t,r,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var i=this,a=Cache.get(e);if(void 0!==a)return i.manager.itemStart(e),setTimeout(function(){t&&t(a),i.manager.itemEnd(e)},0),a;var o=document.createElementNS("http://www.w3.org/1999/xhtml","img");return o.addEventListener("load",function(){Cache.add(e,this),t&&t(this),i.manager.itemEnd(e)},!1),o.addEventListener("error",function(t){n&&n(t),i.manager.itemEnd(e),i.manager.itemError(e)},!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),i.manager.itemStart(e),o.src=e,o},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),LineDashedMaterial.prototype=Object.create(LineBasicMaterial.prototype),LineDashedMaterial.prototype.constructor=LineDashedMaterial,LineDashedMaterial.prototype.isLineDashedMaterial=!0,LineDashedMaterial.prototype.copy=function(e){return LineBasicMaterial.prototype.copy.call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this},MeshDistanceMaterial.prototype=Object.create(Material.prototype),MeshDistanceMaterial.prototype.constructor=MeshDistanceMaterial,MeshDistanceMaterial.prototype.isMeshDistanceMaterial=!0,MeshDistanceMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this},MeshNormalMaterial.prototype=Object.create(Material.prototype),MeshNormalMaterial.prototype.constructor=MeshNormalMaterial,MeshNormalMaterial.prototype.isMeshNormalMaterial=!0,MeshNormalMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},MeshStandardMaterial.prototype=Object.create(Material.prototype),MeshStandardMaterial.prototype.constructor=MeshStandardMaterial,MeshStandardMaterial.prototype.isMeshStandardMaterial=!0,MeshStandardMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},MeshPhysicalMaterial.prototype=Object.create(MeshStandardMaterial.prototype),MeshPhysicalMaterial.prototype.constructor=MeshPhysicalMaterial,MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial=!0,MeshPhysicalMaterial.prototype.copy=function(e){return MeshStandardMaterial.prototype.copy.call(this,e),this.defines={PHYSICAL:""},this.reflectivity=e.reflectivity,this.clearCoat=e.clearCoat,this.clearCoatRoughness=e.clearCoatRoughness,this},MeshToonMaterial.prototype=Object.create(MeshPhongMaterial.prototype),MeshToonMaterial.prototype.constructor=MeshToonMaterial,MeshToonMaterial.prototype.isMeshToonMaterial=!0,MeshToonMaterial.prototype.copy=function(e){return MeshPhongMaterial.prototype.copy.call(this,e),this.gradientMap=e.gradientMap,this},RawShaderMaterial.prototype=Object.create(ShaderMaterial.prototype),RawShaderMaterial.prototype.constructor=RawShaderMaterial,RawShaderMaterial.prototype.isRawShaderMaterial=!0,ShadowMaterial.prototype=Object.create(Material.prototype),ShadowMaterial.prototype.constructor=ShadowMaterial,ShadowMaterial.prototype.isShadowMaterial=!0,ShadowMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this},Object.assign(MaterialLoader.prototype,{load:function(e,t,r,n){var i=this;new FileLoader(i.manager).load(e,function(e){t(i.parse(JSON.parse(e)))},r,n)},setTextures:function(e){this.textures=e},parse:function(e){function t(e){return void 0===r[e]&&console.warn("MaterialLoader: Undefined texture",e),r[e]}var r=this.textures,n=new{LineBasicMaterial:LineBasicMaterial,LineDashedMaterial:LineDashedMaterial,MeshBasicMaterial:MeshBasicMaterial,MeshDepthMaterial:MeshDepthMaterial,MeshDistanceMaterial:MeshDistanceMaterial,MeshLambertMaterial:MeshLambertMaterial,MeshNormalMaterial:MeshNormalMaterial,MeshPhongMaterial:MeshPhongMaterial,MeshPhysicalMaterial:MeshPhysicalMaterial,MeshStandardMaterial:MeshStandardMaterial,MeshToonMaterial:MeshToonMaterial,PointsMaterial:PointsMaterial,RawShaderMaterial:RawShaderMaterial,ShaderMaterial:ShaderMaterial,ShadowMaterial:ShadowMaterial,SpriteMaterial:SpriteMaterial}[e.type];if(void 0!==e.uuid&&(n.uuid=e.uuid),void 0!==e.name&&(n.name=e.name),void 0!==e.color&&n.color.setHex(e.color),void 0!==e.roughness&&(n.roughness=e.roughness),void 0!==e.metalness&&(n.metalness=e.metalness),void 0!==e.emissive&&n.emissive.setHex(e.emissive),void 0!==e.specular&&n.specular.setHex(e.specular),void 0!==e.shininess&&(n.shininess=e.shininess),void 0!==e.clearCoat&&(n.clearCoat=e.clearCoat),void 0!==e.clearCoatRoughness&&(n.clearCoatRoughness=e.clearCoatRoughness),void 0!==e.uniforms&&(n.uniforms=e.uniforms),void 0!==e.vertexShader&&(n.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(n.fragmentShader=e.fragmentShader),void 0!==e.vertexColors&&(n.vertexColors=e.vertexColors),void 0!==e.fog&&(n.fog=e.fog),void 0!==e.flatShading&&(n.flatShading=e.flatShading),void 0!==e.blending&&(n.blending=e.blending),void 0!==e.side&&(n.side=e.side),void 0!==e.opacity&&(n.opacity=e.opacity),void 0!==e.transparent&&(n.transparent=e.transparent),void 0!==e.alphaTest&&(n.alphaTest=e.alphaTest),void 0!==e.depthTest&&(n.depthTest=e.depthTest),void 0!==e.depthWrite&&(n.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(n.colorWrite=e.colorWrite),void 0!==e.wireframe&&(n.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(n.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(n.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(n.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(n.rotation=e.rotation),1!==e.linewidth&&(n.linewidth=e.linewidth),void 0!==e.dashSize&&(n.dashSize=e.dashSize),void 0!==e.gapSize&&(n.gapSize=e.gapSize),void 0!==e.scale&&(n.scale=e.scale),void 0!==e.polygonOffset&&(n.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(n.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(n.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.skinning&&(n.skinning=e.skinning),void 0!==e.morphTargets&&(n.morphTargets=e.morphTargets),void 0!==e.dithering&&(n.dithering=e.dithering),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.shading&&(n.flatShading=1===e.shading),void 0!==e.size&&(n.size=e.size),void 0!==e.sizeAttenuation&&(n.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(n.map=t(e.map)),void 0!==e.alphaMap&&(n.alphaMap=t(e.alphaMap),n.transparent=!0),void 0!==e.bumpMap&&(n.bumpMap=t(e.bumpMap)),void 0!==e.bumpScale&&(n.bumpScale=e.bumpScale),void 0!==e.normalMap&&(n.normalMap=t(e.normalMap)),void 0!==e.normalScale){var i=e.normalScale;!1===Array.isArray(i)&&(i=[i,i]),n.normalScale=(new Vector2).fromArray(i)}return void 0!==e.displacementMap&&(n.displacementMap=t(e.displacementMap)),void 0!==e.displacementScale&&(n.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(n.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(n.roughnessMap=t(e.roughnessMap)),void 0!==e.metalnessMap&&(n.metalnessMap=t(e.metalnessMap)),void 0!==e.emissiveMap&&(n.emissiveMap=t(e.emissiveMap)),void 0!==e.emissiveIntensity&&(n.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(n.specularMap=t(e.specularMap)),void 0!==e.envMap&&(n.envMap=t(e.envMap)),void 0!==e.reflectivity&&(n.reflectivity=e.reflectivity),void 0!==e.lightMap&&(n.lightMap=t(e.lightMap)),void 0!==e.lightMapIntensity&&(n.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(n.aoMap=t(e.aoMap)),void 0!==e.aoMapIntensity&&(n.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(n.gradientMap=t(e.gradientMap)),n}}),Object.assign(TextureLoader.prototype,{crossOrigin:"Anonymous",load:function(e,t,r,n){var i=new Texture,a=new ImageLoader(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(r){i.image=r;var n=e.search(/\.(jpg|jpeg)$/)>0||0===e.search(/^data\:image\/jpeg/);i.format=n?RGBFormat:RGBAFormat,i.needsUpdate=!0,void 0!==t&&t(i)},r,n),i},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),Loader.Handlers={handlers:[],add:function(e,t){this.handlers.push(e,t)},get:function(e){for(var t=this.handlers,r=0,n=t.length;r<n;r+=2){var i=t[r],a=t[r+1];if(i.test(e))return a}return null}},Object.assign(Loader.prototype,{crossOrigin:void 0,onLoadStart:function(){},onLoadProgress:function(){},onLoadComplete:function(){},initMaterials:function(e,t,r){for(var n=this,i=[],a=0;a<e.length;++a)i[a]=n.createMaterial(e[a],t,r);return i},createMaterial:function(){var e={NoBlending:NoBlending,NormalBlending:NormalBlending,AdditiveBlending:AdditiveBlending,SubtractiveBlending:SubtractiveBlending,MultiplyBlending:MultiplyBlending,CustomBlending:CustomBlending},t=new Color,r=new TextureLoader,n=new MaterialLoader;return function(i,a,o){function s(e,t,n,i,s){var l,u=a+e,h=Loader.Handlers.get(u);null!==h?l=h.load(u):(r.setCrossOrigin(o),l=r.load(u)),void 0!==t&&(l.repeat.fromArray(t),1!==t[0]&&(l.wrapS=RepeatWrapping),1!==t[1]&&(l.wrapT=RepeatWrapping)),void 0!==n&&l.offset.fromArray(n),void 0!==i&&("repeat"===i[0]&&(l.wrapS=RepeatWrapping),"mirror"===i[0]&&(l.wrapS=MirroredRepeatWrapping),"repeat"===i[1]&&(l.wrapT=RepeatWrapping),"mirror"===i[1]&&(l.wrapT=MirroredRepeatWrapping)),void 0!==s&&(l.anisotropy=s);var p=_Math.generateUUID();return c[p]=l,p}var c={},l={uuid:_Math.generateUUID(),type:"MeshLambertMaterial"};for(var u in i){var h=i[u];switch(u){case"DbgColor":case"DbgIndex":case"opticalDensity":case"illumination":break;case"DbgName":l.name=h;break;case"blending":l.blending=e[h];break;case"colorAmbient":case"mapAmbient":console.warn("Loader.createMaterial:",u,"is no longer supported.");break;case"colorDiffuse":l.color=t.fromArray(h).getHex();break;case"colorSpecular":l.specular=t.fromArray(h).getHex();break;case"colorEmissive":l.emissive=t.fromArray(h).getHex();break;case"specularCoef":l.shininess=h;break;case"shading":"basic"===h.toLowerCase()&&(l.type="MeshBasicMaterial"),"phong"===h.toLowerCase()&&(l.type="MeshPhongMaterial"),"standard"===h.toLowerCase()&&(l.type="MeshStandardMaterial");break;case"mapDiffuse":l.map=s(h,i.mapDiffuseRepeat,i.mapDiffuseOffset,i.mapDiffuseWrap,i.mapDiffuseAnisotropy);break;case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":break;case"mapEmissive":l.emissiveMap=s(h,i.mapEmissiveRepeat,i.mapEmissiveOffset,i.mapEmissiveWrap,i.mapEmissiveAnisotropy);break;case"mapEmissiveRepeat":case"mapEmissiveOffset":case"mapEmissiveWrap":case"mapEmissiveAnisotropy":break;case"mapLight":l.lightMap=s(h,i.mapLightRepeat,i.mapLightOffset,i.mapLightWrap,i.mapLightAnisotropy);break;case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":break;case"mapAO":l.aoMap=s(h,i.mapAORepeat,i.mapAOOffset,i.mapAOWrap,i.mapAOAnisotropy);break;case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":break;case"mapBump":l.bumpMap=s(h,i.mapBumpRepeat,i.mapBumpOffset,i.mapBumpWrap,i.mapBumpAnisotropy);break;case"mapBumpScale":l.bumpScale=h;break;case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":break;case"mapNormal":l.normalMap=s(h,i.mapNormalRepeat,i.mapNormalOffset,i.mapNormalWrap,i.mapNormalAnisotropy);break;case"mapNormalFactor":l.normalScale=h;break;case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":break;case"mapSpecular":l.specularMap=s(h,i.mapSpecularRepeat,i.mapSpecularOffset,i.mapSpecularWrap,i.mapSpecularAnisotropy);break;case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":break;case"mapMetalness":l.metalnessMap=s(h,i.mapMetalnessRepeat,i.mapMetalnessOffset,i.mapMetalnessWrap,i.mapMetalnessAnisotropy);break;case"mapMetalnessRepeat":case"mapMetalnessOffset":case"mapMetalnessWrap":case"mapMetalnessAnisotropy":break;case"mapRoughness":l.roughnessMap=s(h,i.mapRoughnessRepeat,i.mapRoughnessOffset,i.mapRoughnessWrap,i.mapRoughnessAnisotropy);break;case"mapRoughnessRepeat":case"mapRoughnessOffset":case"mapRoughnessWrap":case"mapRoughnessAnisotropy":break;case"mapAlpha":l.alphaMap=s(h,i.mapAlphaRepeat,i.mapAlphaOffset,i.mapAlphaWrap,i.mapAlphaAnisotropy);break;case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":case"mapAlphaAnisotropy":break;case"flipSided":l.side=BackSide;break;case"doubleSided":l.side=DoubleSide;break;case"transparency":console.warn("Loader.createMaterial: transparency has been renamed to opacity"),l.opacity=h;break;case"depthTest":case"depthWrite":case"colorWrite":case"opacity":case"reflectivity":case"transparent":case"visible":case"wireframe":l[u]=h;break;case"vertexColors":!0===h&&(l.vertexColors=VertexColors),"face"===h&&(l.vertexColors=FaceColors);break;default:console.error("Loader.createMaterial: Unsupported",u,h)}}return"MeshBasicMaterial"===l.type&&delete l.emissive,"MeshPhongMaterial"!==l.type&&delete l.specular,l.opacity<1&&(l.transparent=!0),n.setTextures(c),n.parse(l)}}()});var LoaderUtils={decodeText:function(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);for(var t="",r=0,n=e.length;r<n;r++)t+=String.fromCharCode(e[r]);return decodeURIComponent(escape(t))},extractUrlBase:function(e){var t=e.split("/");return 1===t.length?"./":(t.pop(),t.join("/")+"/")}};StringKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:StringKeyframeTrack,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:InterpolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),BooleanKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:BooleanKeyframeTrack,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:InterpolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Object.assign(Interpolant.prototype,{evaluate:function(e){var t=this,r=this.parameterPositions,n=this._cachedIndex,i=r[n],a=r[n-1];e:{t:{var o;r:{n:if(!(e<i)){for(c=n+2;;){if(void 0===i){if(e<a)break n;return n=r.length,t._cachedIndex=n,t.afterEnd_(n-1,e,a)}if(n===c)break;if(a=i,i=r[++n],e<i)break t}o=r.length;break r}if(e>=a)break e;var s=r[1];e<s&&(n=2,a=s);for(var c=n-2;;){if(void 0===a)return t._cachedIndex=0,t.beforeStart_(0,e,i);if(n===c)break;if(i=a,a=r[--n-1],e>=a)break t}o=n,n=0}for(;n<o;){var l=n+o>>>1;e<r[l]?o=l:n=l+1}if(i=r[n],void 0===(a=r[n-1]))return this._cachedIndex=0,this.beforeStart_(0,e,i);if(void 0===i)return n=r.length,this._cachedIndex=n,this.afterEnd_(n-1,a,e)}this._cachedIndex=n,this.intervalChanged_(n,a,i)}return this.interpolate_(n,a,e,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){for(var t=this.resultBuffer,r=this.sampleValues,n=this.valueSize,i=e*n,a=0;a!==n;++a)t[a]=r[i+a];return t},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(Interpolant.prototype,{beforeStart_:Interpolant.prototype.copySampleValue_,afterEnd_:Interpolant.prototype.copySampleValue_}),QuaternionLinearInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:QuaternionLinearInterpolant,interpolate_:function(e,t,r,n){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,c=(r-t)/(n-t),l=s+o;s!==l;s+=4)Quaternion.slerpFlat(i,0,a,s-o,a,s,c);return i}}),QuaternionKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:QuaternionKeyframeTrack,ValueTypeName:"quaternion",DefaultInterpolation:InterpolateLinear,InterpolantFactoryMethodLinear:function(e){return new QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0}),ColorKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:ColorKeyframeTrack,ValueTypeName:"color"}),NumberKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:NumberKeyframeTrack,ValueTypeName:"number"}),CubicInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:CubicInterpolant,DefaultSettings_:{endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding},intervalChanged_:function(e,t,r){var n=this.parameterPositions,i=e-2,a=e+1,o=n[i],s=n[a];if(void 0===o)switch(this.getSettings_().endingStart){case ZeroSlopeEnding:i=e,o=2*t-r;break;case WrapAroundEnding:o=t+n[i=n.length-2]-n[i+1];break;default:i=e,o=r}if(void 0===s)switch(this.getSettings_().endingEnd){case ZeroSlopeEnding:a=e,s=2*r-t;break;case WrapAroundEnding:a=1,s=r+n[1]-n[0];break;default:a=e-1,s=t}var c=.5*(r-t),l=this.valueSize;this._weightPrev=c/(t-o),this._weightNext=c/(s-r),this._offsetPrev=i*l,this._offsetNext=a*l},interpolate_:function(e,t,r,n){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,c=s-o,l=this._offsetPrev,u=this._offsetNext,h=this._weightPrev,p=this._weightNext,d=(r-t)/(n-t),f=d*d,m=f*d,v=-h*m+2*h*f-h*d,g=(1+h)*m+(-1.5-2*h)*f+(-.5+h)*d+1,y=(-1-p)*m+(1.5+p)*f+.5*d,x=p*m-p*f,b=0;b!==o;++b)i[b]=v*a[l+b]+g*a[c+b]+y*a[s+b]+x*a[u+b];return i}}),LinearInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:LinearInterpolant,interpolate_:function(e,t,r,n){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,c=s-o,l=(r-t)/(n-t),u=1-l,h=0;h!==o;++h)i[h]=a[c+h]*u+a[s+h]*l;return i}}),DiscreteInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:DiscreteInterpolant,interpolate_:function(e){return this.copySampleValue_(e-1)}});var AnimationUtils={arraySlice:function(e,t,r){return AnimationUtils.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==r?r:e.length)):e.slice(t,r)},convertArray:function(e,t,r){return!e||!r&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){function t(t,r){return e[t]-e[r]}for(var r=e.length,n=new Array(r),i=0;i!==r;++i)n[i]=i;return n.sort(t),n},sortedArray:function(e,t,r){for(var n=e.length,i=new e.constructor(n),a=0,o=0;o!==n;++a)for(var s=r[a]*t,c=0;c!==t;++c)i[o++]=e[s+c];return i},flattenJSON:function(e,t,r,n){for(var i=1,a=e[0];void 0!==a&&void 0===a[n];)a=e[i++];if(void 0!==a){var o=a[n];if(void 0!==o)if(Array.isArray(o))do{void 0!==(o=a[n])&&(t.push(a.time),r.push.apply(r,o)),a=e[i++]}while(void 0!==a);else if(void 0!==o.toArray)do{void 0!==(o=a[n])&&(t.push(a.time),o.toArray(r,r.length)),a=e[i++]}while(void 0!==a);else do{void 0!==(o=a[n])&&(t.push(a.time),r.push(o)),a=e[i++]}while(void 0!==a)}}};Object.assign(KeyframeTrack,{parse:function(e){if(void 0===e.type)throw new Error("KeyframeTrack: track type undefined, can not parse");var t=KeyframeTrack._getTrackTypeForValueTypeName(e.type);if(void 0===e.times){var r=[],n=[];AnimationUtils.flattenJSON(e.keys,r,n,"value"),e.times=r,e.values=n}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)},toJSON:function(e){var t,r=e.constructor;if(void 0!==r.toJSON)t=r.toJSON(e);else{t={name:e.name,times:AnimationUtils.convertArray(e.times,Array),values:AnimationUtils.convertArray(e.values,Array)};var n=e.getInterpolation();n!==e.DefaultInterpolation&&(t.interpolation=n)}return t.type=e.ValueTypeName,t},_getTrackTypeForValueTypeName:function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return NumberKeyframeTrack;case"vector":case"vector2":case"vector3":case"vector4":return VectorKeyframeTrack;case"color":return ColorKeyframeTrack;case"quaternion":return QuaternionKeyframeTrack;case"bool":case"boolean":return BooleanKeyframeTrack;case"string":return StringKeyframeTrack}throw new Error("KeyframeTrack: Unsupported typeName: "+e)}}),Object.assign(KeyframeTrack.prototype,{constructor:KeyframeTrack,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:InterpolateLinear,InterpolantFactoryMethodDiscrete:function(e){return new DiscreteInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new LinearInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new CubicInterpolant(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){var t;switch(e){case InterpolateDiscrete:t=this.InterpolantFactoryMethodDiscrete;break;case InterpolateLinear:t=this.InterpolantFactoryMethodLinear;break;case InterpolateSmooth:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){var r="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(r);this.setInterpolation(this.DefaultInterpolation)}return void console.warn("KeyframeTrack:",r)}this.createInterpolant=t},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return InterpolateSmooth}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(0!==e)for(var t=this.times,r=0,n=t.length;r!==n;++r)t[r]+=e;return this},scale:function(e){if(1!==e)for(var t=this.times,r=0,n=t.length;r!==n;++r)t[r]*=e;return this},trim:function(e,t){for(var r=this.times,n=r.length,i=0,a=n-1;i!==n&&r[i]<e;)++i;for(;-1!==a&&r[a]>t;)--a;if(++a,0!==i||a!==n){i>=a&&(i=(a=Math.max(a,1))-1);var o=this.getValueSize();this.times=AnimationUtils.arraySlice(r,i,a),this.values=AnimationUtils.arraySlice(this.values,i*o,a*o)}return this},validate:function(){var e=this,t=!0,r=this.getValueSize();r-Math.floor(r)!=0&&(console.error("KeyframeTrack: Invalid value size in track.",this),t=!1);var n=this.times,i=this.values,a=n.length;0===a&&(console.error("KeyframeTrack: Track is empty.",this),t=!1);for(var o=null,s=0;s!==a;s++){var c=n[s];if("number"==typeof c&&isNaN(c)){console.error("KeyframeTrack: Time is not a valid number.",e,s,c),t=!1;break}if(null!==o&&o>c){console.error("KeyframeTrack: Out of order keys.",e,s,c,o),t=!1;break}o=c}if(void 0!==i&&AnimationUtils.isTypedArray(i))for(var s=0,l=i.length;s!==l;++s){var u=i[s];if(isNaN(u)){console.error("KeyframeTrack: Value is not a valid number.",e,s,u),t=!1;break}}return t},optimize:function(){for(var e=this.times,t=this.values,r=this.getValueSize(),n=this.getInterpolation()===InterpolateSmooth,i=1,a=e.length-1,o=1;o<a;++o){var s=!1,c=e[o];if(c!==e[o+1]&&(1!==o||c!==c[0]))if(n)s=!0;else for(var l=o*r,u=l-r,h=l+r,p=0;p!==r;++p){var d=t[l+p];if(d!==t[u+p]||d!==t[h+p]){s=!0;break}}if(s){if(o!==i){e[i]=e[o];for(var f=o*r,m=i*r,p=0;p!==r;++p)t[m+p]=t[f+p]}++i}}if(a>0){e[i]=e[a];for(var f=a*r,m=i*r,p=0;p!==r;++p)t[m+p]=t[f+p];++i}return i!==e.length&&(this.times=AnimationUtils.arraySlice(e,0,i),this.values=AnimationUtils.arraySlice(t,0,i*r)),this}}),VectorKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:VectorKeyframeTrack,ValueTypeName:"vector"}),Object.assign(AnimationClip,{parse:function(e){for(var t=[],r=e.tracks,n=1/(e.fps||1),i=0,a=r.length;i!==a;++i)t.push(KeyframeTrack.parse(r[i]).scale(n));return new AnimationClip(e.name,e.duration,t)},toJSON:function(e){for(var t=[],r=e.tracks,n={name:e.name,duration:e.duration,tracks:t},i=0,a=r.length;i!==a;++i)t.push(KeyframeTrack.toJSON(r[i]));return n},CreateFromMorphTargetSequence:function(e,t,r,n){for(var i=t.length,a=[],o=0;o<i;o++){var s=[],c=[];s.push((o+i-1)%i,o,(o+1)%i),c.push(0,1,0);var l=AnimationUtils.getKeyframeOrder(s);s=AnimationUtils.sortedArray(s,1,l),c=AnimationUtils.sortedArray(c,1,l),n||0!==s[0]||(s.push(i),c.push(c[0])),a.push(new NumberKeyframeTrack(".morphTargetInfluences["+t[o].name+"]",s,c).scale(1/r))}return new AnimationClip(e,-1,a)},findByName:function(e,t){var r=e;if(!Array.isArray(e)){var n=e;r=n.geometry&&n.geometry.animations||n.animations}for(var i=0;i<r.length;i++)if(r[i].name===t)return r[i];return null},CreateClipsFromMorphTargetSequences:function(e,t,r){for(var n={},i=0,a=e.length;i<a;i++){var o=e[i],s=o.name.match(/^([\w-]*?)([\d]+)$/);if(s&&s.length>1){var c=n[u=s[1]];c||(n[u]=c=[]),c.push(o)}}var l=[];for(var u in n)l.push(AnimationClip.CreateFromMorphTargetSequence(u,n[u],t,r));return l},parseAnimation:function(e,t){if(!e)return console.error("AnimationClip: No animation in JSONLoader data."),null;for(var r=function(e,t,r,n,i){if(0!==r.length){var a=[],o=[];AnimationUtils.flattenJSON(r,a,o,n),0!==a.length&&i.push(new e(t,a,o))}},n=[],i=e.name||"default",a=e.length||-1,o=e.fps||30,s=e.hierarchy||[],c=0;c<s.length;c++){var l=s[c].keys;if(l&&0!==l.length)if(l[0].morphTargets){for(var u={},h=0;h<l.length;h++)if(l[h].morphTargets)for(m=0;m<l[h].morphTargets.length;m++)u[l[h].morphTargets[m]]=-1;for(var p in u){for(var d=[],f=[],m=0;m!==l[h].morphTargets.length;++m){var v=l[h];d.push(v.time),f.push(v.morphTarget===p?1:0)}n.push(new NumberKeyframeTrack(".morphTargetInfluence["+p+"]",d,f))}a=u.length*(o||1)}else{var g=".bones["+t[c].name+"]";r(VectorKeyframeTrack,g+".position",l,"pos",n),r(QuaternionKeyframeTrack,g+".quaternion",l,"rot",n),r(VectorKeyframeTrack,g+".scale",l,"scl",n)}}return 0===n.length?null:new AnimationClip(i,a,n)}}),Object.assign(AnimationClip.prototype,{resetDuration:function(){for(var e=this,t=0,r=0,n=this.tracks.length;r!==n;++r){var i=e.tracks[r];t=Math.max(t,i.times[i.times.length-1])}this.duration=t},trim:function(){for(var e=this,t=0;t<this.tracks.length;t++)e.tracks[t].trim(0,e.duration);return this},optimize:function(){for(var e=this,t=0;t<this.tracks.length;t++)e.tracks[t].optimize();return this}}),Object.assign(JSONLoader.prototype,{load:function(e,t,r,n){var i=this,a=this.texturePath&&"string"==typeof this.texturePath?this.texturePath:LoaderUtils.extractUrlBase(e),o=new FileLoader(this.manager);o.setWithCredentials(this.withCredentials),o.load(e,function(r){var n=JSON.parse(r),o=n.metadata;if(void 0!==o){var s=o.type;if(void 0!==s&&"object"===s.toLowerCase())return void console.error("JSONLoader: "+e+" should be loaded with ObjectLoader instead.")}var c=i.parse(n,a);t(c.geometry,c.materials)},r,n)},setTexturePath:function(e){this.texturePath=e},parse:function(){function e(e,t){function r(e,t){return e&1<<t}var n,i,a,o,s,c,l,u,h,p,d,f,m,v,g,y,x,b,_,M,w,S,L,T,C,A=e.faces,E=e.vertices,P=e.normals,B=e.colors,D=e.scale,R=0;if(void 0!==e.uvs){for(n=0;n<e.uvs.length;n++)e.uvs[n].length&&R++;for(n=0;n<R;n++)t.faceVertexUvs[n]=[]}for(o=0,s=E.length;o<s;)(b=new Vector3).x=E[o++]*D,b.y=E[o++]*D,b.z=E[o++]*D,t.vertices.push(b);for(o=0,s=A.length;o<s;)if(p=A[o++],d=r(p,0),f=r(p,1),m=r(p,3),v=r(p,4),g=r(p,5),y=r(p,6),x=r(p,7),d){if(M=new Face3,M.a=A[o],M.b=A[o+1],M.c=A[o+3],w=new Face3,w.a=A[o+1],w.b=A[o+2],w.c=A[o+3],o+=4,f&&(h=A[o++],M.materialIndex=h,w.materialIndex=h),a=t.faces.length,m)for(n=0;n<R;n++)for(T=e.uvs[n],t.faceVertexUvs[n][a]=[],t.faceVertexUvs[n][a+1]=[],i=0;i<4;i++)C=new Vector2(T[2*(u=A[o++])],T[2*u+1]),2!==i&&t.faceVertexUvs[n][a].push(C),0!==i&&t.faceVertexUvs[n][a+1].push(C);if(v&&(l=3*A[o++],M.normal.set(P[l++],P[l++],P[l]),w.normal.copy(M.normal)),g)for(n=0;n<4;n++)l=3*A[o++],L=new Vector3(P[l++],P[l++],P[l]),2!==n&&M.vertexNormals.push(L),0!==n&&w.vertexNormals.push(L);if(y&&(S=B[c=A[o++]],M.color.setHex(S),w.color.setHex(S)),x)for(n=0;n<4;n++)S=B[c=A[o++]],2!==n&&M.vertexColors.push(new Color(S)),0!==n&&w.vertexColors.push(new Color(S));t.faces.push(M),t.faces.push(w)}else{if(_=new Face3,_.a=A[o++],_.b=A[o++],_.c=A[o++],f&&(h=A[o++],_.materialIndex=h),a=t.faces.length,m)for(n=0;n<R;n++)for(T=e.uvs[n],t.faceVertexUvs[n][a]=[],i=0;i<3;i++)C=new Vector2(T[2*(u=A[o++])],T[2*u+1]),t.faceVertexUvs[n][a].push(C);if(v&&(l=3*A[o++],_.normal.set(P[l++],P[l++],P[l])),g)for(n=0;n<3;n++)l=3*A[o++],L=new Vector3(P[l++],P[l++],P[l]),_.vertexNormals.push(L);if(y&&(c=A[o++],_.color.setHex(B[c])),x)for(n=0;n<3;n++)c=A[o++],_.vertexColors.push(new Color(B[c]));t.faces.push(_)}}function t(e,t){var r=void 0!==e.influencesPerVertex?e.influencesPerVertex:2;if(e.skinWeights)for(var n=0,i=e.skinWeights.length;n<i;n+=r){var a=e.skinWeights[n],o=r>1?e.skinWeights[n+1]:0,s=r>2?e.skinWeights[n+2]:0,c=r>3?e.skinWeights[n+3]:0;t.skinWeights.push(new Vector4(a,o,s,c))}if(e.skinIndices)for(var n=0,i=e.skinIndices.length;n<i;n+=r){var l=e.skinIndices[n],u=r>1?e.skinIndices[n+1]:0,h=r>2?e.skinIndices[n+2]:0,p=r>3?e.skinIndices[n+3]:0;t.skinIndices.push(new Vector4(l,u,h,p))}t.bones=e.bones,t.bones&&t.bones.length>0&&(t.skinWeights.length!==t.skinIndices.length||t.skinIndices.length!==t.vertices.length)&&console.warn("When skinning, number of vertices ("+t.vertices.length+"), skinIndices ("+t.skinIndices.length+"), and skinWeights ("+t.skinWeights.length+") should match.")}function r(e,t){var r=e.scale;if(void 0!==e.morphTargets)for(var n=0,i=e.morphTargets.length;n<i;n++){t.morphTargets[n]={},t.morphTargets[n].name=e.morphTargets[n].name,t.morphTargets[n].vertices=[];for(var a=t.morphTargets[n].vertices,o=e.morphTargets[n].vertices,s=0,c=o.length;s<c;s+=3){var l=new Vector3;l.x=o[s]*r,l.y=o[s+1]*r,l.z=o[s+2]*r,a.push(l)}}if(void 0!==e.morphColors&&e.morphColors.length>0){console.warn('JSONLoader: "morphColors" no longer supported. Using them as face colors.');for(var u=t.faces,h=e.morphColors[0].colors,n=0,i=u.length;n<i;n++)u[n].color.fromArray(h,3*n)}}function n(e,t){var r=[],n=[];void 0!==e.animation&&n.push(e.animation),void 0!==e.animations&&(e.animations.length?n=n.concat(e.animations):n.push(e.animations));for(var i=0;i<n.length;i++){var a=AnimationClip.parseAnimation(n[i],t.bones);a&&r.push(a)}if(t.morphTargets){var o=AnimationClip.CreateClipsFromMorphTargetSequences(t.morphTargets,10);r=r.concat(o)}r.length>0&&(t.animations=r)}return function(i,a){void 0!==i.data&&(i=i.data),void 0!==i.scale?i.scale=1/i.scale:i.scale=1;var o=new Geometry;return e(i,o),t(i,o),r(i,o),n(i,o),o.computeFaceNormals(),o.computeBoundingSphere(),void 0===i.materials||0===i.materials.length?{geometry:o}:{geometry:o,materials:Loader.prototype.initMaterials(i.materials,a,this.crossOrigin)}}}()}),Group.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Group,isGroup:!0}),LineLoop.prototype=Object.assign(Object.create(Line.prototype),{constructor:LineLoop,isLineLoop:!0}),LOD.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:LOD,copy:function(e){var t=this;Object3D.prototype.copy.call(this,e,!1);for(var r=e.levels,n=0,i=r.length;n<i;n++){var a=r[n];t.addLevel(a.object.clone(),a.distance)}return this},addLevel:function(e,t){void 0===t&&(t=0),t=Math.abs(t);for(var r=this.levels,n=0;n<r.length&&!(t<r[n].distance);n++);r.splice(n,0,{distance:t,object:e}),this.add(e)},getObjectForDistance:function(e){for(var t=this.levels,r=1,n=t.length;r<n&&!(e<t[r].distance);r++);return t[r-1].object},raycast:function(){var e=new Vector3;return function(t,r){e.setFromMatrixPosition(this.matrixWorld);var n=t.ray.origin.distanceTo(e);this.getObjectForDistance(n).raycast(t,r)}}(),update:function(){var e=new Vector3,t=new Vector3;return function(r){var n=this.levels;if(n.length>1){e.setFromMatrixPosition(r.matrixWorld),t.setFromMatrixPosition(this.matrixWorld);var i=e.distanceTo(t);n[0].object.visible=!0;for(var a=1,o=n.length;a<o&&i>=n[a].distance;a++)n[a-1].object.visible=!1,n[a].object.visible=!0;for(;a<o;a++)n[a].object.visible=!1}}}(),toJSON:function(e){var t=Object3D.prototype.toJSON.call(this,e);t.object.levels=[];for(var r=this.levels,n=0,i=r.length;n<i;n++){var a=r[n];t.object.levels.push({object:a.object.uuid,distance:a.distance})}return t}}),Object.assign(Skeleton.prototype,{calculateInverses:function(){var e=this;this.boneInverses=[];for(var t=0,r=this.bones.length;t<r;t++){var n=new Matrix4;e.bones[t]&&n.getInverse(e.bones[t].matrixWorld),e.boneInverses.push(n)}},pose:function(){var e,t,r,n=this;for(t=0,r=this.bones.length;t<r;t++)(e=n.bones[t])&&e.matrixWorld.getInverse(n.boneInverses[t]);for(t=0,r=this.bones.length;t<r;t++)(e=n.bones[t])&&(e.parent&&e.parent.isBone?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))},update:function(){var e=new Matrix4,t=new Matrix4;return function(){for(var r=this.bones,n=this.boneInverses,i=this.boneMatrices,a=this.boneTexture,o=0,s=r.length;o<s;o++){var c=r[o]?r[o].matrixWorld:t;e.multiplyMatrices(c,n[o]),e.toArray(i,16*o)}void 0!==a&&(a.needsUpdate=!0)}}(),clone:function(){return new Skeleton(this.bones,this.boneInverses)},getBoneByName:function(e){for(var t=this,r=0,n=this.bones.length;r<n;r++){var i=t.bones[r];if(i.name===e)return i}}}),Bone.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Bone,isBone:!0}),SkinnedMesh.prototype=Object.assign(Object.create(Mesh.prototype),{constructor:SkinnedMesh,isSkinnedMesh:!0,initBones:function(){var e,t,r,n,i=this,a=[];if(this.geometry&&void 0!==this.geometry.bones){for(r=0,n=this.geometry.bones.length;r<n;r++)t=i.geometry.bones[r],e=new Bone,a.push(e),e.name=t.name,e.position.fromArray(t.pos),e.quaternion.fromArray(t.rotq),void 0!==t.scl&&e.scale.fromArray(t.scl);for(r=0,n=this.geometry.bones.length;r<n;r++)-1!==(t=i.geometry.bones[r]).parent&&null!==t.parent&&void 0!==a[t.parent]?a[t.parent].add(a[r]):i.add(a[r])}return this.updateMatrixWorld(!0),a},bind:function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){var e,t,r=this;if(this.geometry&&this.geometry.isGeometry)for(t=0;t<this.geometry.skinWeights.length;t++){var n=r.geometry.skinWeights[t];(e=1/n.manhattanLength())!==1/0?n.multiplyScalar(e):n.set(1,0,0,0)}else if(this.geometry&&this.geometry.isBufferGeometry){var i=new Vector4,a=this.geometry.attributes.skinWeight;for(t=0;t<a.count;t++)i.x=a.getX(t),i.y=a.getY(t),i.z=a.getZ(t),i.w=a.getW(t),(e=1/i.manhattanLength())!==1/0?i.multiplyScalar(e):i.set(1,0,0,0),a.setXYZW(t,i.x,i.y,i.z,i.w)}},updateMatrixWorld:function(e){Mesh.prototype.updateMatrixWorld.call(this,e),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Object.assign(Curve.prototype,{getPoint:function(){return console.warn("Curve: .getPoint() not implemented."),null},getPointAt:function(e,t){var r=this.getUtoTmapping(e);return this.getPoint(r,t)},getPoints:function(e){var t=this;void 0===e&&(e=5);for(var r=[],n=0;n<=e;n++)r.push(t.getPoint(n/e));return r},getSpacedPoints:function(e){var t=this;void 0===e&&(e=5);for(var r=[],n=0;n<=e;n++)r.push(t.getPointAt(n/e));return r},getLength:function(){var e=this.getLengths();return e[e.length-1]},getLengths:function(e){var t=this;if(void 0===e&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var r,n,i=[],a=this.getPoint(0),o=0;for(i.push(0),n=1;n<=e;n++)o+=(r=t.getPoint(n/e)).distanceTo(a),i.push(o),a=r;return this.cacheArcLengths=i,i},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){var r,n=this.getLengths(),i=0,a=n.length;r=t||e*n[a-1];for(var o,s=0,c=a-1;s<=c;)if(i=Math.floor(s+(c-s)/2),(o=n[i]-r)<0)s=i+1;else{if(!(o>0)){c=i;break}c=i-1}if(i=c,n[i]===r)return i/(a-1);var l=n[i];return(i+(r-l)/(n[i+1]-l))/(a-1)},getTangent:function(e){var t=e-1e-4,r=e+1e-4;t<0&&(t=0),r>1&&(r=1);var n=this.getPoint(t);return this.getPoint(r).clone().sub(n).normalize()},getTangentAt:function(e){var t=this.getUtoTmapping(e);return this.getTangent(t)},computeFrenetFrames:function(e,t){var r,n,i,a=this,o=new Vector3,s=[],c=[],l=[],u=new Vector3,h=new Matrix4;for(r=0;r<=e;r++)n=r/e,s[r]=a.getTangentAt(n),s[r].normalize();c[0]=new Vector3,l[0]=new Vector3;var p=Number.MAX_VALUE,d=Math.abs(s[0].x),f=Math.abs(s[0].y),m=Math.abs(s[0].z);for(d<=p&&(p=d,o.set(1,0,0)),f<=p&&(p=f,o.set(0,1,0)),m<=p&&o.set(0,0,1),u.crossVectors(s[0],o).normalize(),c[0].crossVectors(s[0],u),l[0].crossVectors(s[0],c[0]),r=1;r<=e;r++)c[r]=c[r-1].clone(),l[r]=l[r-1].clone(),u.crossVectors(s[r-1],s[r]),u.length()>Number.EPSILON&&(u.normalize(),i=Math.acos(_Math.clamp(s[r-1].dot(s[r]),-1,1)),c[r].applyMatrix4(h.makeRotationAxis(u,i))),l[r].crossVectors(s[r],c[r]);if(!0===t)for(i=Math.acos(_Math.clamp(c[0].dot(c[e]),-1,1)),i/=e,s[0].dot(u.crossVectors(c[0],c[e]))>0&&(i=-i),r=1;r<=e;r++)c[r].applyMatrix4(h.makeRotationAxis(s[r],i*r)),l[r].crossVectors(s[r],c[r]);return{tangents:s,normals:c,binormals:l}},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this},toJSON:function(){var e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e},fromJSON:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}),EllipseCurve.prototype=Object.create(Curve.prototype),EllipseCurve.prototype.constructor=EllipseCurve,EllipseCurve.prototype.isEllipseCurve=!0,EllipseCurve.prototype.getPoint=function(e,t){for(var r=t||new Vector2,n=2*Math.PI,i=this.aEndAngle-this.aStartAngle,a=Math.abs(i)<Number.EPSILON;i<0;)i+=n;for(;i>n;)i-=n;i<Number.EPSILON&&(i=a?0:n),!0!==this.aClockwise||a||(i===n?i=-n:i-=n);var o=this.aStartAngle+e*i,s=this.aX+this.xRadius*Math.cos(o),c=this.aY+this.yRadius*Math.sin(o);if(0!==this.aRotation){var l=Math.cos(this.aRotation),u=Math.sin(this.aRotation),h=s-this.aX,p=c-this.aY;s=h*l-p*u+this.aX,c=h*u+p*l+this.aY}return r.set(s,c)},EllipseCurve.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},EllipseCurve.prototype.toJSON=function(){var e=Curve.prototype.toJSON.call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e},EllipseCurve.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},ArcCurve.prototype=Object.create(EllipseCurve.prototype),ArcCurve.prototype.constructor=ArcCurve,ArcCurve.prototype.isArcCurve=!0;var tmp=new Vector3,px=new CubicPoly,py=new CubicPoly,pz=new CubicPoly;CatmullRomCurve3.prototype=Object.create(Curve.prototype),CatmullRomCurve3.prototype.constructor=CatmullRomCurve3,CatmullRomCurve3.prototype.isCatmullRomCurve3=!0,CatmullRomCurve3.prototype.getPoint=function(e,t){var r=t||new Vector3,n=this.points,i=n.length,a=(i-(this.closed?0:1))*e,o=Math.floor(a),s=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/n.length)+1)*n.length:0===s&&o===i-1&&(o=i-2,s=1);var c,l,u,h;if(this.closed||o>0?c=n[(o-1)%i]:(tmp.subVectors(n[0],n[1]).add(n[0]),c=tmp),l=n[o%i],u=n[(o+1)%i],this.closed||o+2<i?h=n[(o+2)%i]:(tmp.subVectors(n[i-1],n[i-2]).add(n[i-1]),h=tmp),"centripetal"===this.curveType||"chordal"===this.curveType){var p="chordal"===this.curveType?.5:.25,d=Math.pow(c.distanceToSquared(l),p),f=Math.pow(l.distanceToSquared(u),p),m=Math.pow(u.distanceToSquared(h),p);f<1e-4&&(f=1),d<1e-4&&(d=f),m<1e-4&&(m=f),px.initNonuniformCatmullRom(c.x,l.x,u.x,h.x,d,f,m),py.initNonuniformCatmullRom(c.y,l.y,u.y,h.y,d,f,m),pz.initNonuniformCatmullRom(c.z,l.z,u.z,h.z,d,f,m)}else"catmullrom"===this.curveType&&(px.initCatmullRom(c.x,l.x,u.x,h.x,this.tension),py.initCatmullRom(c.y,l.y,u.y,h.y,this.tension),pz.initCatmullRom(c.z,l.z,u.z,h.z,this.tension));return r.set(px.calc(s),py.calc(s),pz.calc(s)),r},CatmullRomCurve3.prototype.copy=function(e){var t=this;Curve.prototype.copy.call(this,e),this.points=[];for(var r=0,n=e.points.length;r<n;r++){var i=e.points[r];t.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},CatmullRomCurve3.prototype.toJSON=function(){var e=this,t=Curve.prototype.toJSON.call(this);t.points=[];for(var r=0,n=this.points.length;r<n;r++){var i=e.points[r];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t},CatmullRomCurve3.prototype.fromJSON=function(e){var t=this;Curve.prototype.fromJSON.call(this,e),this.points=[];for(var r=0,n=e.points.length;r<n;r++){var i=e.points[r];t.points.push((new Vector3).fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},CubicBezierCurve.prototype=Object.create(Curve.prototype),CubicBezierCurve.prototype.constructor=CubicBezierCurve,CubicBezierCurve.prototype.isCubicBezierCurve=!0,CubicBezierCurve.prototype.getPoint=function(e,t){var r=t||new Vector2,n=this.v0,i=this.v1,a=this.v2,o=this.v3;return r.set(CubicBezier(e,n.x,i.x,a.x,o.x),CubicBezier(e,n.y,i.y,a.y,o.y)),r},CubicBezierCurve.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},CubicBezierCurve.prototype.toJSON=function(){var e=Curve.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},CubicBezierCurve.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},CubicBezierCurve3.prototype=Object.create(Curve.prototype),CubicBezierCurve3.prototype.constructor=CubicBezierCurve3,CubicBezierCurve3.prototype.isCubicBezierCurve3=!0,CubicBezierCurve3.prototype.getPoint=function(e,t){var r=t||new Vector3,n=this.v0,i=this.v1,a=this.v2,o=this.v3;return r.set(CubicBezier(e,n.x,i.x,a.x,o.x),CubicBezier(e,n.y,i.y,a.y,o.y),CubicBezier(e,n.z,i.z,a.z,o.z)),r},CubicBezierCurve3.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},CubicBezierCurve3.prototype.toJSON=function(){var e=Curve.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},CubicBezierCurve3.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},LineCurve.prototype=Object.create(Curve.prototype),LineCurve.prototype.constructor=LineCurve,LineCurve.prototype.isLineCurve=!0,LineCurve.prototype.getPoint=function(e,t){var r=t||new Vector2;return 1===e?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(e).add(this.v1)),r},LineCurve.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},LineCurve.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()},LineCurve.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},LineCurve.prototype.toJSON=function(){var e=Curve.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},LineCurve.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},LineCurve3.prototype=Object.create(Curve.prototype),LineCurve3.prototype.constructor=LineCurve3,LineCurve3.prototype.isLineCurve3=!0,LineCurve3.prototype.getPoint=function(e,t){var r=t||new Vector3;return 1===e?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(e).add(this.v1)),r},LineCurve3.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},LineCurve3.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},LineCurve3.prototype.toJSON=function(){var e=Curve.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},LineCurve3.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},QuadraticBezierCurve.prototype=Object.create(Curve.prototype),QuadraticBezierCurve.prototype.constructor=QuadraticBezierCurve,QuadraticBezierCurve.prototype.isQuadraticBezierCurve=!0,QuadraticBezierCurve.prototype.getPoint=function(e,t){var r=t||new Vector2,n=this.v0,i=this.v1,a=this.v2;return r.set(QuadraticBezier(e,n.x,i.x,a.x),QuadraticBezier(e,n.y,i.y,a.y)),r},QuadraticBezierCurve.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},QuadraticBezierCurve.prototype.toJSON=function(){var e=Curve.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},QuadraticBezierCurve.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},QuadraticBezierCurve3.prototype=Object.create(Curve.prototype),QuadraticBezierCurve3.prototype.constructor=QuadraticBezierCurve3,QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3=!0,QuadraticBezierCurve3.prototype.getPoint=function(e,t){var r=t||new Vector3,n=this.v0,i=this.v1,a=this.v2;return r.set(QuadraticBezier(e,n.x,i.x,a.x),QuadraticBezier(e,n.y,i.y,a.y),QuadraticBezier(e,n.z,i.z,a.z)),r},QuadraticBezierCurve3.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},QuadraticBezierCurve3.prototype.toJSON=function(){var e=Curve.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},QuadraticBezierCurve3.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},SplineCurve.prototype=Object.create(Curve.prototype),SplineCurve.prototype.constructor=SplineCurve,SplineCurve.prototype.isSplineCurve=!0,SplineCurve.prototype.getPoint=function(e,t){var r=t||new Vector2,n=this.points,i=(n.length-1)*e,a=Math.floor(i),o=i-a,s=n[0===a?a:a-1],c=n[a],l=n[a>n.length-2?n.length-1:a+1],u=n[a>n.length-3?n.length-1:a+2];return r.set(CatmullRom(o,s.x,c.x,l.x,u.x),CatmullRom(o,s.y,c.y,l.y,u.y)),r},SplineCurve.prototype.copy=function(e){var t=this;Curve.prototype.copy.call(this,e),this.points=[];for(var r=0,n=e.points.length;r<n;r++){var i=e.points[r];t.points.push(i.clone())}return this},SplineCurve.prototype.toJSON=function(){var e=this,t=Curve.prototype.toJSON.call(this);t.points=[];for(var r=0,n=this.points.length;r<n;r++){var i=e.points[r];t.points.push(i.toArray())}return t},SplineCurve.prototype.fromJSON=function(e){var t=this;Curve.prototype.fromJSON.call(this,e),this.points=[];for(var r=0,n=e.points.length;r<n;r++){var i=e.points[r];t.points.push((new Vector2).fromArray(i))}return this};var Curves={ArcCurve:ArcCurve,CatmullRomCurve3:CatmullRomCurve3,CubicBezierCurve:CubicBezierCurve,CubicBezierCurve3:CubicBezierCurve3,EllipseCurve:EllipseCurve,LineCurve:LineCurve,LineCurve3:LineCurve3,QuadraticBezierCurve:QuadraticBezierCurve,QuadraticBezierCurve3:QuadraticBezierCurve3,SplineCurve:SplineCurve};CurvePath.prototype=Object.assign(Object.create(Curve.prototype),{constructor:CurvePath,add:function(e){this.curves.push(e)},closePath:function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Curves.LineCurve(t,e))},getPoint:function(e){for(var t=this,r=e*this.getLength(),n=this.getCurveLengths(),i=0;i<n.length;){if(n[i]>=r){var a=n[i]-r,o=t.curves[i],s=o.getLength(),c=0===s?0:1-a/s;return o.getPointAt(c)}i++}return null},getLength:function(){var e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){var e=this;if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var t=[],r=0,n=0,i=this.curves.length;n<i;n++)r+=e.curves[n].getLength(),t.push(r);return this.cacheLengths=t,t},getSpacedPoints:function(e){var t=this;void 0===e&&(e=40);for(var r=[],n=0;n<=e;n++)r.push(t.getPoint(n/e));return this.autoClose&&r.push(r[0]),r},getPoints:function(e){e=e||12;for(var t,r=[],n=0,i=this.curves;n<i.length;n++)for(var a=i[n],o=a&&a.isEllipseCurve?2*e:a&&a.isLineCurve?1:a&&a.isSplineCurve?e*a.points.length:e,s=a.getPoints(o),c=0;c<s.length;c++){var l=s[c];t&&t.equals(l)||(r.push(l),t=l)}return this.autoClose&&r.length>1&&!r[r.length-1].equals(r[0])&&r.push(r[0]),r},copy:function(e){var t=this;Curve.prototype.copy.call(this,e),this.curves=[];for(var r=0,n=e.curves.length;r<n;r++){var i=e.curves[r];t.curves.push(i.clone())}return this.autoClose=e.autoClose,this},toJSON:function(){var e=this,t=Curve.prototype.toJSON.call(this);t.autoClose=this.autoClose,t.curves=[];for(var r=0,n=this.curves.length;r<n;r++){var i=e.curves[r];t.curves.push(i.toJSON())}return t},fromJSON:function(e){var t=this;Curve.prototype.fromJSON.call(this,e),this.autoClose=e.autoClose,this.curves=[];for(var r=0,n=e.curves.length;r<n;r++){var i=e.curves[r];t.curves.push((new Curves[i.type]).fromJSON(i))}return this}}),Path.prototype=Object.assign(Object.create(CurvePath.prototype),{constructor:Path,setFromPoints:function(e){var t=this;this.moveTo(e[0].x,e[0].y);for(var r=1,n=e.length;r<n;r++)t.lineTo(e[r].x,e[r].y)},moveTo:function(e,t){this.currentPoint.set(e,t)},lineTo:function(e,t){var r=new LineCurve(this.currentPoint.clone(),new Vector2(e,t));this.curves.push(r),this.currentPoint.set(e,t)},quadraticCurveTo:function(e,t,r,n){var i=new QuadraticBezierCurve(this.currentPoint.clone(),new Vector2(e,t),new Vector2(r,n));this.curves.push(i),this.currentPoint.set(r,n)},bezierCurveTo:function(e,t,r,n,i,a){var o=new CubicBezierCurve(this.currentPoint.clone(),new Vector2(e,t),new Vector2(r,n),new Vector2(i,a));this.curves.push(o),this.currentPoint.set(i,a)},splineThru:function(e){var t=new SplineCurve([this.currentPoint.clone()].concat(e));this.curves.push(t),this.currentPoint.copy(e[e.length-1])},arc:function(e,t,r,n,i,a){var o=this.currentPoint.x,s=this.currentPoint.y;this.absarc(e+o,t+s,r,n,i,a)},absarc:function(e,t,r,n,i,a){this.absellipse(e,t,r,r,n,i,a)},ellipse:function(e,t,r,n,i,a,o,s){var c=this.currentPoint.x,l=this.currentPoint.y;this.absellipse(e+c,t+l,r,n,i,a,o,s)},absellipse:function(e,t,r,n,i,a,o,s){var c=new EllipseCurve(e,t,r,n,i,a,o,s);if(this.curves.length>0){var l=c.getPoint(0);l.equals(this.currentPoint)||this.lineTo(l.x,l.y)}this.curves.push(c);var u=c.getPoint(1);this.currentPoint.copy(u)},copy:function(e){return CurvePath.prototype.copy.call(this,e),this.currentPoint.copy(e.currentPoint),this},toJSON:function(){var e=CurvePath.prototype.toJSON.call(this);return e.currentPoint=this.currentPoint.toArray(),e},fromJSON:function(e){return CurvePath.prototype.fromJSON.call(this,e),this.currentPoint.fromArray(e.currentPoint),this}}),Shape.prototype=Object.assign(Object.create(Path.prototype),{constructor:Shape,getPointsHoles:function(e){for(var t=this,r=[],n=0,i=this.holes.length;n<i;n++)r[n]=t.holes[n].getPoints(e);return r},extractPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},copy:function(e){var t=this;Path.prototype.copy.call(this,e),this.holes=[];for(var r=0,n=e.holes.length;r<n;r++){var i=e.holes[r];t.holes.push(i.clone())}return this},toJSON:function(){var e=this,t=Path.prototype.toJSON.call(this);t.uuid=this.uuid,t.holes=[];for(var r=0,n=this.holes.length;r<n;r++){var i=e.holes[r];t.holes.push(i.toJSON())}return t},fromJSON:function(e){var t=this;Path.prototype.fromJSON.call(this,e),this.uuid=e.uuid,this.holes=[];for(var r=0,n=e.holes.length;r<n;r++){var i=e.holes[r];t.holes.push((new Path).fromJSON(i))}return this}}),Fog.prototype.isFog=!0,Fog.prototype.clone=function(){return new Fog(this.color.getHex(),this.near,this.far)},Fog.prototype.toJSON=function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}},FogExp2.prototype.isFogExp2=!0,FogExp2.prototype.clone=function(){return new FogExp2(this.color.getHex(),this.density)},FogExp2.prototype.toJSON=function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}},HemisphereLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:HemisphereLight,isHemisphereLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}),DirectionalLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:DirectionalLightShadow}),DirectionalLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:DirectionalLight,isDirectionalLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),RectAreaLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:RectAreaLight,isRectAreaLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.width=e.width,this.height=e.height,this},toJSON:function(e){var t=Light.prototype.toJSON.call(this,e);return t.object.width=this.width,t.object.height=this.height,t}}),PolyhedronGeometry.prototype=Object.create(Geometry.prototype),PolyhedronGeometry.prototype.constructor=PolyhedronGeometry,PolyhedronBufferGeometry.prototype=Object.create(BufferGeometry.prototype),PolyhedronBufferGeometry.prototype.constructor=PolyhedronBufferGeometry,TetrahedronGeometry.prototype=Object.create(Geometry.prototype),TetrahedronGeometry.prototype.constructor=TetrahedronGeometry,TetrahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype),TetrahedronBufferGeometry.prototype.constructor=TetrahedronBufferGeometry,OctahedronGeometry.prototype=Object.create(Geometry.prototype),OctahedronGeometry.prototype.constructor=OctahedronGeometry,OctahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype),OctahedronBufferGeometry.prototype.constructor=OctahedronBufferGeometry,IcosahedronGeometry.prototype=Object.create(Geometry.prototype),IcosahedronGeometry.prototype.constructor=IcosahedronGeometry,IcosahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype),IcosahedronBufferGeometry.prototype.constructor=IcosahedronBufferGeometry,DodecahedronGeometry.prototype=Object.create(Geometry.prototype),DodecahedronGeometry.prototype.constructor=DodecahedronGeometry,DodecahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype),DodecahedronBufferGeometry.prototype.constructor=DodecahedronBufferGeometry,TubeGeometry.prototype=Object.create(Geometry.prototype),TubeGeometry.prototype.constructor=TubeGeometry,TubeBufferGeometry.prototype=Object.create(BufferGeometry.prototype),TubeBufferGeometry.prototype.constructor=TubeBufferGeometry,TorusKnotGeometry.prototype=Object.create(Geometry.prototype),TorusKnotGeometry.prototype.constructor=TorusKnotGeometry,TorusKnotBufferGeometry.prototype=Object.create(BufferGeometry.prototype),TorusKnotBufferGeometry.prototype.constructor=TorusKnotBufferGeometry,TorusGeometry.prototype=Object.create(Geometry.prototype),TorusGeometry.prototype.constructor=TorusGeometry,TorusBufferGeometry.prototype=Object.create(BufferGeometry.prototype),TorusBufferGeometry.prototype.constructor=TorusBufferGeometry,ExtrudeGeometry.prototype=Object.create(Geometry.prototype),ExtrudeGeometry.prototype.constructor=ExtrudeGeometry,ExtrudeBufferGeometry.prototype=Object.create(BufferGeometry.prototype),ExtrudeBufferGeometry.prototype.constructor=ExtrudeBufferGeometry,ExtrudeBufferGeometry.prototype.getArrays=function(){var e=this.getAttribute("position"),t=e?Array.prototype.slice.call(e.array):[],r=this.getAttribute("uv"),n=r?Array.prototype.slice.call(r.array):[],i=this.index;return{position:t,uv:n,index:i?Array.prototype.slice.call(i.array):[]}},ExtrudeBufferGeometry.prototype.addShapeList=function(e,t){var r=this,n=e.length;t.arrays=this.getArrays();for(var i=0;i<n;i++){var a=e[i];r.addShape(a,t)}this.setIndex(t.arrays.index),this.addAttribute("position",new Float32BufferAttribute(t.arrays.position,3)),this.addAttribute("uv",new Float32BufferAttribute(t.arrays.uv,2))},ExtrudeBufferGeometry.prototype.addShape=function(e,t){function r(e,t,r){return t||console.error("ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(r).add(e)}function n(e,t,r){var n,i,a,o=e.x-t.x,s=e.y-t.y,c=r.x-e.x,l=r.y-e.y,u=o*o+s*s,h=o*l-s*c;if(Math.abs(h)>Number.EPSILON){var p=Math.sqrt(u),d=Math.sqrt(c*c+l*l),f=t.x-s/p,m=t.y+o/p,v=((r.x-l/d-f)*l-(r.y+c/d-m)*c)/(o*l-s*c),g=(n=f+o*v-e.x)*n+(i=m+s*v-e.y)*i;if(g<=2)return new Vector2(n,i);a=Math.sqrt(g/2)}else{var y=!1;o>Number.EPSILON?c>Number.EPSILON&&(y=!0):o<-Number.EPSILON?c<-Number.EPSILON&&(y=!0):Math.sign(s)===Math.sign(l)&&(y=!0),y?(n=-s,i=o,a=Math.sqrt(u)):(n=o,i=s,a=Math.sqrt(u/2))}return new Vector2(n/a,i/a)}function i(e,t){var r,n;for(Y=e.length;--Y>=0;){r=Y,(n=Y-1)<0&&(n=e.length-1);var i=0,a=T+2*w;for(i=0;i<a;i++){var o=H*i,c=H*(i+1);s(t+r+o,t+n+o,t+n+c,t+r+c)}}}function a(e,t,r){x.push(e),x.push(t),x.push(r)}function o(e,t,r){c(e),c(t),c(r);var n=v.length/3,i=E.generateTopUV(R,v,n-3,n-2,n-1);l(i[0]),l(i[1]),l(i[2])}function s(e,t,r,n){c(e),c(t),c(n),c(t),c(r),c(n);var i=v.length/3,a=E.generateSideWallUV(R,v,i-6,i-3,i-2,i-1);l(a[0]),l(a[1]),l(a[3]),l(a[1]),l(a[2]),l(a[3])}function c(e){g.push(v.length/3),v.push(x[3*e+0]),v.push(x[3*e+1]),v.push(x[3*e+2])}function l(e){y.push(e.x),y.push(e.y)}var u,h,p,d,f,m=t.arrays?t.arrays:this.getArrays(),v=m.position,g=m.index,y=m.uv,x=[],b=void 0!==t.amount?t.amount:100,_=void 0!==t.bevelThickness?t.bevelThickness:6,M=void 0!==t.bevelSize?t.bevelSize:_-2,w=void 0!==t.bevelSegments?t.bevelSegments:3,S=void 0===t.bevelEnabled||t.bevelEnabled,L=void 0!==t.curveSegments?t.curveSegments:12,T=void 0!==t.steps?t.steps:1,C=t.extrudePath,A=!1,E=void 0!==t.UVGenerator?t.UVGenerator:ExtrudeGeometry.WorldUVGenerator;C&&(u=C.getSpacedPoints(T),A=!0,S=!1,h=void 0!==t.frames?t.frames:C.computeFrenetFrames(T,!1),p=new Vector3,d=new Vector3,f=new Vector3),S||(w=0,_=0,M=0);var P,B,D,R=this,U=e.extractPoints(L),N=U.shape,G=U.holes;if(!ShapeUtils.isClockWise(N))for(N=N.reverse(),B=0,D=G.length;B<D;B++)P=G[B],ShapeUtils.isClockWise(P)&&(G[B]=P.reverse());var O=ShapeUtils.triangulateShape(N,G),I=N;for(B=0,D=G.length;B<D;B++)P=G[B],N=N.concat(P);for(var V,F,z,k,j,W,H=N.length,X=O.length,q=[],Y=0,Z=I.length,J=Z-1,K=Y+1;Y<Z;Y++,J++,K++)J===Z&&(J=0),K===Z&&(K=0),q[Y]=n(I[Y],I[J],I[K]);var Q,$=[],ee=q.concat();for(B=0,D=G.length;B<D;B++){for(P=G[B],Q=[],Y=0,J=(Z=P.length)-1,K=Y+1;Y<Z;Y++,J++,K++)J===Z&&(J=0),K===Z&&(K=0),Q[Y]=n(P[Y],P[J],P[K]);$.push(Q),ee=ee.concat(Q)}for(V=0;V<w;V++){for(z=V/w,k=_*Math.cos(z*Math.PI/2),F=M*Math.sin(z*Math.PI/2),Y=0,Z=I.length;Y<Z;Y++)a((j=r(I[Y],q[Y],F)).x,j.y,-k);for(B=0,D=G.length;B<D;B++)for(P=G[B],Q=$[B],Y=0,Z=P.length;Y<Z;Y++)a((j=r(P[Y],Q[Y],F)).x,j.y,-k)}for(F=M,Y=0;Y<H;Y++)j=S?r(N[Y],ee[Y],F):N[Y],A?(d.copy(h.normals[0]).multiplyScalar(j.x),p.copy(h.binormals[0]).multiplyScalar(j.y),f.copy(u[0]).add(d).add(p),a(f.x,f.y,f.z)):a(j.x,j.y,0);var te;for(te=1;te<=T;te++)for(Y=0;Y<H;Y++)j=S?r(N[Y],ee[Y],F):N[Y],A?(d.copy(h.normals[te]).multiplyScalar(j.x),p.copy(h.binormals[te]).multiplyScalar(j.y),f.copy(u[te]).add(d).add(p),a(f.x,f.y,f.z)):a(j.x,j.y,b/T*te);for(V=w-1;V>=0;V--){for(z=V/w,k=_*Math.cos(z*Math.PI/2),F=M*Math.sin(z*Math.PI/2),Y=0,Z=I.length;Y<Z;Y++)a((j=r(I[Y],q[Y],F)).x,j.y,b+k);for(B=0,D=G.length;B<D;B++)for(P=G[B],Q=$[B],Y=0,Z=P.length;Y<Z;Y++)j=r(P[Y],Q[Y],F),A?a(j.x,j.y+u[T-1].y,u[T-1].x+k):a(j.x,j.y,b+k)}!function(){var e=v.length/3;if(S){var t=0,r=H*t;for(Y=0;Y<X;Y++)o((W=O[Y])[2]+r,W[1]+r,W[0]+r);for(r=H*(t=T+2*w),Y=0;Y<X;Y++)o((W=O[Y])[0]+r,W[1]+r,W[2]+r)}else{for(Y=0;Y<X;Y++)o((W=O[Y])[2],W[1],W[0]);for(Y=0;Y<X;Y++)o((W=O[Y])[0]+H*T,W[1]+H*T,W[2]+H*T)}R.addGroup(e,v.length/3-e,0)}(),function(){var e=v.length/3,t=0;for(i(I,t),t+=I.length,B=0,D=G.length;B<D;B++)i(P=G[B],t),t+=P.length;R.addGroup(e,v.length/3-e,1)}(),t.arrays||(this.setIndex(g),this.addAttribute("position",new Float32BufferAttribute(v,3)),this.addAttribute("uv",new Float32BufferAttribute(y,2)))},ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,r,n,i){var a=t[3*r],o=t[3*r+1],s=t[3*n],c=t[3*n+1],l=t[3*i],u=t[3*i+1];return[new Vector2(a,o),new Vector2(s,c),new Vector2(l,u)]},generateSideWallUV:function(e,t,r,n,i,a){var o=t[3*r],s=t[3*r+1],c=t[3*r+2],l=t[3*n],u=t[3*n+1],h=t[3*n+2],p=t[3*i],d=t[3*i+1],f=t[3*i+2],m=t[3*a],v=t[3*a+1],g=t[3*a+2];return Math.abs(s-u)<.01?[new Vector2(o,1-c),new Vector2(l,1-h),new Vector2(p,1-f),new Vector2(m,1-g)]:[new Vector2(s,1-c),new Vector2(u,1-h),new Vector2(d,1-f),new Vector2(v,1-g)]}},TextGeometry.prototype=Object.create(Geometry.prototype),TextGeometry.prototype.constructor=TextGeometry,TextBufferGeometry.prototype=Object.create(ExtrudeBufferGeometry.prototype),TextBufferGeometry.prototype.constructor=TextBufferGeometry,RingGeometry.prototype=Object.create(Geometry.prototype),RingGeometry.prototype.constructor=RingGeometry,RingBufferGeometry.prototype=Object.create(BufferGeometry.prototype),RingBufferGeometry.prototype.constructor=RingBufferGeometry,LatheGeometry.prototype=Object.create(Geometry.prototype),LatheGeometry.prototype.constructor=LatheGeometry,LatheBufferGeometry.prototype=Object.create(BufferGeometry.prototype),LatheBufferGeometry.prototype.constructor=LatheBufferGeometry,ShapeGeometry.prototype=Object.create(Geometry.prototype),ShapeGeometry.prototype.constructor=ShapeGeometry,ShapeGeometry.prototype.toJSON=function(){var e=Geometry.prototype.toJSON.call(this);return toJSON(this.parameters.shapes,e)},ShapeBufferGeometry.prototype=Object.create(BufferGeometry.prototype),ShapeBufferGeometry.prototype.constructor=ShapeBufferGeometry,ShapeBufferGeometry.prototype.toJSON=function(){var e=BufferGeometry.prototype.toJSON.call(this);return toJSON(this.parameters.shapes,e)},EdgesGeometry.prototype=Object.create(BufferGeometry.prototype),EdgesGeometry.prototype.constructor=EdgesGeometry,CylinderGeometry.prototype=Object.create(Geometry.prototype),CylinderGeometry.prototype.constructor=CylinderGeometry,CylinderBufferGeometry.prototype=Object.create(BufferGeometry.prototype),CylinderBufferGeometry.prototype.constructor=CylinderBufferGeometry,ConeGeometry.prototype=Object.create(CylinderGeometry.prototype),ConeGeometry.prototype.constructor=ConeGeometry,ConeBufferGeometry.prototype=Object.create(CylinderBufferGeometry.prototype),ConeBufferGeometry.prototype.constructor=ConeBufferGeometry,CircleGeometry.prototype=Object.create(Geometry.prototype),CircleGeometry.prototype.constructor=CircleGeometry,CircleBufferGeometry.prototype=Object.create(BufferGeometry.prototype),CircleBufferGeometry.prototype.constructor=CircleBufferGeometry;var Geometries={WireframeGeometry:WireframeGeometry,TetrahedronGeometry:TetrahedronGeometry,TetrahedronBufferGeometry:TetrahedronBufferGeometry,OctahedronGeometry:OctahedronGeometry,OctahedronBufferGeometry:OctahedronBufferGeometry,IcosahedronGeometry:IcosahedronGeometry,IcosahedronBufferGeometry:IcosahedronBufferGeometry,DodecahedronGeometry:DodecahedronGeometry,DodecahedronBufferGeometry:DodecahedronBufferGeometry,PolyhedronGeometry:PolyhedronGeometry,PolyhedronBufferGeometry:PolyhedronBufferGeometry,TubeGeometry:TubeGeometry,TubeBufferGeometry:TubeBufferGeometry,TorusKnotGeometry:TorusKnotGeometry,TorusGeometry:TorusGeometry,TorusBufferGeometry:TorusBufferGeometry,TextGeometry:TextGeometry,TextBufferGeometry:TextBufferGeometry,SphereGeometry:SphereGeometry,SphereBufferGeometry:SphereBufferGeometry,RingGeometry:RingGeometry,RingBufferGeometry:RingBufferGeometry,PlaneGeometry:PlaneGeometry,PlaneBufferGeometry:PlaneBufferGeometry,LatheGeometry:LatheGeometry,LatheBufferGeometry:LatheBufferGeometry,ShapeGeometry:ShapeGeometry,ShapeBufferGeometry:ShapeBufferGeometry,ExtrudeGeometry:ExtrudeGeometry,ExtrudeBufferGeometry:ExtrudeBufferGeometry,EdgesGeometry:EdgesGeometry,ConeGeometry:ConeGeometry,ConeBufferGeometry:ConeBufferGeometry,CylinderGeometry:CylinderGeometry,CylinderBufferGeometry:CylinderBufferGeometry,CircleGeometry:CircleGeometry,CircleBufferGeometry:CircleBufferGeometry,BoxGeometry:BoxGeometry,BoxBufferGeometry:BoxBufferGeometry};Object.assign(ObjectLoader.prototype,{load:function(e,t,r,n){""===this.texturePath&&(this.texturePath=e.substring(0,e.lastIndexOf("/")+1));var i=this;new FileLoader(i.manager).load(e,function(r){var a=null;try{a=JSON.parse(r)}catch(t){return void 0!==n&&n(t),void console.error("THREE:ObjectLoader: Can't parse "+e+".",t.message)}var o=a.metadata;if(void 0===o||void 0===o.type||"geometry"===o.type.toLowerCase())return void console.error("ObjectLoader: Can't load "+e+". Use JSONLoader instead.");i.parse(a,t)},r,n)},setTexturePath:function(e){this.texturePath=e},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e,t){var r=this.parseShape(e.shapes),n=this.parseGeometries(e.geometries,r),i=this.parseImages(e.images,function(){void 0!==t&&t(s)}),a=this.parseTextures(e.textures,i),o=this.parseMaterials(e.materials,a),s=this.parseObject(e.object,n,o);return e.animations&&(s.animations=this.parseAnimations(e.animations)),void 0!==e.images&&0!==e.images.length||void 0!==t&&t(s),s},parseShape:function(e){var t={};if(void 0!==e)for(var r=0,n=e.length;r<n;r++){var i=(new Shape).fromJSON(e[r]);t[i.uuid]=i}return t},parseGeometries:function(e,t){var r=this,n={};if(void 0!==e)for(var i=new JSONLoader,a=new BufferGeometryLoader,o=0,s=e.length;o<s;o++){var c,l=e[o];switch(l.type){case"PlaneGeometry":case"PlaneBufferGeometry":c=new Geometries[l.type](l.width,l.height,l.widthSegments,l.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":c=new Geometries[l.type](l.width,l.height,l.depth,l.widthSegments,l.heightSegments,l.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":c=new Geometries[l.type](l.radius,l.segments,l.thetaStart,l.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":c=new Geometries[l.type](l.radiusTop,l.radiusBottom,l.height,l.radialSegments,l.heightSegments,l.openEnded,l.thetaStart,l.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":c=new Geometries[l.type](l.radius,l.height,l.radialSegments,l.heightSegments,l.openEnded,l.thetaStart,l.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":c=new Geometries[l.type](l.radius,l.widthSegments,l.heightSegments,l.phiStart,l.phiLength,l.thetaStart,l.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":c=new Geometries[l.type](l.radius,l.detail);break;case"RingGeometry":case"RingBufferGeometry":c=new Geometries[l.type](l.innerRadius,l.outerRadius,l.thetaSegments,l.phiSegments,l.thetaStart,l.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":c=new Geometries[l.type](l.radius,l.tube,l.radialSegments,l.tubularSegments,l.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":c=new Geometries[l.type](l.radius,l.tube,l.tubularSegments,l.radialSegments,l.p,l.q);break;case"LatheGeometry":case"LatheBufferGeometry":c=new Geometries[l.type](l.points,l.segments,l.phiStart,l.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":c=new Geometries[l.type](l.vertices,l.indices,l.radius,l.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":for(var u=[],o=0,s=l.shapes.length;o<s;o++){var h=t[l.shapes[o]];u.push(h)}c=new Geometries[l.type](u,l.curveSegments);break;case"BufferGeometry":c=a.parse(l);break;case"Geometry":c=i.parse(l,r.texturePath).geometry;break;default:console.warn('ObjectLoader: Unsupported geometry type "'+l.type+'"');continue}c.uuid=l.uuid,void 0!==l.name&&(c.name=l.name),n[l.uuid]=c}return n},parseMaterials:function(e,t){var r={};if(void 0!==e){var n=new MaterialLoader;n.setTextures(t);for(var i=0,a=e.length;i<a;i++){var o=e[i];if("MultiMaterial"===o.type){for(var s=[],c=0;c<o.materials.length;c++)s.push(n.parse(o.materials[c]));r[o.uuid]=s}else r[o.uuid]=n.parse(o)}}return r},parseAnimations:function(e){for(var t=[],r=0;r<e.length;r++){var n=AnimationClip.parse(e[r]);t.push(n)}return t},parseImages:function(e,t){var r=this,n={};if(void 0!==e&&e.length>0){var i=new ImageLoader(new LoadingManager(t));i.setCrossOrigin(this.crossOrigin);for(var a=0,o=e.length;a<o;a++){var s=e[a],c=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(s.url)?s.url:r.texturePath+s.url;n[s.uuid]=function(e){return r.manager.itemStart(e),i.load(e,function(){r.manager.itemEnd(e)},void 0,function(){r.manager.itemEnd(e),r.manager.itemError(e)})}(c)}}return n},parseTextures:function(e,t){function r(e,t){return"number"==typeof e?e:(console.warn("ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}var n={};if(void 0!==e)for(var i=0,a=e.length;i<a;i++){var o=e[i];void 0===o.image&&console.warn('ObjectLoader: No "image" specified for',o.uuid),void 0===t[o.image]&&console.warn("ObjectLoader: Undefined image",o.image);var s=new Texture(t[o.image]);s.needsUpdate=!0,s.uuid=o.uuid,void 0!==o.name&&(s.name=o.name),void 0!==o.mapping&&(s.mapping=r(o.mapping,TEXTURE_MAPPING)),void 0!==o.offset&&s.offset.fromArray(o.offset),void 0!==o.repeat&&s.repeat.fromArray(o.repeat),void 0!==o.center&&s.center.fromArray(o.center),void 0!==o.rotation&&(s.rotation=o.rotation),void 0!==o.wrap&&(s.wrapS=r(o.wrap[0],TEXTURE_WRAPPING),s.wrapT=r(o.wrap[1],TEXTURE_WRAPPING)),void 0!==o.format&&(s.format=o.format),void 0!==o.minFilter&&(s.minFilter=r(o.minFilter,TEXTURE_FILTER)),void 0!==o.magFilter&&(s.magFilter=r(o.magFilter,TEXTURE_FILTER)),void 0!==o.anisotropy&&(s.anisotropy=o.anisotropy),void 0!==o.flipY&&(s.flipY=o.flipY),n[o.uuid]=s}return n},parseObject:function(e,t,r){function n(e){return void 0===t[e]&&console.warn("ObjectLoader: Undefined geometry",e),t[e]}function i(e){if(void 0!==e){if(Array.isArray(e)){for(var t=[],n=0,i=e.length;n<i;n++){var a=e[n];void 0===r[a]&&console.warn("ObjectLoader: Undefined material",a),t.push(r[a])}return t}return void 0===r[e]&&console.warn("ObjectLoader: Undefined material",e),r[e]}}var a,o=this;switch(e.type){case"Scene":a=new Scene,void 0!==e.background&&Number.isInteger(e.background)&&(a.background=new Color(e.background)),void 0!==e.fog&&("Fog"===e.fog.type?a.fog=new Fog(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(a.fog=new FogExp2(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":a=new PerspectiveCamera(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(a.focus=e.focus),void 0!==e.zoom&&(a.zoom=e.zoom),void 0!==e.filmGauge&&(a.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(a.filmOffset=e.filmOffset),void 0!==e.view&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new OrthographicCamera(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(a.zoom=e.zoom),void 0!==e.view&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new AmbientLight(e.color,e.intensity);break;case"DirectionalLight":a=new DirectionalLight(e.color,e.intensity);break;case"PointLight":a=new PointLight(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new RectAreaLight(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new SpotLight(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":a=new HemisphereLight(e.color,e.groundColor,e.intensity);break;case"SkinnedMesh":console.warn("ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":var s=n(e.geometry),c=i(e.material);a=s.bones&&s.bones.length>0?new SkinnedMesh(s,c):new Mesh(s,c);break;case"LOD":a=new LOD;break;case"Line":a=new Line(n(e.geometry),i(e.material),e.mode);break;case"LineLoop":a=new LineLoop(n(e.geometry),i(e.material));break;case"LineSegments":a=new LineSegments(n(e.geometry),i(e.material));break;case"PointCloud":case"Points":a=new Points(n(e.geometry),i(e.material));break;case"Sprite":a=new Sprite(i(e.material));break;case"Group":a=new Group;break;default:a=new Object3D}if(a.uuid=e.uuid,void 0!==e.name&&(a.name=e.name),void 0!==e.matrix?(a.matrix.fromArray(e.matrix),a.matrix.decompose(a.position,a.quaternion,a.scale)):(void 0!==e.position&&a.position.fromArray(e.position),void 0!==e.rotation&&a.rotation.fromArray(e.rotation),void 0!==e.quaternion&&a.quaternion.fromArray(e.quaternion),void 0!==e.scale&&a.scale.fromArray(e.scale)),void 0!==e.castShadow&&(a.castShadow=e.castShadow),void 0!==e.receiveShadow&&(a.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(a.shadow.bias=e.shadow.bias),void 0!==e.shadow.radius&&(a.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&a.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(a.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(a.visible=e.visible),void 0!==e.frustumCulled&&(a.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(a.renderOrder=e.renderOrder),void 0!==e.userData&&(a.userData=e.userData),void 0!==e.children)for(var l=e.children,u=0;u<l.length;u++)a.add(o.parseObject(l[u],t,r));if("LOD"===e.type)for(var h=e.levels,p=0;p<h.length;p++){var d=h[p],f=a.getObjectByProperty("uuid",d.object);void 0!==f&&a.addLevel(f,d.distance)}return a}});var TEXTURE_MAPPING={UVMapping:UVMapping,CubeReflectionMapping:CubeReflectionMapping,CubeRefractionMapping:CubeRefractionMapping,EquirectangularReflectionMapping:EquirectangularReflectionMapping,EquirectangularRefractionMapping:EquirectangularRefractionMapping,SphericalReflectionMapping:SphericalReflectionMapping,CubeUVReflectionMapping:CubeUVReflectionMapping,CubeUVRefractionMapping:CubeUVRefractionMapping},TEXTURE_WRAPPING={RepeatWrapping:RepeatWrapping,ClampToEdgeWrapping:ClampToEdgeWrapping,MirroredRepeatWrapping:MirroredRepeatWrapping},TEXTURE_FILTER={NearestFilter:NearestFilter,NearestMipMapNearestFilter:NearestMipMapNearestFilter,NearestMipMapLinearFilter:NearestMipMapLinearFilter,LinearFilter:LinearFilter,LinearMipMapNearestFilter:LinearMipMapNearestFilter,LinearMipMapLinearFilter:LinearMipMapLinearFilter};CubeTexture.prototype=Object.create(Texture.prototype),CubeTexture.prototype.constructor=CubeTexture,CubeTexture.prototype.isCubeTexture=!0,Object.defineProperty(CubeTexture.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}});var emptyTexture=new Texture,emptyCubeTexture=new CubeTexture,arrayCacheF32=[],arrayCacheI32=[],mat4array=new Float32Array(16),mat3array=new Float32Array(9);StructuredUniform.prototype.setValue=function(e,t){for(var r=this.seq,n=0,i=r.length;n!==i;++n){var a=r[n];a.setValue(e,t[a.id])}};var RePathPart=/([\w\d_]+)(\])?(\[|\.)?/g;WebGLUniforms.prototype.setValue=function(e,t,r){var n=this.map[t];void 0!==n&&n.setValue(e,r,this.renderer)},WebGLUniforms.prototype.setOptional=function(e,t,r){var n=t[r];void 0!==n&&this.setValue(e,r,n)},WebGLUniforms.upload=function(e,t,r,n){for(var i=0,a=t.length;i!==a;++i){var o=t[i],s=r[o.id];!1!==s.needsUpdate&&o.setValue(e,s.value,n)}},WebGLUniforms.seqWithValue=function(e,t){for(var r=[],n=0,i=e.length;n!==i;++n){var a=e[n];a.id in t&&r.push(a)}return r};var programIdCount=0,count=0;CanvasTexture.prototype=Object.create(Texture.prototype),CanvasTexture.prototype.constructor=CanvasTexture,ArrayCamera.prototype=Object.assign(Object.create(PerspectiveCamera.prototype),{constructor:ArrayCamera,isArrayCamera:!0}),DepthTexture.prototype=Object.create(Texture.prototype),DepthTexture.prototype.constructor=DepthTexture,DepthTexture.prototype.isDepthTexture=!0;export{BufferGeometryUtils,CinematicCamera,OrbitControls,Detector,Wireframe,WireframeGeometry2,PDBLoader,SpriteCanvasMaterial,CanvasRenderer,SoftwareRenderer,BokehShader,DigitalGlitch,FilmShader,OrthographicCamera,PerspectiveCamera,BufferGeometry,Clock,Geometry,InstancedBufferAttribute,InstancedBufferGeometry,InstancedInterleavedBuffer,Object3D,ShapeUtils,BoxGeometry,BoxBufferGeometry,SphereGeometry,SphereBufferGeometry,AmbientLight,PointLight,SpotLight,BufferGeometryLoader,Cache,FileLoader,ImageLoader,JSONLoader,Loader,LoaderUtils,DefaultLoadingManager,LoadingManager,MaterialLoader,ObjectLoader,TextureLoader,Material,MeshBasicMaterial,MeshNormalMaterial,MeshPhongMaterial,ShaderMaterial,ShadowMaterial,Color,Plane,Quaternion,Ray,Sphere,Vector3,Group,Mesh,Points,UniformsLib,UniformsUtils,WebGLRenderer,WebGLRenderTarget,Fog,Scene,DepthTexture,Texture};
